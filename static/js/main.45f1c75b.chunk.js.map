{"version":3,"sources":["assets/img/theme/team-1-800x800.jpg","assets/img/brand/argon-react.png","assets/img/theme/profile-cover.jpg","../node_modules/typescript/lib sync","assets/img/brand/argon-react-white.png","components/Navbars/AdminNavbar.jsx","components/Footers/AdminFooter.jsx","components/Sidebar/Sidebar.jsx","variables/charts.jsx","components/Headers/Header.jsx","views/Index.jsx","components/Headers/UserHeader.jsx","Datepicker.jsx","views/examples/Profile.jsx","Tire.js","views/examples/ModalTrxDelConfirm.jsx","views/examples/ModalEditTrxSatis.jsx","views/examples/SatisDataTable.jsx","views/examples/Satis.jsx","views/examples/ModalEditDefinition.jsx","views/examples/ModalInformation.jsx","views/examples/Tanim.jsx","views/examples/ModalEditTrxAlis.jsx","views/examples/AlisDataTable.jsx","views/examples/Alis.jsx","routes.js","layouts/Admin.jsx","components/Navbars/AuthNavbar.jsx","components/Footers/AuthFooter.jsx","layouts/Auth.jsx","index.js","assets/img/theme/sketch.jpg"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","AdminNavbar","React","Component","render","Navbar","className","expand","Container","fluid","Link","to","this","props","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","DropdownMenu","DropdownItem","header","tag","divider","href","onClick","preventDefault","Footer","Row","Col","xl","rel","target","NavItem","NavLink","Sidebar","constructor","super","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","layout","path","NavLinkRRD","activeClassName","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","bgColor","logo","navbarBrandProps","innerLink","outterLink","type","NavbarBrand","imgAlt","imgSrc","aria-labelledby","right","Collapse","isOpen","xs","Form","InputGroup","Input","aria-label","placeholder","InputGroupAddon","addonType","InputGroupText","defaultProps","Chart","MonthNames","elements","Rectangle","prototype","draw","left","top","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","index","corner","moveTo","i","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","success","danger","warning","findMonthLabels","labelArray","curDate","Date","curMonth","getMonth","curYear","getFullYear","_month","_year","label","concat","String","substring","push","chartAylikCiroBazli","options","scales","yAxes","gridLines","color","zeroLineColor","ticks","callback","value","tooltips","callbacks","item","data","datasets","datasetIndex","yLabel","content","length","labels","chartAylikAdetBazli","Header","db","Stitch","initializeDefaultAppClient","getServiceClient","RemoteMongoClient","factory","Index","activeNav","chartExample1Data","chartAylikCiroBazliOrnek","barChart","lineChart","tires","filterArrayMarka","filterApplied","toggleNavs","wow","console","log","setTimeout","getStockData","filter","collection","find","toArray","then","dbResults","Set","marka","sort","catch","error","findAylikBazliSatislar","aylikSatislarAdet","aylikSatislarCiro","satisAdetArray","satisCiroArray","monthsForGraphs","months","m","substr","monthsToDisplayInGraphs","forEach","satis","tarih","satisAdet","birimFiyat","Number","_satisAdeti","applyFilter","event","filterObj","currentTarget","textContent","includes","componentWillMount","window","parseOptions","parent","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","maxBarThickness","chartOptions","distinctFilterMarkaValues","renderMarkaFilterOptions","element","renderStokTableRows","tire","stockPerc","stokAdet","ebat","taban","oran","jant","yukEndeksi","hizEndeksi","tooltipID","_id","toString","rowId","otherInfo","yanakYapisi","mevsim","diger","ortMaliyet","isInteger","toFixed","ortFiyat","infoIcon","ebatIcon","scope","model","UncontrolledTooltip","delay","filterIcon","Object","Card","CardHeader","CardBody","getDatasetAtEvent","Table","direction","UserHeader","Datepicker","handleChange","val","moment","isValid","format","onChange","componentWillUpdate","FormGroup","inputProps","timeFormat","closeOnSelect","dateFormat","Profile","Button","size","lg","for","htmlFor","defaultValue","rows","Tire","owner_id","desen","mainInfo","fullInfo","idInfoToString","ModalTrxDelConfirm","toggleModal","isOnScreen","toggleFunc","modalStateName","confirmPressed","confirmFunc","headerTitle","mainTitle","question","confirmButtonName","forTire","componentDidMount","Modal","contentClassName","toggle","backdrop","data-dismiss","aria-hidden","ModalEditTrxSatis","numInputChanged","input","stokAdeti","dateChanged","editedDate","saveUpdates","eskiAdet","trx","eskiTotFiyat","document","getElementById","editFunc","title","row","sm","max","SatisDataTable","addMarkaFilter","filterFunc","addTarihFilter","renderColumnTitles","columnTitles","thKey","filterId","renderTarihFilterOptions","isEditModalVisible","markaFilterOptions","tarihFilterOptions","renderRows","tireTemp","saleTrx","dbRowId","deleteModalTitle","editPopupTitle","editModalStateName","maxAdet","isConfirmModalVisible","deleteModalStateName","client","getAppClient","auth","loginWithCredential","AnonymousCredential","user","formatTRY","Intl","NumberFormat","style","currency","minimumFractionDigits","Satis","adetChanged","_satisAdet","toplamFiyat","birimKdvsiz","toplamKdvsiz","isNaN","inputBirimChanged","karOrani","parseInt","inputToplamChanged","inputDateChanged","selectedDate","inputSetCorrectlyFor","inputField","decision","saveButtonPressed","selectedBrand","selectedModel","selectedTaban","selectedOran","selectedJant","selectedYuk","selectedHiz","selectedYanak","selectedMevsim","selectedOther","allInputsSetCorrectly","setCorrect","tempArray","wrongInputs","saveSale","_tarih","_marka","_model","_taban","_oran","_jant","_yukEndeksi","_hizEndeksi","_yanakYapisi","_mevsim","_diger","_birimFiyat","today","getDate","padStart","insertOne","remoteResult","insertedId","refreshSalesTable","alert","tireSold","updateStockWithSale","fiyat","count","tireReturned","newOrtFiyat","findOneAndReplace","DocumentT","editSale","editedTrx","DocumentX","stockTire2beUpdated","findOne","DocumentU","modalEditSale","deleteSale","findOneAndDelete","deletedSaleCost","deletedSaleCount","modalDeleteSale","results","stokResults","sales","distinctFilterTarihValues","filterArrayTarih","anOptionSelected","_selOpt","_selVal","queryResulted1","queryFilterOptions","tireSelected","gnlKarOrani","ortKarOrani","uniqueMarkaValues","uniqueModelValues","uniqueTabanValues","uniqueOranValues","uniqueJantValues","uniqueYukValues","uniqueHizValues","uniqueYanakValues","uniqueMevsimValues","uniqueDigerValues","definedBrands","modelsForTheBrand","tabansForSelection","oransForSelection","jantsForSelection","yukEndeksForSelection","hizEndeksForSelection","yanaksForSelection","mevsimsForSelection","resetForm","displayOptions","varArray","varOptionText","unshift","undefined","distinctMarkaValues","distinctModelValues","distinctTabanValues","distinctOranValues","distinctJantValues","distinctYukValues","distinctHizValues","distinctYanakValues","distinctMevsimValues","distinctDigerValues","block","disabled","ModalEditDefinition","curVisiblity","tire2Save","t1","step","maxLength","ModalInformation","Tanim","updateTireInDB","modalEditTire","refreshInventoryTable","deleteTireFromDB","modalDeleteTire","displayError","err","message","modalError","errorMsg","toggleEditModal","setModalInterComp","modalState","shouldBeVisible","maxStock","insertNewTire","inputTyped","displayInventory","tableRows","renderStockData","ModalEditTrxAlis","alisAdet","eskiTotMaliyet","birimMaliyet","AlisDataTable","purchaseTrx","Alis","levelforOption","optionName","findLevelAfterDeselect","obj","selOpt","returnValue","toplamMaliyet","inputDateChanged2","formattedValue","selectedDate2","formattedDate2","savePurchase","_birimMaliyet","_alisAdet","refreshPurchaseTable","tirePurchased","updateStockWithPurchase","newOrtMaliyet","editPurchase","modalEditPurchase","deletePurchase","deletedPurchaseCost","deletedPurchaseCount","modalDeletePurchase","purchases","modelSelected","uniqueValues","component","Admin","getRoutes","Route","getBrandText","componentDidUpdate","documentElement","scrollTop","scrollingElement","refs","mainContent","ref","Switch","AdminFooter","UncontrolledCollapse","toggler","Login","Auth","body","classList","add","componentWillUnmount","remove","AuthNavbar","md","xmlns","preserveAspectRatio","version","viewBox","points","AuthFooter","ReactDOM","BrowserRouter","Redirect","from"],"mappings":";mHAAAA,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,4HCA3CD,EAAOC,QAAU,IAA0B,2C,8JCA3C,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBO,GAAK,K,wCCRzBT,EAAOC,QAAU,IAA0B,+C,yNCqC3C,MAAMS,UAAoBC,IAAMC,UAC9BC,SACE,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,UAAU,yBAAyBC,OAAO,KAAKP,GAAG,eACxD,kBAACQ,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CACEJ,UAAU,6DACVK,GAAG,KAEFC,KAAKC,MAAMC,WAcd,kBAACC,EAAA,EAAD,CAAKT,UAAU,sCAAsCU,QAAM,GACzD,kBAACC,EAAA,EAAD,CAAsBC,KAAG,GACvB,kBAACC,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,kBAACE,EAAA,EAAD,CAAOd,UAAU,sBACf,0BAAMA,UAAU,mCACd,yBACEe,IAAI,MACJC,IAAKC,EAAQ,QAGjB,kBAACH,EAAA,EAAD,CAAOd,UAAU,0BACf,0BAAMA,UAAU,iCAAhB,uBAMN,kBAACkB,EAAA,EAAD,CAAclB,UAAU,uBACtB,kBAACmB,EAAA,EAAD,CAAcnB,UAAU,aAAaoB,QAAM,EAACC,IAAI,OAC9C,wBAAIrB,UAAU,qBAAd,aAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,oBACb,6CAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,2BACb,2CAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,2BACb,2CAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,qBACb,0CAEF,kBAACmB,EAAA,EAAD,CAAcG,SAAO,IACrB,kBAACH,EAAA,EAAD,CAAcI,KAAK,SAASC,QAASnC,GAAKA,EAAEoC,kBAC1C,uBAAGzB,UAAU,mBACb,gDAYLL,Q,oCC1Ff,MAAM+B,UAAe9B,IAAMC,UACzBC,SACE,OACE,4BAAQE,UAAU,UAChB,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,iDACb,kBAAC4B,EAAA,EAAD,CAAKC,GAAG,KACN,yBAAK7B,UAAU,iDAAf,YACS,IACP,uBACEA,UAAU,wBACVuB,KAAK,oDACLO,IAAI,sBACJC,OAAO,UAJT,kBAWJ,kBAACH,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACpB,EAAA,EAAD,CAAKT,UAAU,4DACb,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEV,KAAK,oDACLO,IAAI,sBACJC,OAAO,UAHT,iBASF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEV,KAAK,iEACLO,IAAI,sBACJC,OAAO,UAHT,aASF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEV,KAAK,oDACLO,IAAI,sBACJC,OAAO,UAHT,SASF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEV,KAAK,qGACLO,IAAI,sBACJC,OAAO,UAHT,qBAgBDL,Q,wECnCf,MAAMQ,UAAgBtC,IAAMC,UAI1BsC,YAAY5B,GACV6B,MAAM7B,GADW,KAHnB8B,MAAQ,CACNC,cAAc,GAEG,KASnBC,eAAiB,KACfjC,KAAKkC,SAAS,CACZF,cAAehC,KAAK+B,MAAMC,gBAXX,KAenBG,cAAgB,KACdnC,KAAKkC,SAAS,CACZF,cAAc,KAjBC,KAqBnBI,YAAcC,GACLA,EAAOC,IAAI,CAACC,EAAMC,IAErB,kBAACd,EAAA,EAAD,CAASc,IAAKA,GACZ,kBAACb,EAAA,EAAD,CACE5B,GAAIwC,EAAKE,OAASF,EAAKG,KACvB3B,IAAK4B,IACLzB,QAASlB,KAAKmC,cACdS,gBAAgB,UAEhB,uBAAGlD,UAAW6C,EAAKM,OAClBN,EAAKO,QA9Bd9C,KAAK+C,YAAYC,KAAKhD,MAGxB+C,YAAYE,GACV,OAAOjD,KAAKC,MAAMiD,SAASC,SAASC,QAAQH,IAAc,EAAI,SAAW,GAgC3EzD,SAAU,MAAD,EAC2BQ,KAAKC,MAAtBoC,GADV,EACCgB,QADD,EACUhB,QAAQiB,EADlB,EACkBA,KACzB,IAAIC,EAYJ,OAXID,GAAQA,EAAKE,UACfD,EAAmB,CACjBxD,GAAIuD,EAAKE,UACTzC,IAAKjB,KAEEwD,GAAQA,EAAKG,aACtBF,EAAmB,CACjBtC,KAAMqC,EAAKG,WACXhC,OAAQ,WAIV,kBAAChC,EAAA,EAAD,CACEC,UAAU,mDACVC,OAAO,KACPP,GAAG,gBAEH,kBAACQ,EAAA,EAAD,CAAWC,OAAK,GAEd,4BACEH,UAAU,iBACVgE,KAAK,SACLxC,QAASlB,KAAKiC,gBAEd,0BAAMvC,UAAU,yBAGjB4D,EACC,kBAACK,EAAA,EAAD,eAAajE,UAAU,QAAW6D,GAChC,yBACE9C,IAAK6C,EAAKM,OACVlE,UAAU,mBACVgB,IAAK4C,EAAKO,UAGZ,KAEJ,kBAAC1D,EAAA,EAAD,CAAKT,UAAU,gCACb,kBAACW,EAAA,EAAD,CAAsBC,KAAG,GACvB,kBAACC,EAAA,EAAD,CAAgBD,KAAG,EAACZ,UAAU,iBAC5B,uBAAGA,UAAU,mBAEf,kBAACkB,EAAA,EAAD,CACEkD,kBAAgB,4BAChBpE,UAAU,sBACVqE,OAAK,GAEL,kBAAClD,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,CAAcG,SAAO,IACrB,kBAACH,EAAA,EAAD,8BAGJ,kBAACR,EAAA,EAAD,CAAsBC,KAAG,GACvB,kBAACC,EAAA,EAAD,CAAgBD,KAAG,GACjB,kBAACE,EAAA,EAAD,CAAOd,UAAU,sBACf,0BAAMA,UAAU,mCACd,yBACEe,IAAI,MACJC,IAAKC,EAAQ,UAKrB,kBAACC,EAAA,EAAD,CAAclB,UAAU,sBAAsBqE,OAAK,GACjD,kBAAClD,EAAA,EAAD,CAAcnB,UAAU,aAAaoB,QAAM,EAACC,IAAI,OAC9C,wBAAIrB,UAAU,qBAAd,aAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,oBACb,6CAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,2BACb,2CAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,2BACb,2CAEF,kBAACmB,EAAA,EAAD,CAAcd,GAAG,sBAAsBgB,IAAKjB,KAC1C,uBAAGJ,UAAU,qBACb,0CAEF,kBAACmB,EAAA,EAAD,CAAcG,SAAO,IACrB,kBAACH,EAAA,EAAD,CAAcI,KAAK,SAASC,QAASnC,GAAKA,EAAEoC,kBAC1C,uBAAGzB,UAAU,mBACb,4CAMR,kBAACsE,EAAA,EAAD,CAAU5D,QAAM,EAAC6D,OAAQjE,KAAK+B,MAAMC,cAElC,yBAAKtC,UAAU,oCACb,kBAAC2B,EAAA,EAAD,KACGiC,EACC,kBAAChC,EAAA,EAAD,CAAK5B,UAAU,iBAAiBwE,GAAG,KAChCZ,EAAKE,UACJ,kBAAC1D,EAAA,EAAD,CAAMC,GAAIuD,EAAKE,WACb,yBAAK/C,IAAK6C,EAAKM,OAAQlD,IAAK4C,EAAKO,UAGnC,uBAAG5C,KAAMqC,EAAKG,YACZ,yBAAKhD,IAAK6C,EAAKM,OAAQlD,IAAK4C,EAAKO,WAIrC,KACJ,kBAACvC,EAAA,EAAD,CAAK5B,UAAU,iBAAiBwE,GAAG,KACjC,4BACExE,UAAU,iBACVgE,KAAK,SACLxC,QAASlB,KAAKiC,gBAEd,+BACA,mCAMR,kBAACkC,EAAA,EAAD,CAAMzE,UAAU,uBACd,kBAAC0E,EAAA,EAAD,CAAY1E,UAAU,yCACpB,kBAAC2E,EAAA,EAAD,CACEC,aAAW,SACX5E,UAAU,8CACV6E,YAAY,SACZb,KAAK,WAEP,kBAACc,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,0BAAMhF,UAAU,qBAMxB,kBAACS,EAAA,EAAD,CAAKC,QAAM,GAAEJ,KAAKoC,YAAYC,IAE9B,wBAAI3C,UAAU,SAEd,wBAAIA,UAAU,6BAAd,iBAEA,kBAACS,EAAA,EAAD,CAAKT,UAAU,UAAUU,QAAM,GAC7B,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASV,KAAK,qGACZ,uBAAGvB,UAAU,oBADf,oBAKF,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASV,KAAK,mGACZ,uBAAGvB,UAAU,kBADf,eAKF,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASV,KAAK,mGACZ,uBAAGvB,UAAU,gBADf,oBAahBkC,EAAQ+C,aAAe,CACrBtC,OAAQ,CAAC,KAoBIT,Q,wGC3Qf,MAAMgD,EAAQjE,EAAQ,IAChBkE,EAAY,CAAC,MAAM,WAAM,MAAM,MAAM,MAAM,MAAM,MAAM,WAAM,MAAM,MAAM,MAAM,OAMrFD,EAAME,SAASC,UAAUC,UAAUC,KAAO,WACxC,IAEIC,EAAMnB,EAAOoB,EAAKC,EAAQC,EAAOC,EAAOC,EAFxCC,EAAMxF,KAAKyF,OAAOD,IAClBE,EAAK1F,KAAK2F,MAEVC,EAAcF,EAAGE,YA2BrB,GAtBKF,EAAGG,YAWNX,EAAOQ,EAAGI,KACV/B,EAAQ2B,EAAGK,EACXZ,EAAMO,EAAGM,EAAIN,EAAGO,OAAS,EACzBb,EAASM,EAAGM,EAAIN,EAAGO,OAAS,EAC5BZ,EAAQtB,EAAQmB,EAAO,GAAK,EAC5BI,EAAQ,EACRC,EAAgBG,EAAGH,eAAiB,SAfpCL,EAAOQ,EAAGK,EAAIL,EAAGQ,MAAQ,EACzBnC,EAAQ2B,EAAGK,EAAIL,EAAGQ,MAAQ,EAC1Bf,EAAMO,EAAGM,EAETX,EAAQ,EACRC,GAFAF,EAASM,EAAGI,MAEKX,EAAM,GAAK,EAC5BI,EAAgBG,EAAGH,eAAiB,UAclCK,EAAa,CAEf,IAAIO,EAAUC,KAAKC,IAAID,KAAKE,IAAIpB,EAAOnB,GAAQqC,KAAKE,IAAInB,EAAMC,IAE1DmB,GADJX,EAAcA,EAAcO,EAAUA,EAAUP,GACjB,EAE3BY,EAAatB,GAA0B,SAAlBK,EAA2BgB,EAAalB,EAAQ,GACrEoB,EACF1C,GAA2B,UAAlBwB,GAA6BgB,EAAalB,EAAQ,GACzDqB,EAAYvB,GAAyB,QAAlBI,EAA0BgB,EAAajB,EAAQ,GAClEqB,EACFvB,GAA4B,WAAlBG,GAA8BgB,EAAajB,EAAQ,GAE3DkB,IAAeC,IACjBtB,EAAMuB,EACNtB,EAASuB,GAGPD,IAAcC,IAChBzB,EAAOsB,EACPzC,EAAQ0C,GAIZjB,EAAIoB,YACJpB,EAAIqB,UAAYnB,EAAGoB,gBACnBtB,EAAIuB,YAAcrB,EAAGsB,YACrBxB,EAAIyB,UAAYrB,EAKhB,IAAIsB,EAAU,CAAC,CAAChC,EAAME,GAAS,CAACF,EAAMC,GAAM,CAACpB,EAAOoB,GAAM,CAACpB,EAAOqB,IAI9D+B,EADU,CAAC,SAAU,OAAQ,MAAO,SACd/D,QAAQmC,EAAe,GAKjD,SAAS6B,EAASC,GAChB,OAAOH,GAASC,EAAcE,GAAS,IALpB,IAAjBF,IACFA,EAAc,GAQhB,IAAIG,EAASF,EAAS,GACtB5B,EAAI+B,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAKjB,IAAIvB,EAAQgB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjB,EAASiB,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpCnB,EAAImB,EAAQ,GAAG,GACflB,EAAIkB,EAAQ,GAAG,GAGnB,IAAIQ,KAxFa,GA2FJzB,EAAS,IACpByB,EAASzB,EAAS,GAEhByB,EAASxB,EAAQ,IACnBwB,EAASxB,EAAQ,GAGnBV,EAAI+B,OAAOxB,EAAI2B,EAAQ1B,GACvBR,EAAImC,OAAO5B,EAAIG,EAAQwB,EAAQ1B,GAC/BR,EAAIoC,iBAAiB7B,EAAIG,EAAOF,EAAGD,EAAIG,EAAOF,EAAI0B,GAClDlC,EAAImC,OAAO5B,EAAIG,EAAOF,EAAIC,EAASyB,GACnClC,EAAIoC,iBAAiB7B,EAAIG,EAAOF,EAAIC,EAAQF,EAAIG,EAAQwB,EAAQ1B,EAAIC,GACpET,EAAImC,OAAO5B,EAAI2B,EAAQ1B,EAAIC,GAC3BT,EAAIoC,iBAAiB7B,EAAGC,EAAIC,EAAQF,EAAGC,EAAIC,EAASyB,GACpDlC,EAAImC,OAAO5B,EAAGC,EAAI0B,GAClBlC,EAAIoC,iBAAiB7B,EAAGC,EAAGD,EAAI2B,EAAQ1B,GAGzCR,EAAIqC,OACAjC,GACFJ,EAAIsC,UAIR,IACIC,EACI,YAIJC,EACI,CACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WAVLT,EAYK,CACLU,QAAS,UACTC,QAAS,UACTC,UAAW,UACXC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,QAAS,WAnBThB,EAsBK,UAtBLA,GAuBW,cAkCf,SAASiB,KACL,IAAIC,EAAa,GACbC,EAAU,IAAIC,KACdC,EAAWF,EAAQG,WACnBC,EAAUJ,EAAQK,cAEtB,IAAK,IAAIhC,EAAI6B,EAAS,GAAK7B,GAAK6B,EAAW7B,IAAK,CAC5C,IAAIiC,EAAOC,EACNlC,EAAI,GACLiC,EAASjC,EAAI,GACbkC,EAAQH,EAAU,IAElBE,EAASjC,EACTkC,EAAQH,GAEZ,IAAII,EAAQ9E,EAAW4E,GAAQG,OAAO,KAAKA,OAAOC,OAAOH,GAAOI,UAAU,IAE1EZ,EAAWa,KAAKJ,GAKpB,OAAOT,EAwIQlB,EAAY,KACJA,EAAY,KAsGpBA,EAAY,KACJA,EAAY,KA9GvC,IAqKWgC,GAAsB,CAC/BC,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTC,MAAOrC,EAAY,KACnBsC,cAAetC,EAAY,MAE7BuC,MAAO,CACLC,SAAU,SAASC,GACjB,KAAMA,EAAQ,IAEZ,MAAO,SAAMA,OAOzBC,SAAU,CACRC,UAAW,CACThB,MAAO,SAASiB,EAAMC,GACpB,IAAIlB,EAAQkB,EAAKC,SAASF,EAAKG,cAAcpB,OAAS,GAClDqB,EAASJ,EAAKI,OACdC,EAAU,GAOd,OALIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWtB,GAGbsB,GAAW,SAAMD,MAMzBH,KAAM,CAEFM,OAAQlC,KACR6B,SAAU,CACR,CACEnB,MAAO,WACPkB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAO1CO,GAAsB,CAC/BnB,QAAS,CACPC,OAAQ,CACNC,MAAO,CACL,CACEI,MAAO,CACLC,SAAU,SAASC,GACjB,KAAMA,EAAQ,IAEZ,OAAOA,OAOnBC,SAAU,CACRC,UAAW,CACThB,MAAO,SAASiB,EAAMC,GACpB,IAAIlB,EAAQkB,EAAKC,SAASF,EAAKG,cAAcpB,OAAS,GAClDqB,EAASJ,EAAKI,OACdC,EAAU,GAKd,OAJIJ,EAAKC,SAASI,OAAS,IACzBD,GAAWtB,GAEbsB,GAAWD,MAMnBH,KAAM,CACJM,OAAQlC,KACR6B,SAAU,CACR,CACEnB,MAAO,WACPkB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,O,aCxlBnD,MAAMQ,WAAe/L,IAAMC,UACzBC,SACE,OACE,oCACE,yBAAKE,UAAU,6CACb,kBAACE,EAAA,EAAD,CAAWC,OAAK,GAChB,yBAAKH,UAAU,oBAkIV2L,U,OCrFf,MAOMC,GAPSC,KAAOC,2BAA2B,oBAE1BC,iBACpBC,KAAkBC,QAClB,iBAGgBL,GAAG,gBAStB,MAAMM,WAActM,IAAMC,UAAW,eAAD,oBAClCwC,MAAQ,CACN8J,UAAW,EACXC,kBAAmB,QACnBC,yBAAyB,QACzBC,SAAWZ,GACXa,UAAWjC,GAEXkC,MAAQ,GACPC,iBAAmB,GACnBC,cAAgB,IAVe,KAYlCC,WAAa,CAACtN,EAAGsI,KACftI,EAAEoC,iBACFnB,KAAKkC,SAAS,CACZ2J,UAAWxE,EACX0E,yBAC0C,UAAxC/L,KAAK+B,MAAMgK,yBAAuC,QAAU,UAEhE,IAAIO,EAAM,KACRC,QAAQC,IAAIxM,KAAK+B,QAEnBuK,EAAItJ,KAAKhD,MACTyM,WAAW,IAAMH,IAAO,MAvBQ,KAgDlCI,aAAgBC,IACdrB,GAAGsB,WAAW,mBAAmBC,KAAKF,GAAQG,UAAUC,KAAKC,IAE3DT,QAAQC,IAAI,oBAAoBQ,GACA,IAAI,IAAIC,IAAID,EAAU1K,IAAImI,GAASA,EAAMyC,SAASC,OAClFnN,KAAKkC,SAAS,CAACgK,MAAOc,MAGvBI,MAAMb,QAAQc,QAxDiB,KA2DlCC,uBAAyB,KACvB,IAAIC,EAAoB,GACpBC,EAAoB,GACpBC,EAAiB,GACjBC,EAAiB,GACjBC,EF0CD,WACH,IAAIC,EAAS,GACTzE,EAAU,IAAIC,KACdC,EAAWF,EAAQG,WACnBC,EAAUJ,EAAQK,cAEtB,IAAK,IAAIhC,EAAI6B,EAAS,GAAK7B,GAAK6B,EAAW7B,IAAK,CAC5C,IAAIiC,EAAOC,EACNlC,EAAI,GACLiC,EAASjC,EAAI,GACbkC,EAAQH,EAAU,IAElBE,EAASjC,EACTkC,EAAQH,GAEZE,GAAkB,EAClB,IAAIoE,EAAIhE,OAAOJ,GAAQyB,OAAS,EAAKrB,OAAOH,GAAOoE,OAAO,GAAGlE,OAAOC,OAAOJ,IAAYI,OAAOH,GAAOoE,OAAO,GAAGlE,OAAO,KAAKA,OAAOC,OAAOJ,IACzI8C,QAAQC,IAAI,UAAUqB,GACtBD,EAAO7D,KAAK8D,GAGhB,OADAtB,QAAQC,IAAI,OAAQoB,GACbA,EE/DeG,GAwCtB,OAtCAzC,GAAGsB,WAAW,mBAAmBC,OAAOC,UAAUC,KAAKC,IAErDT,QAAQC,IAAI,oBAAoBQ,GAChCA,EAAUgB,QAASC,IAEf,IAAIJ,EAAIhE,OAAOoE,EAAMC,OAAOJ,OAAO,EAAE,GAAGlE,OAAOC,OAAOoE,EAAMC,OAAOJ,OAAO,EAAE,IAC5EvB,QAAQC,IAAI,gBAAiBqB,GAC1BN,EAAkBM,GACjBN,EAAkBM,GAAKN,EAAkBM,GAAKI,EAAME,UAEtDZ,EAAkBM,GAAMI,EAAME,UAE7BX,EAAkBK,GACnBL,EAAkBK,GAAKL,EAAkBK,GAAMI,EAAME,UAAYF,EAAMG,WAEvEZ,EAAkBK,GAAMI,EAAME,UAAYF,EAAMG,aAKtDT,EAAgBK,QAASpD,IAErBA,EAAOyD,OAAOzD,GACd,IAAI0D,EAAcf,EAAkB3C,GACpC6C,EAAe1D,KAAKuE,GAEpBZ,EAAe3D,KAAKyD,EAAkB5C,MAG1C2B,QAAQC,IAAI,QAASiB,GACrBrC,GAAoBP,KAAKC,SAAS,GAAGD,KAAO4C,EAC5CzD,GAAoBa,KAAKC,SAAS,GAAGD,KAAO6C,EAC5CnB,QAAQC,IAAIxC,IACZhK,KAAKkC,SAAS,CAAC8J,SAAUZ,OAG1BgC,MAAMb,QAAQc,OAERI,GAxGyB,KA2GlCc,YAAeC,IAEb,IAAIC,EAAY,CAACvB,MAAOsB,EAAME,cAAcC,aAEzCH,EAAME,cAAcC,YAAYC,SAAS,uBACjCH,EAAUvB,MAGrBlN,KAAK0M,aAAa+B,GAElBzO,KAAKkC,SAAS,CACZkK,cAAgBqC,KA5FpBI,qBACMC,OAAOlK,OFoPR,SAASmK,EAAaC,EAAQ/E,GACnC,IAAK,IAAIW,KAAQX,EACc,kBAAlBA,EAAQW,GACjBoE,EAAOpE,GAAQX,EAAQW,GAEvBmE,EAAaC,EAAOpE,GAAOX,EAAQW,IExPnCmE,CAAanK,IFgIZ,WAEL,IAAIqF,EAAU,CACZgF,SAAU,CACRC,OAAQ,CACNC,YAAY,EACZC,qBAAqB,EACrBC,aAAmDrH,EAAY,KAC/DsH,iBAAuDtH,EAAY,KACnEuH,kBAAmBxH,EACnByH,gBAAiB,GACjB/M,OAAQ,CACNgN,QAAS,GAEXC,OAAQ,CACNC,SAAS,EACTC,SAAU,SACVzE,OAAQ,CACN0E,eAAe,EACfJ,QAAS,KAGb3K,SAAU,CACRgL,MAAO,CACLpI,OAAQ,EACRZ,gBAAiBkB,EAAA,SAEnB+H,KAAM,CACJC,QAAS,GACTpK,YAAa,EACboB,YAAagB,EAAA,QACblB,gBAAiBkB,GACjBiI,eAAgB,WAElBC,UAAW,CACTpJ,gBAAiBkB,EAAA,SAEnBmI,IAAK,CACHrJ,gBAAiBkB,EAAA,QACjBhB,YAAkDgB,EAClDpC,YAAa,IAGjB8E,SAAU,CACR0F,SAAS,EACTC,KAAM,QACNC,WAAW,IAGfC,SAAU,CACRC,iBAAkB,GAClBC,eAAgB,SAASC,GACvB,IAAI7F,EAAO6F,EAAM7F,KACbI,EAAU,GAcd,OAZAJ,EAAKM,OAAO6C,SAAQ,SAASrE,EAAOtC,GAClC,IAAIhE,EAAUwH,EAAKC,SAAS,GAAGhE,gBAAgBO,GAE/C4D,GAAW,mCACXA,GACE,8DACA5H,EACA,SACF4H,GAAWtB,EACXsB,GAAW,aAGNA,MA4Cf,OArCArG,EAAM+L,aAAaC,oBAAoB,SAAU,CAC/CxG,UAAW,CACTyG,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnBzG,MAA4CrC,EAAY,KACxD+I,YAAY,EACZC,WAAW,EACX/J,UAAW,EACXgK,cAAe,EACf3G,cAAoDtC,EAAY,KAChEkJ,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,IAE7B5G,MAAO,CACL6G,aAAa,EACb3B,QAAS,GACTjF,SAAU,SAASC,GACjB,KAAMA,EAAQ,IACZ,OAAOA,MAOf7F,EAAM+L,aAAaC,oBAAoB,WAAY,CACjDxG,UAAW,CACT2G,YAAY,EACZM,iBAAiB,EACjBL,WAAW,GAEbzG,MAAO,CACLkF,QAAS,IAEX6B,gBAAiB,KAGZrH,EE/OiBsH,IAGtBvR,KAAKsN,yBACLtN,KAAK0M,aAAa1M,KAAK+B,MAAMqK,eAG7Bd,GAAGsB,WAAW,mBAAmBC,OAAOC,UAAUC,KAAKC,IAErDT,QAAQC,IAAI,oBAAoBQ,GAChC,IAAIwE,EAA4B,IAAI,IAAIvE,IAAID,EAAU1K,IAAImI,GAASA,EAAMyC,SAASC,OAClFnN,KAAKkC,SAAS,CAAGiK,iBAAmBqF,MAGrCpE,MAAMb,QAAQc,OAkFjBoE,2BACE,OAAOzR,KAAK+B,MAAMoK,iBAAiB7J,IAAIoP,GAGjC,kBAAC7Q,EAAA,EAAD,CAAc2B,IAAKkP,EAASxQ,QAASlB,KAAKuO,aAC5B,8BAAOmD,KAM7BC,sBACE,OAAO3R,KAAK+B,MAAMmK,MAAM5J,IAAI,CAACsP,EAAMvK,KAC/B,MAAMwK,EAAYD,EAAKE,SA3Id,IA2ImC,IAEtCC,EAAOlI,OAAO+H,EAAKI,OAAOpI,OAAO,OAAOA,OAAOC,OAAO+H,EAAKK,OAC9CrI,OAAO,OAAOA,OAAOgI,EAAKM,MACxBtI,OAAO,OAAOA,OAAOgI,EAAKO,YACxBvI,OAAO,OAAOA,OAAOgI,EAAKQ,YAAYxI,OAAO,KAE9DyI,EAAY,UAAUzI,OAAOgI,EAAKU,IAAIC,YACtCC,EAAQ,IAAI5I,OAAOgI,EAAKU,IAAIC,YAC5BE,EAAY,eAAe7I,OAAOgI,EAAKc,aAAa9I,OACxC,gBAAgBA,OAAOgI,EAAKe,QAAQ/I,OACpC,oBAAeA,OAAOgI,EAAKgB,SACvCC,EAAaxE,OAAOyE,UAAUlB,EAAKiB,YAAcjB,EAAKiB,WAAajB,EAAKiB,WAAWE,QAAQ,GAC3FC,EAAW3E,OAAOyE,UAAUlB,EAAKoB,UAAYpB,EAAKoB,SAAWpB,EAAKoB,SAASD,QAAQ,GAEzF,GAAIlB,GAAa,GACf,IACIoB,EAAW,8BAEXC,EAAW,gCACX,GAAIrB,GAAa,IAAMA,GAAY,GAEnCoB,EAAW,+BAEXC,EAAW,iCAGXD,EAAW,gCAEXC,EAAW,6BAGjB,OACE,wBAAI1Q,IAAKgQ,GACT,wBAAIW,MAAM,OACR,kBAAC3S,EAAA,EAAD,CAAOd,UAAU,sBACf,uBACEA,UAAU,6BACVuB,KAAK,SACLC,QAASnC,GAAKA,EAAEoC,kBAEhB,yBACEV,IAAI,MACJC,IAAKC,EAAQ,OAGjB,kBAACH,EAAA,EAAD,KACE,0BAAMd,UAAU,gBACbkS,EAAK1E,UAKd,wBAAIxN,UAAY,aACXkS,EAAKwB,OAEV,4BACI,uBAAG1T,UAAWwT,IADlB,IACgCnB,EAC5B,8BACI,uBAAGrS,UAAWuT,EAAU7T,GAAIiT,IAC5B,kBAACgB,EAAA,EAAD,CACEC,MAAO,EACP7R,OAAQ4Q,GAEPI,KAIX,4BACE,yBAAK/S,UAAU,6BACb,0BAAMA,UAAU,QAAQkS,EAAKE,YAUjC,qCACMe,GAEN,qCACMG,MASdxT,SACE,IAAI+T,EAQJ,OALEA,EADEC,OAAOtU,KAAKc,KAAK+B,MAAMqK,eAAelB,OAAQ,EACnC,2BAEA,gBAMb,oCACE,kBAAC,GAAD,MAEA,kBAACtL,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChC,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK5B,UAAU,eAAe6B,GAAG,MAC/B,kBAACkS,EAAA,EAAD,CAAM/T,UAAU,8BACd,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,kBACpB,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,sBACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,uCAAd,qBAGA,wBAAIA,UAAU,mBAAd,yBAiCN,kBAACiU,EAAA,EAAD,KAEE,yBAAKjU,UAAU,SACb,kBAAC,IAAD,CAEEmL,KAAMb,GAAoBa,KAC1BZ,QAASD,GAAoBC,QAC7B2J,kBAAmB7U,GAAKwN,QAAQC,IAAIzN,UAO9C,kBAACsC,EAAA,EAAD,CAAK3B,UAAU,QACf,kBAAC4B,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACkS,EAAA,EAAD,CAAM/T,UAAU,UACd,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,kBACpB,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,sBACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,uCAAd,mBAGA,wBAAIA,UAAU,QAAd,yCAIN,kBAACiU,EAAA,EAAD,KAEE,yBAAKjU,UAAU,SACb,kBAAC,IAAD,CACEmL,KAAM7K,KAAK+B,MAAMiK,SAASnB,KAC1BZ,QAASmB,GAAoBnB,eAOzC,kBAAC5I,EAAA,EAAD,CAAK3B,UAAU,QACb,kBAAC4B,EAAA,EAAD,CAAK5B,UAAU,eAAe6B,GAAG,MAC/B,kBAACkS,EAAA,EAAD,CAAM/T,UAAU,UACd,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,YACpB,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,sBACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,QAAd,mBAcN,kBAACmU,EAAA,EAAD,CAAOnU,UAAU,iCAAiCyP,YAAU,GAC1D,2BAAOzP,UAAU,eACf,4BACE,wBAAIyT,MAAM,OAAV,QACI,kBAAC9S,EAAA,EAAD,CAAsByT,UAAU,SAC5B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UAAW6T,KAEhB,kBAAC3S,EAAA,EAAD,CAAclB,UAAU,uBACpBM,KAAKyR,2BACL+B,OAAOtU,KAAKc,KAAK+B,MAAMqK,eAAelB,OAAQ,GAC5C,kBAACrK,EAAA,EAAD,CAAcG,SAAO,IAEvBwS,OAAOtU,KAAKc,KAAK+B,MAAMqK,eAAelB,OAAQ,GAC5C,kBAACrK,EAAA,EAAD,CAAc2B,IAAI,eAAetB,QAASlB,KAAKuO,aAC7C,0DAMhB,wBAAI4E,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,iBAGJ,+BACGnT,KAAK2R,8BAYX/F,U,oBCvcUtM,IAAMC,UAyChBwU,I,qBCjDf,MAAMC,WAAmB1U,IAAMC,UAE7BsC,YAAY5B,GACV6B,MAAM7B,GADU,KAelBgU,aAAgBC,IAKPC,IAAOD,EAAI,cAAa,GAAME,YAC/BpU,KAAKkC,SAAU,CAACuI,MAAMyJ,EAAIG,OAAO,gBACjCrU,KAAKC,MAAMqU,SAASJ,EAAIG,OAAO,iBApBrCrU,KAAK+B,MAAQ,GAMf8M,qBACItC,QAAQC,IAAI,kBAAkBxM,KAAK+B,MAAMrC,WAE7C6U,sBACEhI,QAAQC,IAAI,qBAAqBxM,KAAK+B,MAAMrC,WAc9CF,SACE,OACE,oCACE,kBAACgV,GAAA,EAAD,KACE,kBAACpQ,EAAA,EAAD,CAAY1E,UAAU,2BACpB,kBAAC8E,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,KACE,uBAAGhF,UAAU,6BAGjB,kBAAC,KAAD,CACE+U,WAAY,CAEVlQ,YAAcvE,KAAKC,MAAMsE,aAG3BmQ,YAAY,EACZC,eAAe,EACfC,WAAW,aACXN,SAAUtU,KAAKiU,aACfxJ,MAAUzK,KAAKC,MAAMwK,MACrB/K,UAAY,mBASXsU,UC7Bf,MAAMa,WAAgBvV,IAAMC,UAC1BC,SACE,OACE,oCACG,kBAAC,GAAD,MAGD,kBAACI,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAChC,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK5B,UAAU,aAAa6B,GAAG,MAC7B,kBAACkS,EAAA,EAAD,CAAM/T,UAAU,uBACd,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,qBACpB,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,sBACb,kBAAC4B,EAAA,EAAD,CAAK4C,GAAG,KACN,wBAAIxE,UAAU,QAAd,sBAEF,kBAAC4B,EAAA,EAAD,CAAK5B,UAAU,aAAawE,GAAG,KAC7B,kBAAC4Q,GAAA,EAAD,CACEzK,MAAM,UACNpJ,KAAK,SACLC,QAASnC,GAAKA,EAAEoC,iBAChB4T,KAAK,MAJP,6BAWN,kBAACpB,EAAA,EAAD,KACE,kBAACxP,EAAA,EAAD,KACE,wBAAIzE,UAAU,iCAAd,oBAGA,yBAAKA,UAAU,WACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOS,IAAI,cACPvV,UAAU,sBADd,SAOE,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAU,2BACVN,GAAG,eAED,yDACA,6CACA,4CACA,kDAMR,kBAACkC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOS,IAAI,cACLvV,UAAU,sBADhB,QAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAU,2BACVN,GAAG,cAED,sDACA,uCACA,uCACA,uCACA,2CAMV,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,oBAFV,0CAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAU,2BAEVN,GAAG,mBACHmF,YAAY,mBACZb,KAAK,aAIX,kBAACpC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,mBAFV,2CAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAU,2BAEVN,GAAG,kBACHmF,YAAY,mBACZb,KAAK,cAKb,kBAACrC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,oBAFV,kBAOA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAU,2BAEVN,GAAG,mBACHmF,YAAY,mBACZb,KAAK,aAIX,kBAACpC,EAAA,EAAD,CAAK0T,GAAG,KACR,kBAACR,GAAA,EAAD,KACM,2BAAOS,IAAI,eACTvV,UAAU,sBADZ,eAOA,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SAASiG,MAAM,OAC3BjK,UAAU,2BACVN,GAAG,gBAED,uDACA,yCACA,gDAQZ,wBAAIM,UAAU,SAEd,wBAAIA,UAAU,iCAAd,sBAGA,yBAAKA,UAAU,WACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,iBAFV,uBAOA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAU,2BAEVN,GAAG,gBACHmF,YAAY,sBACZb,KAAK,WAIX,kBAACpC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,iBAFV,qBAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAU,2BAEVN,GAAG,gBACHmF,YAAY,2BACZb,KAAK,YAKb,kBAACrC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,cAFV,oBAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAU,2BACVyV,aAAa,KACb/V,GAAG,aACHmF,YAAY,MACZb,KAAK,UAIX,kBAACpC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,iBAFV,mBAaA,kBAAC,GAAD,CACE3Q,YAAc,+BAOtB,kBAAClD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,MACN,kBAACR,GAAA,EAAD,KACE,yCACA,kBAACnQ,EAAA,EAAD,CACE3E,UAAU,2BACV6E,YAAY,0BACZ6Q,KAAK,IACL1R,KAAK,yBA0BpBmR,UCzPAQ,OAtEf,MA2BIxT,YAAY+P,GAAK,IAEPU,EAAkGV,EAAlGU,IAAIgD,EAA8F1D,EAA9F0D,SAASpI,EAAqF0E,EAArF1E,MAAMkG,EAA+ExB,EAA/EwB,MAAMpB,EAAyEJ,EAAzEI,MAAMC,EAAmEL,EAAnEK,KAAKC,EAA8DN,EAA9DM,KAAKC,EAAyDP,EAAzDO,WAAWC,EAA8CR,EAA9CQ,WAAWmD,EAAmC3D,EAAnC2D,MAAM7C,EAA6Bd,EAA7Bc,YAAYC,EAAiBf,EAAjBe,OAAOC,EAAUhB,EAAVgB,MAC9F5S,KAAKsS,IAAMA,EACXtS,KAAKsV,SAAWA,EAChBtV,KAAKkN,MAAQA,EACblN,KAAKoT,MAAQA,EACbpT,KAAKgS,MAAQA,EACbhS,KAAKiS,KAAOA,EACZjS,KAAKkS,KAAOA,EACZlS,KAAKmS,WAAYA,EACjBnS,KAAKoS,WAAaA,EAClBpS,KAAKuV,MAAQA,EACbvV,KAAK0S,YAAcA,EACnB1S,KAAK2S,OAASA,EACd3S,KAAK4S,MAAQA,EAEjB4C,WACI,OAAOxV,KAAKkN,MAAMtD,OAAO,KAChBA,OAAO5J,KAAKoT,OAAOxJ,OAAO,OACtBA,OAAOC,OAAO7J,KAAKgS,QACfpI,OAAO,OAAOA,OAAOC,OAAO7J,KAAKiS,OAC7BrI,OAAO,OAAOA,OAAO5J,KAAKkS,MAC1BtI,OAAO,OAAOA,OAAOC,OAAO7J,KAAKmS,aAC7BvI,OAAO,OAAOA,OAAO5J,KAAKoS,YAGvDK,YACI,MAAQ,YAAY7I,OAAO5J,KAAK0S,aAAa9I,OACjC,gBAAgBA,OAAO5J,KAAK2S,QAAQ/I,OACpC,oBAAeA,OAAO5J,KAAK4S,SAG3C6C,WACI,OAAOzV,KAAKwV,WAAa,IAAMxV,KAAKyS,YAGxCiD,iBACI,OAAQ1V,KAAKsS,IAAIC,a,UCzDV,MAAMoD,WAA2BpW,YAC5CsC,YAAY5B,GACR6B,MAAM7B,GADQ,KAkBlB2V,YAAc,KACV5V,KAAKkC,SAAS,CACV2T,YAAa7V,KAAK+B,MAAM8T,aAG5B7V,KAAKC,MAAM6V,WAAW9V,KAAKC,MAAM8V,iBAvBnB,KA0BlBC,eAAiB,KAEbhW,KAAKkC,SAAS,CACV2T,YAAa7V,KAAK+B,MAAM8T,aAG5B7V,KAAKC,MAAMgW,YAAYjW,KAAKC,MAAMb,KA9BlCY,KAAK+B,MAAQ,CACT8T,WAAY5V,EAAMgE,OAClBiS,YAAajW,EAAMiW,YACnBC,UAAWlW,EAAMkW,UACjBC,SAAUnW,EAAMmW,SAChBC,kBAAmBpW,EAAMoW,kBACzBzE,KAAO3R,EAAMqW,SAIrBC,oBACIhK,QAAQC,IAAI,wCAsBhBhN,SACI,OACI,kBAACgX,GAAA,EAAD,CACA9W,UAAU,qCACV+W,iBAAiB,qBACjBxS,OAAQjE,KAAK+B,MAAM8T,WACnBa,OAAQ,IAAM1W,KAAK4V,cACnBe,SAAS,UAET,yBAAKjX,UAAU,gBACX,wBAAIA,UAAU,cAAcN,GAAG,4BAC9BY,KAAK+B,MAAMmU,aAEZ,4BACA5R,aAAW,QACX5E,UAAU,QACVkX,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAEpB,0BAAMiB,eAAa,GAAnB,UAGJ,yBAAKnX,UAAU,cACX,yBAAKA,UAAU,oBACf,uBAAGA,UAAU,wBAEb,wBAAIA,UAAU,gBAAgBM,KAAK+B,MAAMoU,WACzC,2BACKnW,KAAK+B,MAAMqU,YAIpB,yBAAK1W,UAAU,gBACX,kBAACoV,GAAA,EAAD,CAAQpV,UAAU,YAAY2K,MAAM,UAAU3G,KAAK,SAC3CxC,QAAS,IAAMlB,KAAKgW,kBAC3BhW,KAAK+B,MAAMsU,mBAEZ,kBAACvB,GAAA,EAAD,CACApV,UAAU,qBACV2K,MAAM,OACNuM,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eALpB,gBCrED,MAAMkB,WAA0BvX,YAC3CsC,YAAY5B,GACR6B,MAAM7B,GADQ,KAqBlB8W,gBAAmBvI,IAEfjC,QAAQC,IAAI,SAAUgC,GACtB,IAAIwI,EAAQxI,EAAM/M,OAAOrC,GAAG0K,UAAU,IAClC/D,EAAIsI,OAAOG,EAAM/M,OAAOgJ,OACxB1E,EAAI,IACW,eAAViR,GAIIjR,GAAK/F,KAAK+B,MAAMkV,YAHrBjX,KAAKkC,SAAU,CAAE,CAAC8U,GAAQjR,KA5BpB,KAsClB6P,YAAc,KACV5V,KAAKkC,SAAS,CACZ2T,YAAa7V,KAAK+B,MAAM8T,aAG1B7V,KAAKC,MAAM6V,WAAW9V,KAAKC,MAAM8V,iBA3CnB,KA8ClBmB,YAAezM,IACX8B,QAAQC,IAAI,2BAA2B/B,GACrCzK,KAAKkC,SAAS,CACZiV,WAAY1M,KAjDF,KA0DlB2M,YAAc,KAEVpX,KAAKkC,SAAS,CACV2T,YAAa7V,KAAK+B,MAAM8T,aAM5B,IAAIwB,EAAWrX,KAAKC,MAAMqX,IAAInJ,UAC1BoJ,EAAevX,KAAKC,MAAMqX,IAAIlJ,WAAapO,KAAKC,MAAMqX,IAAInJ,UAC9DnO,KAAKC,MAAMqX,IAAIlJ,WAAaC,OAAOmJ,SAASC,eAAe,4BAA4BhN,OACvFzK,KAAKC,MAAMqX,IAAInJ,UAAgBE,OAAOmJ,SAASC,eAAe,2BAA2BhN,OAEzFzK,KAAKC,MAAMqX,IAAIpJ,MAAelO,KAAK+B,MAAMoV,WACzC5K,QAAQC,IAAI,+CAAgDxM,KAAKC,MAAMqX,KAEvEtX,KAAKC,MAAMyX,SAAS1X,KAAKC,MAAMqX,IAAID,EAAUE,IAzE7CvX,KAAK+B,MAAQ,CACT8T,WAAY5V,EAAMgE,OAClBkT,WAAalX,EAAMqX,IAAIpJ,MACvBE,WAAYnO,EAAMqX,IAAIlJ,WACtBD,UAAYlO,EAAMqX,IAAInJ,UACtB8I,UAAYhX,EAAMqX,IAAInJ,UAAYlO,EAAMqX,IAAIL,WAMpDpI,qBAEKtC,QAAQC,IAAI,oCAEZD,QAAQC,IAAI,YAAaxM,KAAKC,MAAMqX,IAAItX,KAAKC,MAAM6R,UA+DxDtS,SAGI,OAEI,kBAACgX,GAAA,EAAD,CACI9W,UAAU,wBACTuE,OAAQjE,KAAK+B,MAAM8T,YAGpB,yBAAKnW,UAAU,gBACX,wBAAIA,UAAU,cAAcN,GAAG,uBAC9BY,KAAKC,MAAM0X,OAEZ,4BACArT,aAAW,QACX5E,UAAU,QACVkX,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAEpB,0BAAMiB,eAAa,GAAnB,UAKJ,yBAAKnX,UAAU,cAEf,kBAACyE,EAAA,EAAD,KAGI,kBAACqQ,GAAA,EAAD,CAAWoD,KAAG,GAEV,kBAACtW,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAO3C,QAAQ,2BACXxV,UAAU,qBACVmY,GAAG,KAFP,iCAMA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,SACJhE,UAAU,2BACVN,GAAG,2BACHmF,YAAavE,KAAK+B,MAAMqM,WACxB3D,MAAOzK,KAAK+B,MAAMqM,WAClBkG,SAAUtU,KAAK+W,mBAG1B,kBAACzV,EAAA,EAAD,CAAK0T,GAAG,KACL,2BAAOE,QAAQ,0BACXxV,UAAU,qBACVmY,GAAG,KAFP,QAQA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,SACJhE,UAAU,2BACVN,GAAG,0BACHiH,IAAI,IACJyR,IAAK9X,KAAK+B,MAAMkV,UAChB1S,YAAavE,KAAK+B,MAAMoM,UACxB1D,MAAOzK,KAAK+B,MAAMoM,UAClBmG,SAAUtU,KAAK+W,oBAM3B,kBAACvC,GAAA,EAAD,CAAWoD,KAAG,EAAClY,UAAU,6BACzB,kBAAC4B,EAAA,EAAD,CAAKuW,GAAG,MACR,2BAAO3C,QAAQ,sBACXxV,UAAU,qBACVmY,GAAG,KAFP,SAOI,kBAAC,GAAD,CACIzY,GAAG,sBACHM,UAAU,2BACV6E,YAAevE,KAAKC,MAAMqX,IAAIpJ,MAE9BzD,MAAOzK,KAAK+B,MAAMoV,WAClB7C,SAAUtU,KAAKkX,gBAI3B,kBAAC1C,GAAA,EAAD,CAAWoD,KAAG,GACV,kBAACtW,EAAA,EAAD,CAAK5B,UAAU,aACX,kBAACoV,GAAA,EAAD,CAAQpV,UAAU,UACV2K,MAAM,SACNuM,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAJ5B,cASJ,kBAACtU,EAAA,EAAD,CAAK5B,UAAW,aAAamY,GAAG,KAE5B,kBAAC/C,GAAA,EAAD,CAAQzK,MAAM,UACN3G,KAAK,SACLxC,QAAU,IAAMlB,KAAKoX,eAF7B,yCC5Kb,MAAMW,WAAuBxY,YACxCsC,YAAY5B,GACR6B,MAAM7B,GADQ,KAclB+X,eAAkBxJ,IAEdjC,QAAQC,IAAI,mCAAoCgC,EAAME,cAAcC,aAEpE3O,KAAKC,MAAMgY,WAAW,CAAC/K,MAAOsB,EAAME,cAAcC,eAlBpC,KAqBlBuJ,eAAkB1J,IAEdjC,QAAQC,IAAI,mCAAoCgC,EAAME,cAAcC,aAEpE3O,KAAKC,MAAMgY,WAAW,CAAC/J,MAAOM,EAAME,cAAcC,eAzBpC,KA4BlBwJ,mBAAqB,IAGVnY,KAAK+B,MAAMqW,aAAa9V,IAAK,CAACsI,EAAKvD,KACpC,IAAIkM,EACHhH,QAAQC,IAAInF,EAAMuD,EAAK5K,KAAKC,MAAM0M,QAClC,IAAI0L,EAAQ,WAAWhR,EACnBiR,EAAW,YAAYjR,EAC3B,OAAQuD,GACN,IAAK,QAMF,OAJI2I,EADAvT,KAAKC,MAAM0M,OAAOO,MACL,2BAEA,gBAET,wBAAIiG,MAAM,MAAM3Q,IAAK6V,GAASzN,EAE5B,kBAACvK,EAAA,EAAD,CAAsByT,UAAU,SAC9B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UAAW6T,EAAYnU,GAAIkZ,KAEhC,kBAAC1X,EAAA,EAAD,CAAclB,UAAU,uBACpBM,KAAKyR,2BACLzR,KAAKC,MAAM0M,OAAOO,OAChB,kBAACrM,EAAA,EAAD,CAAcG,SAAO,IAEvBhB,KAAKC,MAAM0M,OAAOO,OAChB,kBAACrM,EAAA,EAAD,CAAc2B,IAAI,eAAetB,QAASlB,KAAKgY,gBAC7C,0DAMvB,IAAK,QAMF,OAJEzE,EADEvT,KAAKC,MAAM0M,OAAOuB,MACP,2BAEA,gBAEP,wBAAIiF,MAAM,MAAM3Q,IAAK6V,GAASzN,EAC5B,kBAACvK,EAAA,EAAD,CAAsByT,UAAU,SAC9B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UAAW6T,EAAYnU,GAAIkZ,KAEhC,kBAAC1X,EAAA,EAAD,CAAclB,UAAU,uBACpBM,KAAKuY,2BACLvY,KAAKC,MAAM0M,OAAOuB,OAChB,kBAACrN,EAAA,EAAD,CAAcG,SAAO,IAEvBhB,KAAKC,MAAM0M,OAAOuB,OAEhB,kBAACrN,EAAA,EAAD,CAAc2B,IAAI,qBAAqBtB,QAASlB,KAAKkY,gBACjD,0DAMzB,QACA,OAAQ,wBAAI/E,MAAM,MAAM3Q,IAAK6V,GAASzN,MAtF/C5K,KAAK+B,MAAQ,CACTqW,aAAenY,EAAMmY,cAK7B7B,oBACIhK,QAAQC,IAAI,+BACZD,QAAQC,IAAI,mBAAoBxM,KAAKC,MAAMuY,oBAuF/C/G,2BACI,OAAOzR,KAAKC,MAAMwY,mBAAmBnW,IAAIoP,GAGnC,kBAAC7Q,EAAA,EAAD,CAAc2B,IAAKkP,EAASxQ,QAASlB,KAAKgY,gBAC5B,8BAAOtG,KAM/B6G,2BACE,OAAOvY,KAAKC,MAAMyY,mBAAmBpW,IAAIoP,GAGnC,kBAAC7Q,EAAA,EAAD,CAAc2B,IAAKkP,EAASxQ,QAASlB,KAAKkY,gBAC5B,8BAAOxG,KAQ7BiH,aAEI,OAAO3Y,KAAKC,MAAM4K,KAAKvI,IAAI,CAACsI,EAAMvD,KAC9B,IAAIuR,EAAW,IAAIvD,GAAKzK,GAEpBiO,EAAUjO,EAH0B,MAKhC0H,EAAuH1H,EAAvH0H,IAAapF,GAA0GtC,EAAnH0K,SAAmH1K,EAA1GsC,OAAMkG,EAAoGxI,EAApGwI,MAAMpB,EAA8FpH,EAA9FoH,MAAMC,EAAwFrH,EAAxFqH,KAAKC,EAAmFtH,EAAnFsH,KAAKC,EAA8EvH,EAA9EuH,WAAWC,EAAmExH,EAAnEwH,WAAWM,EAAwD9H,EAAxD8H,YAAYC,EAA4C/H,EAA5C+H,OAAOC,EAAqChI,EAArCgI,MAAM1E,EAA+BtD,EAA/BsD,MAAMC,EAAyBvD,EAAzBuD,UAAUC,EAAexD,EAAfwD,WAC1G0K,EAAUxG,EACVP,EAAOlI,OAAOmI,GAAOpI,OAAO,OAAOA,OAAOC,OAAOoI,IACtCrI,OAAO,OAAOA,OAAOsI,GACjBtI,OAAO,OAAOA,OAAOuI,GACrBvI,OAAO,OAAOA,OAAOwI,GAEpCC,EAAY,UAAUzI,OAAO0I,EAAIC,YACjCC,EAAQ,IAAI5I,OAAO0I,EAAIC,YACvBE,EAAY,UAAU7I,OAAO8I,GAAa9I,OAC5B,mBAAmBA,OAAO+I,GAAQ/I,OAClC,oBAAeA,OAAOgJ,KAEtBrG,QAAQC,IAAI,aAAaiG,GAE7C,MAAMsG,EAAmBH,EAASpD,WAAa,eACvBtH,EAAQ,eACRE,EAAW,2BACXD,EAAW,oCAE7B6K,EAAiB9L,EAAMtD,OAAO,KAAKA,OAAOwJ,GAAOxJ,OAAO,OAAOA,OAAOmI,GAS5E,OACA,wBAAIvP,IAAKgQ,GACP,wBAAIW,MAAM,OACR,kBAAC3S,EAAA,EAAD,CAAOd,UAAU,sBACf,uBACEA,UAAU,6BACVuB,KAAK,SACLC,QAASnC,GAAKA,EAAEoC,kBAEZ,yBACFV,IAAI,MACJC,IAAKC,EAAQ,OAGjB,kBAACH,EAAA,EAAD,KACE,0BAAMd,UAAU,gBACbwN,MAKT,4BACE,0BAAMxN,UAAU,gBACb0T,IAGL,4BACI,uBAAG1T,UAhCM,8BA+Bb,IACgCqS,GAEhC,4BACE,0BAAMrS,UAAU,gBACbwO,IAGL,4BACE,0BAAMxO,UAAU,gBACbyO,IAGL,4BACE,0BAAMzO,UAAU,gBACb0O,IAGL,wBAAI1O,UAAU,cACd,8BACE,uBAAGA,UArDQ,+BAqDaN,GAAIiT,IAC1B,kBAACgB,EAAA,EAAD,CACEC,MAAO,EACP7R,OAAQ4Q,GAEPI,IAGP,kBAACpS,EAAA,EAAD,CAAsByT,UAAU,QAC5B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UA9DQ,8BAgEb,kBAACkB,EAAA,EAAD,CAAclB,UAAU,uBACtB,kBAACmB,EAAA,EAAD,CAAcnB,UAAU,aAAaoB,QAAM,EAACC,IAAI,OAC9C,wBAAIrB,UAAU,qBAAqBsZ,IAErC,kBAACnY,EAAA,EAAD,CAAcG,SAAO,IAErB,kBAACH,EAAA,EAAD,CAAcK,QAAS,IAAMlB,KAAKC,MAAM6V,WAAW,kBACjD,uBAAGpW,UAAU,gBACb,4CACA,kBAAC,GAAD,CACEiY,MAAOiB,EAASpD,WAChB5D,KAAMgH,EACN7C,eAAgB/V,KAAKC,MAAMgZ,mBAC3BhV,OAAQjE,KAAKC,MAAMuY,mBACnB1C,WAAY9V,KAAKC,MAAM6V,WACvB4B,SAAU1X,KAAKC,MAAMyX,SACrBJ,IAAKuB,EACLK,QAASlZ,KAAKC,MAAMiZ,WAOxB,kBAACrY,EAAA,EAAD,CAAcK,QAAS,IAAMlB,KAAKC,MAAM6V,WAAW,oBACjD,uBAAGpW,UAAU,qBACb,qCACA,kBAAC,GAAD,CAAoBwW,YAAY,UACZC,UAAW4C,EACX1C,kBAAkB,yBAClBD,SAxHP,8GAyHOnS,OAAQjE,KAAKC,MAAMkZ,sBACnBpD,eAAgB/V,KAAKC,MAAMmZ,qBAC3BtD,WAAY9V,KAAKC,MAAM6V,WACvBG,YAAajW,KAAKC,MAAMgW,YACxB7W,GAAI0Z,WAa1CtZ,SACI,OACQ,kBAACiU,EAAA,EAAD,CAAM/T,UAAU,qBAGZ,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,2BACpB,wBAAIA,UAAU,mBAAmBM,KAAKC,MAAMkW,YAE1C,kBAACtC,EAAA,EAAD,CACAnU,UAAU,4CACVyP,YAAU,GAEV,2BAAOzP,UAAU,cACb,4BACCM,KAAKmY,uBAIV,+BACKnY,KAAK2Y,iB,OCvPlC,MAAMU,GAAS9N,KAAO+N,aAAa,oBAM7BhO,GALU+N,GAAO5N,iBACrBC,KAAkBC,QAClB,iBAGiBL,GAAG,gBAEtB+N,GAAOE,KAAKC,oBAAoB,IAAIC,MAAuB1M,KAAK2M,IAC9DnN,QAAQC,IAAR,+CAAoDkN,EAAKta,OACxDgO,MAAMb,QAAQc,OAGjB,IAAIsM,GAAY,IAAIC,KAAKC,aAAa,QAAS,CAC3CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAK3B,MAAMC,WAAc3a,IAAMC,UACxBsC,YAAY5B,GACV6B,MAAM7B,GADW,KAsHnBia,YAAe1L,IAGb,IAII2L,EAJA/L,EAAapO,KAAK+B,MAAMqM,WACxBgM,EAAchM,EAAaI,EAAM/M,OAAOgJ,MACxC4P,EAAcjM,EAAa,KAC3BkM,EAAeF,EAAc,KAM7BD,EADC,GAAK3L,EAAM/M,OAAOgJ,OAAS+D,EAAM/M,OAAOgJ,OAASzK,KAAK+B,MAAMkV,UAChDzI,EAAM/M,OAAOgJ,MACnB+D,EAAM/M,OAAOgJ,MAAQzK,KAAK+B,MAAMkV,UAC1BjX,KAAK+B,MAAMkV,UAEX,EAGdsD,MAAM/L,EAAM/M,OAAOgJ,SACpB0P,EAAa,GAGf3C,SAASC,eAAe,4BAA4BhN,MAAU4D,OAAOkM,MAAMF,GAAgB,GAAKV,GAAUtF,OAAOgG,GACjH7C,SAASC,eAAe,6BAA6BhN,MAAU4D,OAAOkM,MAAMD,GAAiB,GAAKX,GAAUtF,OAAOiG,GACnHta,KAAKkC,SAAS,CAACiM,UAAWgM,EAAWC,YAAaA,KA/IjC,KAmJnBI,kBAAqBhM,IACjB,IAAI4L,EAEAK,EAAU5H,EADVzE,EAAaI,EAAM/M,OAAOgJ,MAG9BzK,KAAKkC,SAAWH,IAEZqY,EAAcrY,EAAMqY,YACpBvH,EAAa6H,SAAS3Y,EAAM8Q,YACT,KAAfzE,GACAgM,EAAc,GACdK,EAAW5Q,OAAO,SAGduQ,EADCrY,EAAMoM,UAAY,EACLC,EAAarM,EAAMoM,UAEnB,GAEC,KAAf0E,IACF4H,IAAarM,EAAayE,GAAcA,EAAa,KAAKE,QAAQ,GAClE0H,EAAW5Q,OAAO,MAAMD,OAAO6Q,KAMrC,IAAIJ,EAAcjM,EAAa,KAC3BkM,EAAeF,EAAc,KAMjC,OAHA5C,SAASC,eAAe,4BAA4BhN,MAAU4D,OAAOkM,MAAMF,GAAgB,GAAKV,GAAUtF,OAAOgG,GACjH7C,SAASC,eAAe,6BAA6BhN,MAAU4D,OAAOkM,MAAMD,GAAiB,GAAKX,GAAUtF,OAAOiG,GAE5G,CAAElM,aAAWgM,cAAYK,eApLrB,KAyLnBE,mBAAsBnM,IACpB,IAAIJ,EACAgM,EAAc5L,EAAM/M,OAAOgJ,MAE/BzK,KAAKkC,SAAUH,IACXqM,EAAarM,EAAMqM,WAEfA,EADgB,KAAhBgM,EACa,GAETrY,EAAMoM,UAAY,EACLiM,EAAcrY,EAAMoM,UAEtB,GAKnB,IAAIkM,EAAcV,GAAUtF,OAAOjG,EAAa,MAC5CkM,EAAeX,GAAUtF,OAAO+F,EAAc,MAIlD,OAFA5C,SAASC,eAAe,4BAA4BhN,MAAS4D,OAAOkM,MAAMF,GAAe,GAAKA,EAC9F7C,SAASC,eAAe,6BAA6BhN,MAAS4D,OAAOkM,MAAMD,GAAgB,GAAKA,EACzF,CAAElM,aAAWgM,kBA/MP,KAoNnBQ,iBAAoBnQ,IAClB8B,QAAQC,IAAI,2BAA2B/B,GACrCzK,KAAKkC,SAAS,CACZ2Y,aAAcpQ,KAvND,KAkOnBqQ,qBAAwBC,IACpB,IAAIC,GAAW,EAEf,GAAIhb,KAAK+B,MAAMkZ,kBACb,OAAQF,GACN,IAAK,QACDC,EAAyC,KAA7Bhb,KAAK+B,MAAMmZ,cACzB,MACF,IAAK,QACDF,EAAyC,KAA7Bhb,KAAK+B,MAAMoZ,cACzB,MACF,IAAK,QACDH,EAAyC,KAA7Bhb,KAAK+B,MAAMqZ,cACzB,MACF,IAAK,OACDJ,EAAwC,KAA5Bhb,KAAK+B,MAAMsZ,aACzB,MACF,IAAK,OACDL,EAAwC,KAA5Bhb,KAAK+B,MAAMuZ,aACzB,MACF,IAAK,MACDN,EAAuC,KAA3Bhb,KAAK+B,MAAMwZ,YACzB,MACF,IAAK,MACDP,EAAuC,KAA3Bhb,KAAK+B,MAAMyZ,YACzB,MACF,IAAK,QACDR,EAAyC,KAA7Bhb,KAAK+B,MAAM0Z,cACzB,MACF,IAAK,SACDT,EAA0C,KAA9Bhb,KAAK+B,MAAM2Z,eACzB,MACF,IAAK,QACDV,EAAyC,KAA7Bhb,KAAK+B,MAAM4Z,cACzB,MACF,IAAK,QACHX,EAAsC,KAA1Bhb,KAAK+B,MAAMqM,YAA8C,GAAzBpO,KAAK+B,MAAMqM,WACvD,MACF,IAAK,OACH4M,EAAqC,KAAzBhb,KAAK+B,MAAMoM,WAA4C,GAAxBnO,KAAK+B,MAAMoM,UACtD,MACF,IAAK,SACH6M,EAAuC,KAA3Bhb,KAAK+B,MAAMqY,aAAgD,GAA1Bpa,KAAK+B,MAAMqY,YAM9D,OAAOY,GAlRQ,KAqRnBY,sBAAwB,KAEpB,IAAIC,GAAa,EACbC,EAAY,GA2DhB,MA1DiC,KAA7B9b,KAAK+B,MAAMmZ,gBACXY,EAAU/R,KAAK,SACf8R,GAAa,GAGgB,KAA7B7b,KAAK+B,MAAMoZ,gBACXW,EAAU/R,KAAK,SACf8R,GAAa,GAEgB,KAA7B7b,KAAK+B,MAAMqZ,gBACXU,EAAU/R,KAAK,SACf8R,GAAa,GAEe,KAA5B7b,KAAK+B,MAAMsZ,eACXS,EAAU/R,KAAK,QACf8R,GAAa,GAEe,KAA5B7b,KAAK+B,MAAMuZ,eACXQ,EAAU/R,KAAK,QACf8R,GAAa,GAEc,KAA3B7b,KAAK+B,MAAMwZ,cACZO,EAAU/R,KAAK,eACf8R,GAAa,GAEe,KAA3B7b,KAAK+B,MAAMyZ,cACXM,EAAU/R,KAAK,oBACf8R,GAAa,GAEgB,KAA7B7b,KAAK+B,MAAM0Z,gBACXK,EAAU/R,KAAK,SACf8R,GAAa,GAEiB,KAA9B7b,KAAK+B,MAAM2Z,iBACXI,EAAU/R,KAAK,UACf8R,GAAa,GAEgB,KAA7B7b,KAAK+B,MAAM4Z,gBACXG,EAAU/R,KAAK,cACf8R,GAAa,GAEa,KAA1B7b,KAAK+B,MAAMqM,YAA+C,GAAzBpO,KAAK+B,MAAMqM,aAC5C0N,EAAU/R,KAAK,eACf8R,GAAa,GAEY,KAAzB7b,KAAK+B,MAAMoM,WAA4C,GAAxBnO,KAAK+B,MAAMoM,YAC1C2N,EAAU/R,KAAK,QACf8R,GAAa,GAEc,KAA3B7b,KAAK+B,MAAMqY,aAAgD,GAA1Bpa,KAAK+B,MAAMqY,cAC5C0B,EAAU/R,KAAK,gBACf8R,GAAa,GAIjB7b,KAAKkC,SAAS,CAAC+Y,mBAAoB,EAAKc,YAAaD,IAG9CD,GAnVQ,KAsVnBG,SAAW,KAEP,GAAKhc,KAAK4b,wBAA0B,CAChC,IAYIK,EAZAC,EAASlc,KAAK+B,MAAMmZ,cACpBiB,EAASnc,KAAK+B,MAAMoZ,cACpBiB,EAAS/N,OAAOrO,KAAK+B,MAAMqZ,eAC3BiB,EAAQhO,OAAOrO,KAAK+B,MAAMsZ,cAC1BiB,EAAQtc,KAAK+B,MAAMuZ,aACnBiB,EAAclO,OAAOrO,KAAK+B,MAAMwZ,aAChCiB,EAAcxc,KAAK+B,MAAMyZ,YACzBiB,EAAezc,KAAK+B,MAAM0Z,cAC1BiB,EAAU1c,KAAK+B,MAAM2Z,eACrBiB,EAAS3c,KAAK+B,MAAM4Z,cACpBiB,EAAcvO,OAAOrO,KAAK+B,MAAMqM,YAChC+L,EAAa9L,OAAOrO,KAAK+B,MAAMoM,WAEnC,GAAgC,KAA5BnO,KAAK+B,MAAM8Y,aAAqB,CAChC,IAAIgC,EAAQ,IAAIzT,KAIhB6S,EAHSpS,OAAOgT,EAAMC,WAAWC,SAAS,EAAG,KAG/B,IAFLlT,OAAOgT,EAAMvT,WAAa,GAAGyT,SAAS,EAAG,KAEzB,IADdF,EAAMrT,mBAGjByS,EAASjc,KAAK+B,MAAM8Y,aAExBvP,GAAGsB,WAAW,mBACXoQ,UAAU,CACT1H,SAAU+D,GAAOE,KAAKG,KAAKta,GAC3B8N,MAAOgP,EACP9I,MAAO+I,EACPnK,MAAOoK,EACPnK,KAAMoK,EACNnK,KAAMoK,EACNnK,WAAYoK,EACZnK,WAAYoK,EACZ9J,YAAa+J,EACb9J,OAAQ+J,EACR9J,MAAO+J,EACPzO,MAAQ+N,EACR9N,UAAYgM,EACZ/L,WAAawO,IAEd7P,KAAKkQ,IACF1Q,QAAQC,IAAI,uBAAuByQ,EAAaC,YAChDld,KAAKkC,SAAS,CAAC+Y,mBAAmB,IAClCjb,KAAKmd,kBAAkBnd,KAAK+B,MAAMqK,iBACrCgB,MAIGgQ,MAAM7Q,QAAQc,QAKlB,IAAIgQ,EAAW,CACX,SAAahE,GAAOE,KAAKG,KAAKta,GAC9B,MAAU8c,EACV,MAAUC,EACV,MAAUC,EACV,KAAUC,EACV,KAAUC,EACV,WAAeC,EACf,WAAeC,EACf,YAAeC,EACf,OAAUC,EACV,MAAUC,GAEd3c,KAAKsd,oBAAoBD,EAAST,EAAYzC,QAKlDiD,MAAM,gLA/ZO,KAsbnBE,oBAAsB,CAAC1L,EAAK2L,EAAMC,KAC9BlS,GAAGsB,WAAW,mBAAmBC,KAAK+E,GAAM9E,UAAUC,KAAKC,IAEnDT,QAAQC,IAAI,oBAAoBQ,GAChC,IAAIyQ,EAAezQ,EAAU,GACzB0Q,GAAgBD,EAAazK,SAAWyK,EAAatP,UAAcoP,EAAQC,IAAWC,EAAatP,UAAYqP,GACnHC,EAAazK,SAAW0K,EACxBD,EAAatP,UAAYsP,EAAatP,UAAYqP,EAClDC,EAAa3L,SAAW2L,EAAa3L,SAAW0L,EAEhDlS,GAAGsB,WAAW,mBACb+Q,kBAAkB/L,EAAK6L,GAAc1Q,KAAK6Q,IAEzCrR,QAAQC,IAAI,qBAAsBoR,GAClCR,MAAM,0BACNpd,KAAKkC,SAAS,CAAC+U,UAAYwG,EAAa3L,aACvC1E,MAAMb,QAAQc,SAkBxBD,MACCb,QAAQc,QAzdK,KAsenBwQ,SAAW,CAACC,EAAUzG,EAASE,YAEpBuG,EAAU7G,UACjB3L,GAAGsB,WAAW,mBACb+Q,kBAAkB,CAAErL,IAAKwL,EAAUxL,KAAMwL,GAAW/Q,KAAKgR,IACxDxR,QAAQC,IAAI,uCAAwCuR,GAEpDxR,QAAQC,IAAIsR,GAEZ,IAAIE,EAAsB,CACxB,MAAUD,EAAU7Q,MACpB,MAAU6Q,EAAU3K,MACpB,MAAU2K,EAAU/L,MACpB,KAAU+L,EAAU9L,KACpB,KAAU8L,EAAU7L,KACpB,WAAe6L,EAAU5L,WACzB,WAAe4L,EAAU3L,WACzB,YAAe2L,EAAUrL,YACzB,OAAUqL,EAAUpL,OACpB,MAAUoL,EAAUnL,OAEtBrG,QAAQC,IAAIwR,GAGZ1S,GAAGsB,WAAW,mBAAmBqR,QAAQD,GAAqBjR,KAAM6Q,IAG9DA,EAAUzP,UAAYkJ,EAAWyG,EAAU3P,YAAc,EACzDyP,EAAU5K,UAAa4K,EAAU5K,SAAW4K,EAAUzP,UAAaoJ,EAAgBuG,EAAU1P,WAAa0P,EAAU3P,YAAgByP,EAAUzP,UAAYkJ,EAAWyG,EAAU3P,WAE/KyP,EAAU5K,SAAW,EAEzB4K,EAAUzP,UAAYyP,EAAUzP,UAAYkJ,EAAWyG,EAAU3P,UACjEyP,EAAU9L,SAAW8L,EAAU9L,SAAWuF,EAAWyG,EAAU3P,UAE/D7C,GAAGsB,WAAW,mBACb+Q,kBAAkBK,EAAoBJ,GAAW7Q,KAAKmR,IAErD3R,QAAQC,IAAI,0CAA2C0R,GACvDd,MAAM,kDACLhQ,MAAMb,QAAQc,SAGjBD,MAAMb,QAAQc,OAChBrN,KAAKkC,SAAS,CAACic,eAAe,IAE9Bne,KAAKmd,kBAAkBnd,KAAK+B,MAAMqK,iBACjCgB,MAAMb,QAAQc,QArhBF,KA0hBnB+Q,WAAchf,IAIVmN,QAAQC,IAAI,gBAAgBpN,EAAGmT,WAAW,mCAI1CjH,GAAGsB,WAAW,mBACXyR,iBACC,CAAC/L,IAAMlT,IAEV2N,KAAK6Q,IACJrR,QAAQC,IAAI,qBAAsBoR,GAClC,IAAII,EAAsB,CACxB,MAAUJ,EAAU1Q,MACpB,MAAU0Q,EAAUxK,MACpB,MAAUwK,EAAU5L,MACpB,KAAU4L,EAAU3L,KACpB,KAAU2L,EAAU1L,KACpB,WAAe0L,EAAUzL,WACzB,WAAeyL,EAAUxL,WACzB,YAAewL,EAAUlL,YACzB,OAAUkL,EAAUjL,OACpB,MAAUiL,EAAUhL,OAElB0L,EAAkBV,EAAUxP,WAC5BmQ,EAAmBX,EAAUzP,UAEjC7C,GAAGsB,WAAW,mBAAmBqR,QAAQD,GAAqBjR,KAAM6Q,IAClErR,QAAQC,IAAI,2CAA2CoR,GAEjDA,EAAUzP,UAAYoQ,IAAsB,EAC9CX,EAAU5K,UAAa4K,EAAU5K,SAAW4K,EAAUzP,UAAcmQ,EAAkBC,IAAuBX,EAAUzP,UAAYoQ,GAEnIX,EAAU5K,SAAW,EAEzB4K,EAAUzP,UAAYyP,EAAUzP,UAAYoQ,EAC5CX,EAAU9L,SAAW8L,EAAU9L,SAAWyM,EAI1CjT,GAAGsB,WAAW,mBACb+Q,kBAAkBK,EAAoBJ,GAAW7Q,KAAKmR,IACrD3R,QAAQC,IAAI,wCAAyC0R,GACrDd,MAAM,gDACLhQ,MAAMb,QAAQc,SAGjBD,MAAMb,QAAQc,OAEhBrN,KAAKkC,SAAS,CAACsc,iBAAiB,IAEhCxe,KAAKmd,kBAAkBnd,KAAK+B,MAAMqK,iBACjCgB,MAAMb,QAAQc,QAhlBF,KAolBnB8P,kBAAqBxQ,IACjBrB,GAAGsB,WAAW,mBAAmBC,KAAKF,GAAQG,UAAUC,KAAK0R,IAI3DA,EAAUA,EAAQnc,IAAI,CAACsI,EAAKvD,KAExB,IAAIgW,EAAW,CAEb,MAAUzS,EAAKsC,MACf,MAAUtC,EAAKwI,MACf,MAAUxI,EAAKoH,MACf,KAAUpH,EAAKqH,KACf,KAAUrH,EAAKsH,KACf,WAAetH,EAAKuH,WACpB,WAAevH,EAAKwH,WACpB,YAAexH,EAAK8H,YACpB,OAAU9H,EAAK+H,OACf,MAAU/H,EAAKgI,OAYjB,OAVArG,QAAQC,IAAI6Q,GACZ/R,GAAGsB,WAAW,mBAAmBC,KAAKwQ,GAAUvQ,UAAUC,KAAK2R,IAE3D9T,EAAKqM,UAAYyH,EAAY,GAAG5M,SAChCvF,QAAQC,IAAI5B,KAEfwC,MACCb,QAAQc,OAGHzC,IAGX2B,QAAQC,IAAI,uBAAwBiS,GAEpCze,KAAKkC,SAAU,CAACyc,MAAQF,MAIzBrR,MAAMb,QAAQc,OAGfd,QAAQC,IAAI,aAAaxM,KAAK+B,MAAM4c,OAEpCrT,GAAGsB,WAAW,mBAAmBC,OAAOC,UAAUC,KAAKC,IAErDT,QAAQC,IAAI,mBAAmBQ,GAG/B,IAAIwE,EAA4B,IAAI,IAAIvE,IAAID,EAAU1K,IAAImI,GAASA,EAAMyC,SAASC,OAC9EyR,EAA4B,IAAI,IAAI3R,IAAID,EAAU1K,IAAImI,GAASA,EAAMyD,SAASf,OAGlFnN,KAAKkC,SAAS,CAAEiK,iBAAmBqF,EACnBqN,iBAAmBD,MAGpCxR,MAAMb,QAAQc,QA7oBA,KAgpBnByR,iBAAoBtQ,IAGhB,IAAIuQ,EAAUlV,OAAO2E,EAAM/M,OAAOrC,IAAI0K,UAAU,GAC5CkV,EAAUxQ,EAAM/M,OAAOgJ,MAG3BzK,KAAKkC,SAAUH,IAEX,IAAIkd,EAAiBld,EAAMkd,eACvB/D,EAAgBnZ,EAAMmZ,cACtBC,EAAgBpZ,EAAMoZ,cACtBC,EAAgBrZ,EAAMqZ,cACtBC,EAAetZ,EAAMsZ,aACrBC,EAAevZ,EAAMuZ,aACrBC,EAAcxZ,EAAMwZ,YACpBC,EAAczZ,EAAMyZ,YACpBC,EAAgB1Z,EAAM0Z,cACtBC,EAAiB3Z,EAAM2Z,eACvBC,EAAgB5Z,EAAM4Z,cAe1B,OAbI5Z,EAAMkd,iBACNA,GAAiB,EACjB/D,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB,GAChBC,EAAe,GACfC,EAAe,GACfC,EAAc,GACdC,EAAc,GACdC,EAAgB,GAChBC,EAAiB,GACjBC,EAAgB,IAEZoD,GACN,IAAK,QACD7D,EAAgB8D,EAClB,MACF,IAAK,QACD7D,EAAgB6D,EAClB,MACF,IAAK,QACD5D,EAAgB4D,EAClB,MACF,IAAK,OACD3D,EAAe2D,EACjB,MACF,IAAK,OACD1D,EAAe0D,EACjB,MACF,IAAK,MACDzD,EAAcyD,EAChB,MACF,IAAK,MACDxD,EAAcwD,EAChB,MACF,IAAK,QACDvD,EAAgBuD,EAClB,MACF,IAAK,SACDtD,EAAiBsD,EACnB,MACF,IAAK,QACDrD,EAAgBqD,EAMtB,MAAO,CAAC9D,gBAAcC,gBAAcC,gBAAcC,eAAaC,eAAaC,cAClEC,cAAYC,gBAAcC,iBAAeC,gBAAcsD,oBAKrE,IAAIC,EAAqBlf,KAAK+B,MAAMod,aAEpC5S,QAAQC,IAAI,+BAAgC0S,GAGtCF,EAAQpQ,SAAS,mBACZsQ,EAAmBH,GAItBG,EAAmBH,GADJ,UAAZA,GAAmC,SAAZA,GAAkC,QAAZA,EAClB1Q,OAAO2Q,GAEPA,EAMtCzS,QAAQC,IAAI,sDAAuD0S,GAEnE5T,GAAGsB,WAAW,mBAAmBC,KAAKqS,GAAoBpS,UAAUC,KAAKC,IAMvE,GAJAT,QAAQC,IAAI,cAAcQ,GAIN,GAFFA,EAAU9B,OAEL,CACnB,IAAI0G,EAAO5E,EAAU,GACjBoS,EAAkC,IAAnBxN,EAAKzD,YAAqByD,EAAKoB,SAAWpB,EAAKiB,YAAcjB,EAAKiB,WAAa,KAAKE,QAAQ,GAAKlJ,OAAO,KAC3HuV,EAAcvV,OAAO,MAAMD,OAAOwV,GAClCxN,EAAKiB,WAAcxE,OAAOyE,UAAUlB,EAAKiB,YAAchJ,OAAO+H,EAAKiB,YAAYjJ,OAAO,WAAQC,OAAO+H,EAAKiB,WAAWE,QAAQ,IAAInJ,OAAO,WACxIgI,EAAKoB,SAAY3E,OAAOyE,UAAUlB,EAAKoB,UAAYnJ,OAAO+H,EAAKoB,UAAUpJ,OAAO,WAAQC,OAAO+H,EAAKoB,SAASD,QAAQ,IAAInJ,OAAO,WAGhI5J,KAAKkC,SACH,CACUid,aAAe,GACfF,gBAAiB,EACjB/D,cAAgBtJ,EAAK1E,MACrBiO,cAAgBvJ,EAAKwB,MACrBgI,cAAgBxJ,EAAKI,MACrBqJ,aAAezJ,EAAKK,KACpBqJ,aAAe1J,EAAKM,KACpBqJ,YAAc3J,EAAKO,WACnBqJ,YAAc5J,EAAKQ,WACnBqJ,cAAgB7J,EAAKc,YACrBgJ,eAAiB9J,EAAKe,OACtBgJ,cAAgB/J,EAAKgB,MACrBC,WAAajB,EAAKiB,WAClBoE,UAAYrF,EAAKE,SACjBkB,SAAWpB,EAAKoB,SAChBqM,YAAcD,IAO9B,IAAIE,EAAoB,IAAI,IAAIrS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyC,SAASC,OACvEoS,EAAoB,IAAI,IAAItS,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2I,SAASjG,OACvEqS,EAAoB,IAAI,IAAIvS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMuH,SAAS7E,OACvEsS,EAAmB,IAAI,IAAIxS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMwH,QAAQ9E,OACrEuS,EAAmB,IAAI,IAAIzS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyH,QAAQ/E,OACrEwS,EAAkB,IAAI,IAAI1S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM0H,cAAchF,OAC1EyS,EAAkB,IAAI,IAAI3S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2H,cAAcjF,OAC1E0S,EAAoB,IAAI,IAAI5S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMiI,eAAevF,OAC7E2S,EAAqB,IAAI,IAAI7S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMkI,UAAUxF,OACzE4S,EAAoB,IAAI,IAAI9S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMmI,SAASzF,cAEpE+R,EAAkB,WAClBA,EAAkB,SAEzBlf,KAAKkC,SAAWH,IAaZ,IAAIie,EAAgBje,EAAMie,cACtBC,EAAoBle,EAAMke,kBAC1BC,EAAqBne,EAAMme,mBAC3BC,EAAoBpe,EAAMoe,kBAC1BC,EAAoBre,EAAMqe,kBAC1BC,EAAwBte,EAAMse,sBAC9BC,EAAwBve,EAAMue,sBAC9BC,EAAqBxe,EAAMwe,mBAC3BC,EAAsBze,EAAMye,oBAC5B/N,EAAY1Q,EAAM0Q,UA8CtB,OA3CAuN,EAAgBV,EAChBW,EAAoBV,EACpBW,EAAqBV,EACrBW,EAAoBV,EACpBW,EAAoBV,EACpBW,EAAwBV,EACxBW,EAAwBV,EACxBW,EAAqBV,EACrBW,EAAsBV,EACtBrN,EAAYsN,EAkCL,CAEKC,gBAAcC,oBAAkBC,qBAAmBC,oBACjDC,oBAAkBC,wBAAsBC,wBAAsBC,qBAC5DC,sBAAoB/N,iBAKzCrF,MAAMb,QAAQc,QAh3BA,KAs3BnBoT,UAAY,KACVjJ,SAASC,eAAe,4BAA4BhN,MAAQ,GAC5D+M,SAASC,eAAe,6BAA6BhN,MAAQ,GAC7Da,GAAGsB,WAAW,sBAAsBC,OAAOC,UAAUC,KAAKC,IACtD,IAAIsS,EAAoB,IAAI,IAAIrS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyC,SAC9DqS,EAAoB,IAAI,IAAItS,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2I,SAC9DoM,EAAoB,IAAI,IAAIvS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMuH,SAC9DyN,EAAmB,IAAI,IAAIxS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMwH,QAC7DyN,EAAmB,IAAI,IAAIzS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyH,QAC7DyN,EAAkB,IAAI,IAAI1S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM0H,cAC5DyN,EAAkB,IAAI,IAAI3S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2H,cAC5DyN,EAAoB,IAAI,IAAI5S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMiI,eAC9DoN,EAAqB,IAAI,IAAI7S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMkI,UAC/DoN,EAAoB,IAAI,IAAI9S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMmI,SAElE5S,KAAKkC,SAAU,CACb8d,cAAgBV,EAChBW,kBAAoBV,EACpBW,mBAAqBV,EACrBW,kBAAoBV,EACpBW,kBAAoBV,EACpBW,sBAAwBV,EACxBW,sBAAwBV,EACxBW,mBAAqBV,EACrBW,oBAAsBV,EACtBrN,UAAYsN,EACZZ,aAAe,GACfF,gBAAiB,EAEhB/D,cAAgB,GAChBC,cAAgB,GAChBC,cAAgB,GAChBC,aAAe,GACfC,aAAe,GACfC,YAAc,GACdC,YAAc,GACdC,cAAgB,GAChBC,eAAiB,GACjBC,cAAgB,GAChBd,aAAe,GACfzM,WAAa,GACbD,UAAY,GACZiM,YAAa,GACb2B,YAAc,GACdd,mBAAoB,EACpBpI,WAAa,GACbG,SAAW,GACXyH,SAAW,GACXxD,UAAY,EACZoI,YAAc,QAv6BJ,KA46BnBqB,eAAkB1J,IAEhB,IAAI2J,EACAC,EAEJ,OAAQ5J,GACN,IAAK,QACD2J,EAAW3gB,KAAK+B,MAAMie,cACtBY,EAAgB,0BAElB,MACF,IAAK,QACDrU,QAAQC,IAAI,UAAWxM,KAAK+B,MAAMke,mBAClCU,EAAW3gB,KAAK+B,MAAMke,kBACtBW,EAAgB,yBAClB,MACF,IAAK,QACDrU,QAAQC,IAAI,UAAWxM,KAAK+B,MAAMme,oBAClCS,EAAW3gB,KAAK+B,MAAMme,mBACtBU,EAAgB,iBAClB,MACF,IAAK,OACDrU,QAAQC,IAAI,SAAUxM,KAAK+B,MAAMoe,mBACjCQ,EAAW3gB,KAAK+B,MAAMoe,kBACtBS,EAAgB,gBAClB,MACF,IAAK,OACDrU,QAAQC,IAAI,SAASxM,KAAK+B,MAAMqe,mBAChCO,EAAW3gB,KAAK+B,MAAMqe,kBACtBQ,EAAgB,iBAClB,MACF,IAAK,MACDrU,QAAQC,IAAI,OACZmU,EAAW3gB,KAAK+B,MAAMse,sBACtBO,EAAgB,uBAClB,MACF,IAAK,MACLrU,QAAQC,IAAI,QAASxM,KAAK+B,MAAMue,uBAC5BK,EAAW3gB,KAAK+B,MAAMue,sBACtBM,EAAgB,uBAClB,MACF,IAAK,QACDD,EAAW3gB,KAAK+B,MAAMwe,mBACtBK,EAAgB,iBAClB,MACF,IAAK,SACDD,EAAW3gB,KAAK+B,MAAMye,oBACtBI,EAAgB,kBAClB,MACF,IAAK,QACDD,EAAW3gB,KAAK+B,MAAM0Q,UACtBmO,EAAgB,yBAWtB,OANuB,GAAnBD,EAASzV,SAAyD,IAA1CrB,OAAO8W,EAAS,IAAI/R,SAAS,aACrD+R,EAASE,QAAQD,GAKhB5gB,KAAK+B,MAAMod,eAAiB,SAAkB2B,GAAZH,GAA4C,GAAnBA,EAASzV,OAC/D,gCAAS0V,GAGVD,EAASre,IAAK,CAACsI,EAAKvD,IACd,4BAAQ7E,IAAKwU,EAAMpN,OAAO,WAAWA,OAAOvC,IAAUuD,KA/+BpD,KAu/BnBgL,YAAeG,IACb/V,KAAKkC,SAAS,CACZ,CAAC6T,IAAkB/V,KAAK+B,MAAMgU,MAz/Bf,KA+/BnBxH,YAAeE,IAGNA,EAAUvB,MACRuB,EAAUvB,MAAM0B,SAAS,sBACjBH,EAAUvB,aAGVuB,EAAUP,MAIlBO,EAAUP,MAAMU,SAAS,sBACnBH,EAAUP,aAEVO,EAAUvB,MAGvBlN,KAAKmd,kBAAkB1O,GAEvBzO,KAAKkC,SAAS,CACZkK,cAAgBqC,KAlhCpBzO,KAAK+B,MAAQ,CACRod,aAAe,GACfF,gBAAiB,EACjBe,cAAgB,GAChBC,kBAAoB,GACpBC,mBAAqB,GACrBC,kBAAoB,GACpBC,kBAAoB,GACpBC,sBAAwB,GACxBC,sBAAuB,GACvBC,mBAAqB,GACrBC,oBAAsB,GACtB/N,UAAW,GACXkM,MAAQ,GAERzD,cAAgB,GAChBC,cAAgB,GAChBC,cAAgB,GAChBC,aAAe,GACfC,aAAe,GACfC,YAAc,GACdC,YAAc,GACdC,cAAgB,GAChBC,eAAiB,GACjBC,cAAgB,GAChBd,aAAe,GACfzM,WAAa,GACbD,UAAY,GACZiM,YAAa,GACba,mBAAoB,EAGpBuD,iBAAkB,EAClBL,eAAgB,EAGhBhS,iBAAmB,GACnB0S,iBAAmB,GACnBzS,cAAgB,GAEhByG,WAAY,GACZ4H,SAAW,GACXxD,UAAY,EACZjE,SAAW,GACXqM,YAAc,IAYrBxQ,qBACIvD,GAAGsB,WAAW,sBAAsBC,OAAOC,UAAUC,KAAKC,IAEpDT,QAAQC,IAAI,mBAAmBQ,GAG/B,IAAI+T,EAAsB,IAAI,IAAI9T,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyC,SAASC,OACzE6T,EAAsB,IAAI,IAAI/T,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2I,SAASjG,OACzE8T,EAAsB,IAAI,IAAIhU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMuH,SAAS7E,OACzE+T,EAAqB,IAAI,IAAIjU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMwH,QAAQ9E,OACvEgU,EAAqB,IAAI,IAAIlU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyH,QAAQ/E,OACvEiU,EAAoB,IAAI,IAAInU,IAAID,EAAU1K,IAAKmI,GAASA,EAAM0H,cAAchF,OAC5EkU,EAAoB,IAAI,IAAIpU,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2H,cAAcjF,OAC5EmU,EAAsB,IAAI,IAAIrU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMiI,eAAevF,OAC/EoU,EAAuB,IAAI,IAAItU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMkI,UAAUxF,OAC3EqU,EAAsB,IAAI,IAAIvU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMmI,SAASzF,OAG7EnN,KAAKkC,SAAS,CAAE8d,cAAgBe,EAChBd,kBAAoBe,EACpBd,mBAAqBe,EACrBd,kBAAoBe,EACpBd,kBAAoBe,EACpBd,sBAAwBe,EACxBd,sBAAwBe,EACxBd,mBAAqBe,EACrBd,oBAAsBe,EACtB9O,UAAY+O,MAG/BpU,MAAMb,QAAQc,OAEf/B,GAAGsB,WAAW,mBAAmBC,OAAOC,UAAUC,KAAKC,IAErDT,QAAQC,IAAI,mBAAmBQ,GAG/B,IAAIwE,EAA4B,IAAI,IAAIvE,IAAID,EAAU1K,IAAImI,GAASA,EAAMyC,SAASC,OAC9EyR,EAA4B,IAAI,IAAI3R,IAAID,EAAU1K,IAAImI,GAASA,EAAMyD,SAASf,OAGlFnN,KAAKkC,SAAS,CAAEiK,iBAAmBqF,EACnBqN,iBAAmBD,MAGpCxR,MAAMb,QAAQc,OAIfrN,KAAKmd,kBAAkBnd,KAAK+B,MAAMqK,eAi7BxC5M,SAEE,OACE,oCACE,kBAAC,GAAD,MAEA,kBAACI,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAEhC,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK5B,UAAU,aAAa6B,GAAG,MAE7B,kBAACkS,EAAA,EAAD,CAAM/T,UAAU,uBACd,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,qBACpB,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK4C,GAAG,KACN,wBAAIxE,UAAU,QAAd,+BAEF,kBAAC4B,EAAA,EAAD,CAAK5B,UAAU,aAAawE,GAAG,KAE7B,kBAAC4Q,GAAA,EAAD,CACIzK,MAAM,SACN3G,KAAK,SACLqR,KAAK,KACL7T,QAASlB,KAAKygB,WAEd,0BAAM/gB,UAAU,mBAEN,uBAAGA,UAAU,mBAEf,0BAAMA,UAAU,mBAAhB,yBAOlB,kBAACiU,EAAA,EAAD,KACA,kBAACxP,EAAA,EAAD,KACI,wBAAIzE,UAAU,iCAAd,oBAGA,yBAAKA,UAAU,WACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,cACXxV,UAAU,sBADd,SAOE,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SAEVhE,UAAeM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACnF1b,GAAG,cACHqL,MAAOzK,KAAK+B,MAAMmZ,cAClB5G,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,YAK/B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,cACXxV,UAAU,sBADd,SAOE,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,cACHqL,MAASzK,KAAK+B,MAAMoZ,cACpB7G,SAAUtU,KAAK8e,kBAGZ9e,KAAK0gB,eAAe,aAO/B,kBAACrf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,cACTxV,UAAU,sBADhB,SAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,cACHqL,MAAQzK,KAAK+B,MAAMqZ,cACnB9G,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,YAK7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,aACTxV,UAAU,sBADhB,QAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,QAAY,2BAA6B,aAChF1b,GAAG,aACHqL,MAAOzK,KAAK+B,MAAMsZ,aAClB/G,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,WAK7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,aACTxV,UAAU,sBADhB,QAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,QAAY,2BAA6B,aAChF1b,GAAG,aACHqL,MAASzK,KAAK+B,MAAMuZ,aACpBhH,SAAWtU,KAAK8e,kBAEb9e,KAAK0gB,eAAe,WAI7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,YACTxV,UAAU,sBADhB,eAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,OAAW,2BAA6B,aAC/E1b,GAAG,YACHqL,MAAOzK,KAAK+B,MAAMwZ,YAClBjH,SAAYtU,KAAK8e,kBAEd9e,KAAK0gB,eAAe,UAI7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,YACTxV,UAAU,sBADhB,eAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,OAAW,2BAA6B,aAC/E1b,GAAG,YACHqL,MAAOzK,KAAK+B,MAAMyZ,YAClBlH,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,WAO/B,kBAACrf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,cACbxV,UAAU,sBADZ,gBAOA,kBAAC2E,EAAA,EAAD,CACE3E,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,cACHsE,KAAK,SACL+G,MAAOzK,KAAK+B,MAAM0Z,cAClBnH,SAAUtU,KAAK8e,kBAEhB9e,KAAK0gB,eAAe,YAIzB,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,eACbxV,UAAU,sBADZ,UAOA,kBAAC2E,EAAA,EAAD,CACEX,KAAK,SAELhE,UAAaM,KAAK8a,qBAAqB,UAAc,2BAA6B,aAClF1b,GAAG,eACHqL,MAASzK,KAAK+B,MAAM2Z,eACpBpH,SAAUtU,KAAK8e,kBAEf9e,KAAK0gB,eAAe,aAQ1B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACR,kBAACR,GAAA,EAAD,KACM,2BAAOU,QAAQ,cACbxV,UAAU,sBADZ,SAMA,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SAEZhE,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,cACHqL,MAAOzK,KAAK+B,MAAM4Z,cAClBrH,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,aAe/B,kBAACrf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,qBAFV,iCAME,kBAAC7Q,EAAA,EAAD,CACE3E,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aAEjF1b,GAAG,oBACHmF,YAAY,mBACZb,KAAK,SACL+G,MAAQzK,KAAK+B,MAAMqM,WACnBkG,SAAUtU,KAAKwa,sBAIvB,kBAAClZ,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,cAFV,QAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAaM,KAAK8a,qBAAqB,QAAY,2BAA6B,aAEhF1b,GAAG,aACHmF,YAAY,IACZb,KAAK,SACL2C,IAAI,IACJyR,IAAK9X,KAAK+B,MAAMkV,UAChBxM,MAAOzK,KAAK+B,MAAMoM,UAClBmG,SAAUtU,KAAKka,gBAIrB,kBAAC5Y,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,sBAFV,kCAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAcM,KAAK8a,qBAAqB,UAAc,2BAA6B,aACnF1b,GAAG,qBACHmF,YAAY,mBACZb,KAAK,SACL+G,MAAQzK,KAAK+B,MAAMqY,YACnB9F,SAAUtU,KAAK2a,uBAIrB,kBAACrZ,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,eAFV,SAaA,kBAAC,GAAD,CACE9V,GAAG,cACHM,UAAcM,KAAK8a,qBAAqB,QAAc,aAAe,2BACrEvW,YAAc,kCAEdkG,MAAOzK,KAAK+B,MAAM8Y,aAClBvG,SAAUtU,KAAK4a,sBAMvB,kBAACvZ,EAAA,EAAD,CAAK3B,UAAU,6BACb,kBAAC4B,EAAA,EAAD,CAAK0T,GAAG,IAAItV,UAAU,cAGd,kBAACoV,GAAA,EAAD,CAAQ2M,OAAK,EAAC/hB,UAAU,iBAAiB2K,MAAM,UAAU3G,KAAK,SAC1DqR,KAAK,KACL7T,QAASlB,KAAKgc,UAEhB,0BAAMtc,UAAU,mBAEd,uBAAGA,UAAU,iBAEf,0BAAMA,UAAU,mBAAhB,oCASd,wBAAIA,UAAU,SAEd,wBAAIA,UAAU,iCAAd,wCAGA,yBAAKA,UAAU,WACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,qBAFV,oBAOE,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,oBACHmF,YAAY,mBACZb,KAAK,OACL+G,MAAQzK,KAAK+B,MAAM8Q,eAI3B,kBAACvR,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,mBAFV,4CAMA,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,kBACHmF,YAAY,MACZb,KAAK,OACL+G,MAAQzK,KAAK+B,MAAM0Y,aAIzB,kBAACnZ,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,mBAFV,kBAOE,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,kBACHmF,YAAY,mBACZb,KAAK,OACL+G,MAAQzK,KAAK+B,MAAMiR,aAI3B,kBAAC1R,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,iBAFV,8BAMA,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,gBACHmF,YAAY,MACZb,KAAK,OACL+G,MAAQzK,KAAK+B,MAAMsd,iBAK3B,kBAAChe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,4BAFV,oCAOA,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,2BACHmF,YAAY,WACZb,KAAK,WAIX,kBAACpC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,6BAFV,qCAOA,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,4BACHmF,YAAY,WACZb,KAAK,kBAezB,wBAAIhE,UAAU,SACd,kBAAC2B,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAK5B,UAAU,aAAa6B,GAAG,MAC7B,kBAAC,GAAD,CAAiB4U,UAAU,yCACfiC,aAAc,CAAC,QAAQ,QAAQ,OAAO,QAAQ,OAAO,cAAc,cACnEvN,KAAM7K,KAAK+B,MAAM4c,MACjBvF,qBAAsB,kBACtBH,mBAAmB,gBACnBnD,WAAY9V,KAAK4V,YACjBK,YAAajW,KAAKoe,WAClB1G,SAAU1X,KAAK6d,SACf1E,sBAAwBnZ,KAAK+B,MAAMyc,gBACnChG,mBAAoBxY,KAAK+B,MAAMoc,cAC/B1F,mBAAoBzY,KAAK+B,MAAMoK,iBAC/BuM,mBAAoB1Y,KAAK+B,MAAM8c,iBAC/B5G,WAAYjY,KAAKuO,YACjB5B,OAAQ3M,KAAK+B,MAAMqK,qBAY9B6N,UC3mDA,MAAM0H,WAA4BpiB,YAC7CsC,YAAY5B,GACR6B,MAAM7B,GADQ,KAsBlB2V,YAAc,KACV,IAAIgM,EAAe5hB,KAAK+B,MAAM8T,WAC9B7V,KAAKkC,SAAS,CACZ2T,YAAa7V,KAAK+B,MAAM8T,aAG1B7V,KAAKC,MAAM6V,WAAW9V,KAAKC,MAAM8V,gBAAgB6L,IA5BnC,KA+BlBxK,YAAc,KAEVpX,KAAKkC,SAAS,CACV2T,YAAa7V,KAAK+B,MAAM8T,aAK5B,IAAIgM,EAAY,IAAIxM,GAAKrV,KAAK+B,MAAM6P,MACpCiQ,EAAUvP,IAActS,KAAK+B,MAAM6P,KAAKU,IACxCuP,EAAUvM,SAActV,KAAK+B,MAAM6P,KAAK0D,SACxCuM,EAAU3U,MAAcsK,SAASC,eAAe,oBAAoBhN,MACpEoX,EAAUzO,MAAcoE,SAASC,eAAe,oBAAoBhN,MACpEoX,EAAU7P,MAAc3D,OAAOmJ,SAASC,eAAe,oBAAoBhN,OAC3EoX,EAAU5P,KAAc5D,OAAOmJ,SAASC,eAAe,mBAAmBhN,OAC1EoX,EAAU3P,KAAcsF,SAASC,eAAe,mBAAmBhN,MACnEoX,EAAU1P,WAAc9D,OAAOmJ,SAASC,eAAe,kBAAkBhN,OACzEoX,EAAUzP,WAAcoF,SAASC,eAAe,kBAAkBhN,MAClEoX,EAAUnP,YAAc8E,SAASC,eAAe,oBAAoBhN,MACpEoX,EAAUlP,OAAc6E,SAASC,eAAe,qBAAqBhN,MACrEoX,EAAUjP,MAAc4E,SAASC,eAAe,oBAAoBhN,MAIpE8B,QAAQC,IAAI,0BAA0BqV,EAAUnM,iBAAiB,KAAMmM,EAAUpM,YACjFzV,KAAKC,MAAMyX,SAASmK,IAtDpB7hB,KAAK+B,MAAQ,CACT8T,WAAY5V,EAAMgE,OAClB0T,MAAO1X,EAAM0X,MACb/F,KAAM3R,EAAM2R,MAMpB/C,qBACKtC,QAAQC,IAAI,iCACZ,IAAIsV,EAAK,IAAIzM,GAAKrV,KAAK+B,MAAM6P,MAC7BrF,QAAQC,IAAI,wBAAyBxM,KAAK+B,MAAM6P,MAChDrF,QAAQC,IAAI,yBAAyBsV,GACrCvV,QAAQC,IAAI,OACZD,QAAQC,IAAIsV,EAAGtM,YA0CpBhW,SACI,OAEI,kBAACgX,GAAA,EAAD,CACI9W,UAAU,wBACTuE,OAAQjE,KAAK+B,MAAM8T,YAGpB,yBAAKnW,UAAU,gBACX,wBAAIA,UAAU,cAAcN,GAAG,uBAC9BY,KAAK+B,MAAM4V,OAEZ,4BACArT,aAAW,QACX5E,UAAU,QACVkX,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAEpB,0BAAMiB,eAAa,GAAnB,UAGJ,yBAAKnX,UAAU,cACf,kBAACyE,EAAA,EAAD,KACI,kBAACqQ,GAAA,EAAD,CAAWoD,KAAG,GAEV,kBAACtW,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAO3C,QAAQ,mBACXxV,UAAU,qBACVmY,GAAG,KAFP,SASA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,OACJhE,UAAU,2BACVN,GAAG,mBACHmF,YAAavE,KAAK+B,MAAM6P,KAAK1E,MAC7BiI,aAAcnV,KAAK+B,MAAM6P,KAAK1E,SAK1C,kBAAC5L,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAO3C,QAAQ,mBACXxV,UAAU,qBACVmY,GAAG,KAFP,SAOA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,OACJhE,UAAU,2BACVN,GAAG,mBACHmF,YAAavE,KAAK+B,MAAM6P,KAAKwB,MAC7B+B,aAAcnV,KAAK+B,MAAM6P,KAAKwB,UAI9C,kBAACoB,GAAA,EAAD,CAAWoD,KAAG,GACV,kBAACtW,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAO3C,QAAQ,mBACfxV,UAAU,sBADV,SAKA,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACRhE,UAAU,2BACVN,GAAG,mBACHiH,IAAI,MACJyR,IAAI,MACJiK,KAAK,KACLxd,YAAavE,KAAK+B,MAAM6P,KAAKI,MAC7BmD,aAAcnV,KAAK+B,MAAM6P,KAAKI,SAItC,kBAAC1Q,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAQ3C,QAAQ,kBACRxV,UAAU,sBADlB,QAKA,kBAAC2E,EAAA,EAAD,CAAQX,KAAK,SACLhE,UAAU,2BACVN,GAAG,kBACHiH,IAAI,KACJyR,IAAI,KACJiK,KAAK,IACLxd,YAAavE,KAAK+B,MAAM6P,KAAKK,KAC7BkD,aAAcnV,KAAK+B,MAAM6P,KAAKK,SAI9C,kBAACuC,GAAA,EAAD,CAAWoD,KAAG,GACV,kBAACtW,EAAA,EAAD,CAAMuW,GAAG,KACL,2BAAQ3C,QAAQ,kBACRxV,UAAU,qBACVmY,GAAG,KAFX,QAMA,kBAACxT,EAAA,EAAD,CAAQX,KAAK,OACLhE,UAAU,2BACVN,GAAG,kBACHmF,YAAavE,KAAK+B,MAAM6P,KAAKM,KAC7BiD,aAAcnV,KAAK+B,MAAM6P,KAAKM,QAG1C,kBAAC5Q,EAAA,EAAD,CAAMuW,GAAG,KACL,2BAAQ3C,QAAQ,iBACZxV,UAAU,qBACVmY,GAAG,KAFP,eAOA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,SACJhE,UAAU,2BACVN,GAAG,iBACHiH,IAAI,KACJyR,IAAI,MACJiK,KAAK,IACLxd,YAAavE,KAAK+B,MAAM6P,KAAKO,WAC7BgD,aAAcnV,KAAK+B,MAAM6P,KAAKO,eAO9C,kBAACqC,GAAA,EAAD,CAAWoD,KAAG,GACV,kBAACtW,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAQ3C,QAAQ,iBACRxV,UAAU,qBACVmY,GAAG,KAFX,oBAMA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,OACRhE,UAAU,2BACVN,GAAG,iBACH4iB,UAAU,IACVzd,YAAavE,KAAK+B,MAAM6P,KAAKQ,WAC7B+C,aAAcnV,KAAK+B,MAAM6P,KAAKQ,cAGtC,kBAAC9Q,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAQ3C,QAAQ,mBACRxV,UAAU,sBADlB,0BAMA,kBAAC2E,EAAA,EAAD,CAAQ3E,UAAU,2BACVN,GAAG,mBACHsE,KAAK,OACLa,YAAavE,KAAK+B,MAAM6P,KAAKc,YAC7ByC,aAAcnV,KAAK+B,MAAM6P,KAAKc,gBAK9C,kBAAC8B,GAAA,EAAD,CAAWoD,KAAG,GACV,kBAACtW,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAQ3C,QAAQ,oBACRxV,UAAU,sBADlB,UAMA,kBAAC2E,EAAA,EAAD,CAAQ3E,UAAU,2BACVN,GAAG,oBACHsE,KAAK,OACLa,YAAavE,KAAK+B,MAAM6P,KAAKe,OAC7BwC,aAAcnV,KAAK+B,MAAM6P,KAAKe,UAI1C,kBAACrR,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAQ3C,QAAQ,mBACRxV,UAAU,sBADlB,cAKA,kBAAC2E,EAAA,EAAD,CAAQX,KAAK,OACLhE,UAAU,2BACVN,GAAG,mBACHmF,YAAavE,KAAK+B,MAAM6P,KAAKgB,MAC7BuC,aAAcnV,KAAK+B,MAAM6P,KAAKgB,UAK9C,kBAAC4B,GAAA,EAAD,CAAWoD,KAAG,GACV,kBAACtW,EAAA,EAAD,CAAK5B,UAAU,aACX,kBAACoV,GAAA,EAAD,CAAQpV,UAAU,UACV2K,MAAM,SACNuM,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAJ5B,cASJ,kBAACtU,EAAA,EAAD,CAAK5B,UAAW,aAAamY,GAAG,KAE5B,kBAAC/C,GAAA,EAAD,CAAQzK,MAAM,UACN3G,KAAK,SACLxC,QAAU,IAAMlB,KAAKoX,eAF7B,yC,OCpRb,MAAM6K,WAAyB1iB,YAC1CsC,YAAY5B,GACR6B,MAAM7B,GADQ,KAiBlB2V,YAAc,KACV,IAAIgM,EAAe5hB,KAAK+B,MAAM8T,WAC9B7V,KAAKkC,SAAS,CACZ2T,YAAa7V,KAAK+B,MAAM8T,aAG1B7V,KAAKC,MAAM6V,WAAW9V,KAAKC,MAAM8V,gBAAgB6L,IAvBnC,KA0BlB5L,eAAiB,KAEbhW,KAAKkC,SAAS,CACV2T,YAAa7V,KAAK+B,MAAM8T,aAG5B7V,KAAKC,MAAMgW,YAAYjW,KAAK+B,MAAM6P,OA9BlC5R,KAAK+B,MAAQ,CACT8T,WAAY5V,EAAMgE,OAClBiS,YAAajW,EAAMiW,YACnBC,UAAWlW,EAAMkW,UACjBC,SAAUnW,EAAMmW,SAChBC,kBAAmBpW,EAAMoW,kBACzBzE,KAAO3R,EAAMqW,SAIrBC,oBACIhK,QAAQC,IAAI,wCACZD,QAAQC,IAAIxM,KAAK+B,MAAM6P,MAqB3BpS,SACI,OACI,kBAACgX,GAAA,EAAD,CACA9W,UAAU,qCACV+W,iBAAiB,qBACjBxS,OAAQjE,KAAK+B,MAAM8T,WACnBa,OAAQ,IAAM1W,KAAK4V,cACnBe,SAAS,UAET,yBAAKjX,UAAU,gBACX,wBAAIA,UAAU,cAAcN,GAAG,4BAC9BY,KAAK+B,MAAMmU,aAEZ,4BACA5R,aAAW,QACX5E,UAAU,QACVkX,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAEpB,0BAAMiB,eAAa,GAAnB,UAGJ,yBAAKnX,UAAU,cACX,yBAAKA,UAAU,oBACf,uBAAGA,UAAU,wBAEb,wBAAIA,UAAU,gBAAgBM,KAAK+B,MAAMoU,WACzC,2BACKnW,KAAK+B,MAAMqU,YAIpB,yBAAK1W,UAAU,gBACX,kBAACoV,GAAA,EAAD,CAAQpV,UAAU,YAAY2K,MAAM,UAAU3G,KAAK,SAC3CxC,QAAS,IAAMlB,KAAKgW,kBAC3BhW,KAAK+B,MAAMsU,mBAEZ,kBAACvB,GAAA,EAAD,CACApV,UAAU,qBACV2K,MAAM,OACNuM,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eALpB,gBCPhB,MAAMyD,GAAS9N,KAAO+N,aAAa,oBAM7BhO,GALU+N,GAAO5N,iBACrBC,KAAkBC,QAClB,iBAGiBL,GAAG,gBAGtB+N,GAAOE,KAAKC,oBAAoB,IAAIC,MAAuB1M,KAAK2M,IAC9DnN,QAAQC,IAAR,+CAAoDkN,EAAKta,OACxDgO,MAAMb,QAAQc,OAIjB,MAAM6U,WAAc5iB,IAAMC,UA8BtBsC,YAAY5B,GACV6B,MAAM7B,GADW,KAsCrBkiB,eAAkBvQ,IACdtG,GAAGsB,WAAW,uBACb+Q,kBACC,CAACrL,IAAMV,EAAKU,KAAKV,GAElB7E,KAAK6Q,IACJrR,QAAQC,IAAI,qBAAsBoR,GAClC5d,KAAKkC,SAAS,CAACkgB,eAAc,IAC7BpiB,KAAKqiB,0BACJjV,MAAMb,QAAQc,QA/CA,KAkDrBiV,iBAAoB1Q,IAAO,IAElBU,EAAOV,EAAPU,IAGL/F,QAAQC,IAAI,gBAAgB8F,EAAIC,WAAW,mCAC3ChG,QAAQC,IAAIoF,GAEZtG,GAAGsB,WAAW,uBACXyR,iBACC,CAAC/L,IAAMV,EAAKU,MAEhBvF,KAAK6Q,IACLrR,QAAQC,IAAI,qBAAsBoR,GAClC5d,KAAKkC,SAAS,CAACqgB,iBAAiB,IAChCviB,KAAKqiB,0BACJjV,MAAMb,QAAQc,QAlEE,KAuPrBmV,aAAgBC,IAEblW,QAAQC,IAAI,2CACZD,QAAQC,IAAIiW,EAAIC,SAChB1iB,KAAKkC,SAAS,CAACygB,YAAY,EAAKC,SAAWH,EAAIC,WA3P7B,KAmRvBG,gBAAkB,KAEhB7iB,KAAKkC,SAAS,CAACkgB,eAAgBpiB,KAAK+B,MAAMqgB,iBArRrB,KAyRvBU,kBAAoB,CAACC,EAAWC,KAC5BhjB,KAAKkC,SAAS,CAAC,CAAC6gB,GAAcC,IACX,eAAfD,GACA/iB,KAAKkC,SAAS,CAAC0gB,SAAU,MA5RV,KAkSvBhN,YAAeG,IAGb/V,KAAKkC,SAAS,CACZ,CAAC6T,IAAkB/V,KAAK+B,MAAMgU,MApS5B/V,KAAK+B,MAAQ,CACXkhB,SAAW,IACX/W,MAAO,GACPqW,iBAAiB,EACjBH,eAAe,EACfO,YAAa,EACbC,SAAW,IAYfrW,QAAQC,IAAI,uBAIZxM,KAAKkjB,cAAgBljB,KAAKkjB,cAAclgB,KAAKhD,MAE7CA,KAAKmjB,WAAanjB,KAAKmjB,WAAWngB,KAAKhD,MACvCA,KAAKojB,iBAAmBpjB,KAAKojB,iBAAiBpgB,KAAKhD,MA6CrDkjB,gBACE,IAAIhH,EAAS1E,SAASC,eAAe,eAAehN,MAChD0R,EAAS3E,SAASC,eAAe,eAAehN,MAChD2R,EAAS/N,OAAOmJ,SAASC,eAAe,eAAehN,OACvD4R,EAAShO,OAAOmJ,SAASC,eAAe,cAAchN,OACtD6R,EAAQ9E,SAASC,eAAe,cAAchN,MAC9C8R,EAAalO,OAAOmJ,SAASC,eAAe,aAAahN,OACzD+R,EAAchF,SAASC,eAAe,aAAahN,MACnDgS,EAAejF,SAASC,eAAe,eAAehN,MACtDiS,EAAUlF,SAASC,eAAe,gBAAgBhN,MAClDkS,EAASnF,SAASC,eAAe,eAAehN,MAEpDa,GAAGsB,WAAW,uBACboQ,UAAU,CACT1H,SAAU+D,GAAOE,KAAKG,KAAKta,GAC3B8N,MAAOgP,EACP9I,MAAO+I,EACPnK,MAAOoK,EACPnK,KAAMoK,EACNnK,KAAMoK,EACNnK,WAAYoK,EACZnK,WAAYoK,EACZ9J,YAAa+J,EACb9J,OAAQ+J,EACR9J,MAAO+J,IAER5P,KAAKkQ,IACL1Q,QAAQC,IAAI,uBAAuByQ,EAAaC,YAChDld,KAAKqiB,0BACJjV,MAEEpN,KAAKwiB,aAAajW,QAAQc,QAQhCgV,wBAeE/W,GAAGsB,WAAW,uBAAuBC,OAAOC,UAAUC,KAAK0R,IAEzDlS,QAAQC,IAAI,cAAciS,GAI1Bze,KAAKkC,SAAUH,IACbwK,QAAQC,IAAI,uBAAuBiS,GAE5B,CAACvS,MAAQuS,OAInBrR,MAAMb,QAAQc,OAGbd,QAAQC,IAAI,mBAAmBxM,KAAKqjB,WACpC9W,QAAQC,IAAI,kBAAkBxM,KAAK+B,MAAMmK,OAQ7CqK,oBACEhK,QAAQC,IAAI,qBAebqC,qBACGtC,QAAQC,IAAI,mBACZxM,KAAKqiB,wBAGP9N,sBACIhI,QAAQC,IAAI,iBAAkBxM,KAAK+B,MAAMmK,OAY/CiX,WAAW3U,GAGT,OAFoBA,EAAM/M,OAAOrC,GAAG0K,UAAU,IAG5C,IAAK,QACH9J,KAAK+B,MAAMmL,MAAQsB,EAAM/M,OAAOgJ,MAChC,MACF,IAAK,QACHzK,KAAK+B,MAAMiQ,MAAQ3D,OAAOG,EAAM/M,OAAOgJ,OACvC,MACF,IAAK,OACHzK,KAAK+B,MAAMkQ,KAAO5D,OAAOG,EAAM/M,OAAOgJ,OACtC,MACF,IAAK,OACHzK,KAAK+B,MAAMmQ,KAAO1D,EAAM/M,OAAOgJ,MAC/B,MACF,IAAK,MACHzK,KAAK+B,MAAMoQ,WAAa9D,OAAOG,EAAM/M,OAAOgJ,OAC5C,MACF,IAAK,MACHzK,KAAK+B,MAAMqQ,WAAa5D,EAAM/M,OAAOgJ,MACrC,MACF,IAAK,QACHzK,KAAK+B,MAAM2Q,YAAclE,EAAM/M,OAAOgJ,MACtC,MACF,IAAK,SACHzK,KAAK+B,MAAM4Q,OAASnE,EAAM/M,OAAOgJ,MACjC,MACF,IAAK,QACHzK,KAAK+B,MAAM6Q,MAAQpE,EAAM/M,OAAOgJ,OAUtC2Y,mBACE7W,QAAQC,IAAI,iCAgCdiU,YACEjJ,SAASC,eAAe,eAAehN,MAAQ,GAC/C+M,SAASC,eAAe,eAAehN,MAAQ,GAC/C+M,SAASC,eAAe,cAAchN,MAAM,GAC5C+M,SAASC,eAAe,cAAchN,MAAM,GAC5C+M,SAASC,eAAe,aAAahN,MAAM,GAC3C+M,SAASC,eAAe,aAAahN,MAAM,GAC3C+M,SAASC,eAAe,eAAehN,MAAM,GAC7C+M,SAASC,eAAe,gBAAgBhN,MAAM,GAC9C+M,SAASC,eAAe,eAAehN,MAAM,GAqD/C6Y,kBAEG,OAAOtjB,KAAK+B,MAAMmK,MAAM5J,IAAI,CAACsP,EAAMvK,KAC9B,IAAIuR,EAAW,IAAIvD,GAAKzD,GAGxBrF,QAAQC,IAAI,wCAAwCxM,KAAK+B,MAAMmK,MAAMhB,QAJ7B,MAKhCoH,EAA4FV,EAA5FU,IAAapF,GAA+E0E,EAAxF0D,SAAwF1D,EAA/E1E,OAAMkG,EAAyExB,EAAzEwB,MAAMpB,EAAmEJ,EAAnEI,MAAMC,EAA6DL,EAA7DK,KAAKC,EAAwDN,EAAxDM,KAAKC,EAAmDP,EAAnDO,WAAWC,EAAwCR,EAAxCQ,WAAWM,EAA6Bd,EAA7Bc,YAAYC,EAAiBf,EAAjBe,OAAOC,EAAUhB,EAAVgB,MAC1FrG,QAAQC,IAAI,cAAcoM,EAAStG,IAAIsG,EAAStD,UAGhD,MAAMvD,EAAOlI,OAAOmI,GAAOpI,OAAO,OAAOA,OAAOC,OAAOoI,IACtCrI,OAAO,OAAOA,OAAOsI,GACnBtI,OAAO,OAAOA,OAAOuI,GACnBvI,OAAO,OAAOA,OAAOwI,GAKpCC,GAFyBrS,KAAK+B,MAAMkhB,SAExB,UAAUrZ,OAAO0I,EAAIC,aACjCC,EAAQ,IAAI5I,OAAO0I,EAAIC,YACvBE,EAAY,UAAU7I,OAAOC,OALhB,KAKoCD,OACrC,eAAeA,OAAO8I,IAAc9I,OACpC,gBAAgBA,OAAO+I,GAAQ/I,OAC/B,oBAAeA,OAAOgJ,KAEtBrG,QAAQC,IAAI,aAAaiG,GAC3C,MAAMuG,EAAiB9L,EAAMtD,OAAO,KAAKA,OAAOwJ,GAAOxJ,OAAO,OAAOA,OAAOmI,GA2B5E,OACI,wBAAIvP,IAAKgQ,GACT,wBAAIW,MAAM,OACR,kBAAC3S,EAAA,EAAD,CAAOd,UAAU,sBACf,uBACEA,UAAU,6BACVuB,KAAK,SACLC,QAASnC,GAAKA,EAAEoC,kBAEhB,yBACEV,IAAI,MACJC,IAAKC,EAAQ,OAGjB,kBAACH,EAAA,EAAD,KACE,0BAAMd,UAAU,gBACbwN,MAKT,4BACE,0BAAMxN,UAAU,gBACb0T,IAGL,4BACI,uBAAG1T,UA/BI,8BA8BX,IACgCqS,GAchC,wBAAIrS,UAAY,eACd,8BACA,uBAAGA,UAjDM,+BAiDeN,GAAIiT,IAC1B,kBAACgB,EAAA,EAAD,CACEC,MAAO,EACP7R,OAAQ4Q,GAEPI,KAIP,wBAAI/S,UAAU,cACd,kBAACW,EAAA,EAAD,CAAsByT,UAAU,QAC5B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UA5DM,8BA8DX,kBAACkB,EAAA,EAAD,CAAclB,UAAU,uBACtB,kBAACmB,EAAA,EAAD,CAAcnB,UAAU,aAAaoB,QAAM,EAACC,IAAI,OAC9C,wBAAIrB,UAAU,qBAAqBsZ,IAErC,kBAACnY,EAAA,EAAD,CAAcG,SAAO,IAErB,kBAACH,EAAA,EAAD,CAAcK,QAAS,IAAMlB,KAAK4V,YAAY,kBAC5C,uBAAGlW,UAAU,gBACb,4CACA,kBAAC,GAAD,CACEiY,MAAOiB,EAASpD,WAChB5D,KAAMgH,EACN7C,eAAe,gBACf9R,OAAQjE,KAAK+B,MAAMqgB,cACnBtM,WAAY9V,KAAK8iB,kBACjBpL,SAAU1X,KAAKmiB,eACf7L,QAASsC,KAOb,kBAAC/X,EAAA,EAAD,CAAcK,QAAS,IAAMlB,KAAK4V,YAAY,oBAC5C,uBAAGlW,UAAU,qBACb,qCACA,kBAAC,GAAD,CAAkBwW,YAAY,UACZC,UAAWyC,EAASpD,WACpBa,kBAAkB,yBAClBD,SAxIP,6FAyIOnS,OAAQjE,KAAK+B,MAAMwgB,gBACnBxM,eAAe,kBACfD,WAAY9V,KAAK8iB,kBACjB7M,YAAajW,KAAKsiB,iBAClBhM,QAASsC,WAiB/CpZ,SACE,OACE,oCACE,kBAAC,GAAD,MAEA,kBAACI,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAEhC,kBAACwB,EAAA,EAAD,KACE,yBAAK3B,UAAU,OACf,kBAAC+T,EAAA,EAAD,CAAM/T,UAAU,uBACZ,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,qBACpB,wBAAIA,UAAU,QAAd,uBAGF,kBAACiU,EAAA,EAAD,KACA,kBAACxP,EAAA,EAAD,KACI,wBAAIzE,UAAU,iCAAd,oBAGA,yBAAKA,UAAU,WACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,cACXxV,UAAU,sBADd,SAOE,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,OACZhE,UAAU,2BACVN,GAAG,cACHmF,YAAY,kCAQlB,kBAACjD,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,cACXxV,UAAU,sBADd,SAOE,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,OACZhE,UAAU,2BACVN,GAAG,cACHmF,YAAY,gCASlB,kBAAClD,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,cACTxV,UAAU,sBADhB,SAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAU,2BACVN,GAAG,cACHmF,YAAY,YACZ8B,IAAI,MACJyR,IAAI,MACJiK,KAAK,SAKX,kBAACzgB,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,aACTxV,UAAU,sBADhB,QAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAU,2BACVN,GAAG,aACHmF,YAAY,UACZ8B,IAAI,KACJyR,IAAI,KACJiK,KAAK,QAKX,kBAACzgB,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,aACTxV,UAAU,sBADhB,QAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,OACZhE,UAAU,2BACVN,GAAG,aACHmF,YAAY,UAKlB,kBAACjD,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,YACTxV,UAAU,sBADhB,eAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAU,2BACVN,GAAG,YACHmF,YAAY,WACZ8B,IAAI,KACJyR,IAAI,MACJiK,KAAK,QAMX,kBAACzgB,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,YACTxV,UAAU,sBADhB,eAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,OACZhE,UAAU,2BACVN,GAAG,YACH4iB,UAAU,SAMpB,kBAAC3gB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,cACbxV,UAAU,sBADZ,gBAOA,kBAAC2E,EAAA,EAAD,CACE3E,UAAU,2BACVN,GAAG,cACHsE,KAAK,OACLa,YAAY,uBAKlB,kBAACjD,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,eACbxV,UAAU,sBADZ,UAOA,kBAAC2E,EAAA,EAAD,CACE3E,UAAU,2BACVN,GAAG,eACHmF,YAAY,oBACZb,KAAK,WAKX,kBAACpC,EAAA,EAAD,CAAK0T,GAAG,KACR,kBAACR,GAAA,EAAD,KACM,2BAAOU,QAAQ,cACbxV,UAAU,sBADZ,SAOA,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,OACZa,YAAY,mBACZ7E,UAAU,2BACVN,GAAG,mBAQb,kBAACiC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KAEA,kBAACF,GAAA,EAAD,CAAQ2M,OAAK,EAAC/hB,UAAU,iBAAiB2K,MAAM,SAAS3G,KAAK,SACzDqR,KAAK,KAAK7T,QAAUlB,KAAKygB,WAC3B,0BAAM/gB,UAAU,mBAEd,uBAAGA,UAAU,mBAEf,0BAAMA,UAAU,mBAAhB,mBAKV,kBAAC4B,EAAA,EAAD,CAAK0T,GAAG,KAEA,kBAACF,GAAA,EAAD,CAAQ2M,OAAK,EAAC/hB,UAAU,iBAAiB2K,MAAM,UAAU3G,KAAK,SAC1DqR,KAAK,KAAK7T,QAAUlB,KAAKkjB,eAC3B,0BAAMxjB,UAAU,mBAEd,uBAAGA,UAAU,iBAEf,0BAAMA,UAAU,mBAAhB,mBAaxB,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,QACb,yBAAKA,UAAU,OACb,kBAAC+T,EAAA,EAAD,CAAM/T,UAAU,qBACd,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,2BACpB,wBAAIA,UAAU,mBAAd,gCAEF,kBAACmU,EAAA,EAAD,CACEnU,UAAU,4CACVyP,YAAU,GAEV,2BAAOzP,UAAU,cACf,4BACE,wBAAIyT,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WACA,wBAAIzT,UAAU,cAAcyT,MAAM,OAAlC,cACA,wBAAIzT,UAAU,aAAayT,MAAM,OAAjC,gBAGJ,+BACCnT,KAAKsjB,uBAOd,kBAAC,GAAD,CAAkBpN,YAAY,QACAC,UAAWnW,KAAK+B,MAAM6gB,SACtBvM,kBAAkB,QAClBD,SAAS,2CACTnS,OAAQjE,KAAK+B,MAAM4gB,WACnB5M,eAAe,aACfD,WAAY9V,KAAK8iB,uBAU1CZ,UCh3BA,MAAMqB,WAAyBhkB,YAC1CsC,YAAY5B,GACR6B,MAAM7B,GADQ,KAuBlB2V,YAAc,KACV5V,KAAKkC,SAAS,CACZ2T,YAAa7V,KAAK+B,MAAM8T,aAG1B7V,KAAKC,MAAM6V,WAAW9V,KAAKC,MAAM8V,iBA5BnB,KA+BlBmB,YAAezM,IACX8B,QAAQC,IAAI,2BAA2B/B,GACrCzK,KAAKkC,SAAS,CACZiV,WAAY1M,KAlCF,KA2ClBsM,gBAAmBvI,IAEfjC,QAAQC,IAAI,SAAUgC,GACtB,IAAIwI,EAAQxI,EAAM/M,OAAOrC,GAAG0K,UAAU,IAClC/D,EAAIsI,OAAOG,EAAM/M,OAAOgJ,OACxB1E,EAAI,GACJ/F,KAAKkC,SAAU,CAAE,CAAC8U,GAAQjR,KAjDhB,KAqDlBqR,YAAc,KAEVpX,KAAKkC,SAAS,CACV2T,YAAa7V,KAAK+B,MAAM8T,aAM5B,IAAIwB,EAAWrX,KAAKC,MAAMqX,IAAIkM,SAC1BC,EAAiBzjB,KAAKC,MAAMqX,IAAIoM,aAAe1jB,KAAKC,MAAMqX,IAAIkM,SAClExjB,KAAKC,MAAMqX,IAAIoM,aAAerV,OAAOmJ,SAASC,eAAe,8BAA8BhN,OAC3FzK,KAAKC,MAAMqX,IAAIkM,SAAenV,OAAOmJ,SAASC,eAAe,0BAA0BhN,OAEvFzK,KAAKC,MAAMqX,IAAIpJ,MAAelO,KAAK+B,MAAMoV,WACzC5K,QAAQC,IAAI,8CAA+CxM,KAAKC,MAAMqX,KAEtEtX,KAAKC,MAAMyX,SAAS1X,KAAKC,MAAMqX,IAAID,EAAUoM,IApE7CzjB,KAAK+B,MAAQ,CACT8T,WAAY5V,EAAMgE,OAClBkT,WAAalX,EAAMqX,IAAIpJ,MACvBwV,aAAczjB,EAAMqX,IAAIoM,aACxBF,SAAWvjB,EAAMqX,IAAIkM,UAO7B3U,qBAEKtC,QAAQC,IAAI,0CAEZD,QAAQC,IAAI,YAAaxM,KAAKC,MAAMgE,OAAOjE,KAAKC,MAAMqX,KAsF3D9X,SAGI,OAEI,kBAACgX,GAAA,EAAD,CACI9W,UAAU,wBACTuE,OAAQjE,KAAK+B,MAAM8T,YAGpB,yBAAKnW,UAAU,gBACX,wBAAIA,UAAU,cAAcN,GAAG,uBAC9BY,KAAKC,MAAM0X,OAEZ,4BACArT,aAAW,QACX5E,UAAU,QACVkX,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAEpB,0BAAMiB,eAAa,GAAnB,UAKJ,yBAAKnX,UAAU,cAEf,kBAACyE,EAAA,EAAD,KAGI,kBAACqQ,GAAA,EAAD,CAAWoD,KAAG,GAEV,kBAACtW,EAAA,EAAD,CAAKuW,GAAG,KACJ,2BAAO3C,QAAQ,6BACXxV,UAAU,qBACVmY,GAAG,KAFP,8BAMA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,SACJhE,UAAU,2BACVN,GAAG,6BACHmF,YAAavE,KAAKC,MAAMqX,IAAIoM,aAC5Brd,IAAI,IAEJiO,SAAUtU,KAAK+W,gBACftM,MAAOzK,KAAK+B,MAAM2hB,gBAG7B,kBAACpiB,EAAA,EAAD,CAAK0T,GAAG,KACL,2BAAOE,QAAQ,yBACXxV,UAAU,qBACVmY,GAAG,KAFP,QAQA,kBAACxT,EAAA,EAAD,CAAOX,KAAK,SACJhE,UAAU,2BACVN,GAAG,yBACHiH,IAAK,IACL9B,YAAavE,KAAKC,MAAMqX,IAAIkM,SAE5BlP,SAAUtU,KAAK+W,gBACftM,MAAOzK,KAAK+B,MAAMyhB,aAO9B,kBAAChP,GAAA,EAAD,CAAWoD,KAAG,EAAClY,UAAU,6BACzB,kBAAC4B,EAAA,EAAD,CAAKuW,GAAG,MACR,2BAAO3C,QAAQ,sBACXxV,UAAU,qBACVmY,GAAG,KAFP,SAOI,kBAAC,GAAD,CACIzY,GAAG,sBACHM,UAAU,2BACV6E,YAAevE,KAAKC,MAAMqX,IAAIpJ,MAE9BzD,MAAOzK,KAAK+B,MAAMoV,WAClB7C,SAAUtU,KAAKkX,gBAI3B,kBAAC1C,GAAA,EAAD,CAAWoD,KAAG,GACV,kBAACtW,EAAA,EAAD,CAAK5B,UAAU,aACX,kBAACoV,GAAA,EAAD,CAAQpV,UAAU,UACV2K,MAAM,SACNuM,eAAa,QACblT,KAAK,SACLxC,QAAS,IAAMlB,KAAK4V,eAJ5B,cASJ,kBAACtU,EAAA,EAAD,CAAK5B,UAAW,aAAamY,GAAG,KAE5B,kBAAC/C,GAAA,EAAD,CAAQzK,MAAM,UACN3G,KAAK,SACLxC,QAAU,IAAMlB,KAAKoX,eAF7B,yCCzMb,MAAMuM,WAAsBpkB,YACvCsC,YAAY5B,GACR6B,MAAM7B,GADQ,KAclB+X,eAAkBxJ,IAEdjC,QAAQC,IAAI,kCAAmCgC,EAAME,cAAcC,aAEnE3O,KAAKC,MAAMgY,WAAW,CAAC/K,MAAOsB,EAAME,cAAcC,eAlBpC,KAqBlBuJ,eAAkB1J,IAEdjC,QAAQC,IAAI,kCAAmCgC,EAAME,cAAcC,aAEnE3O,KAAKC,MAAMgY,WAAW,CAAC/J,MAAOM,EAAME,cAAcC,eAzBpC,KA4BlBwJ,mBAAqB,IAGVnY,KAAK+B,MAAMqW,aAAa9V,IAAK,CAACsI,EAAKvD,KACpC,IAAIkM,EACHhH,QAAQC,IAAInF,EAAMuD,EAAK5K,KAAKC,MAAM0M,QAClC,IAAI0L,EAAQ,WAAWhR,EACnBiR,EAAW,YAAYjR,EAC3B,OAAQuD,GACN,IAAK,QAMF,OAJI2I,EADAvT,KAAKC,MAAM0M,OAAOO,MACL,2BAEA,gBAET,wBAAIiG,MAAM,MAAM3Q,IAAK6V,GAASzN,EAE5B,kBAACvK,EAAA,EAAD,CAAsByT,UAAU,SAC9B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UAAW6T,EAAYnU,GAAIkZ,KAEhC,kBAAC1X,EAAA,EAAD,CAAclB,UAAU,uBACpBM,KAAKyR,2BACLzR,KAAKC,MAAM0M,OAAOO,OAChB,kBAACrM,EAAA,EAAD,CAAcG,SAAO,IAEvBhB,KAAKC,MAAM0M,OAAOO,OAChB,kBAACrM,EAAA,EAAD,CAAc2B,IAAI,eAAetB,QAASlB,KAAKgY,gBAC7C,0DAMvB,IAAK,QAMF,OAJEzE,EADEvT,KAAKC,MAAM0M,OAAOuB,MACP,2BAEA,gBAEP,wBAAIiF,MAAM,MAAM3Q,IAAK6V,GAASzN,EAC5B,kBAACvK,EAAA,EAAD,CAAsByT,UAAU,SAC9B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UAAW6T,EAAYnU,GAAIkZ,KAEhC,kBAAC1X,EAAA,EAAD,CAAclB,UAAU,uBACpBM,KAAKuY,2BACLvY,KAAKC,MAAM0M,OAAOuB,OAChB,kBAACrN,EAAA,EAAD,CAAcG,SAAO,IAEvBhB,KAAKC,MAAM0M,OAAOuB,OAEhB,kBAACrN,EAAA,EAAD,CAAc2B,IAAI,qBAAqBtB,QAASlB,KAAKkY,gBACjD,0DAMzB,QACA,OAAQ,wBAAI/E,MAAM,MAAM3Q,IAAK6V,GAASzN,MAtF/C5K,KAAK+B,MAAQ,CACTqW,aAAenY,EAAMmY,cAK7B7B,oBACIhK,QAAQC,IAAI,+BACZD,QAAQC,IAAI,mBAAoBxM,KAAKC,MAAMuY,oBAuF/C/G,2BACI,OAAOzR,KAAKC,MAAMwY,mBAAmBnW,IAAIoP,GAGnC,kBAAC7Q,EAAA,EAAD,CAAc2B,IAAKkP,EAASxQ,QAASlB,KAAKgY,gBAC5B,8BAAOtG,KAM/B6G,2BACE,OAAOvY,KAAKC,MAAMyY,mBAAmBpW,IAAIoP,GAGnC,kBAAC7Q,EAAA,EAAD,CAAc2B,IAAKkP,EAASxQ,QAASlB,KAAKkY,gBAC5B,8BAAOxG,KAQ7BiH,aAEI,OAAO3Y,KAAKC,MAAM4K,KAAKvI,IAAI,CAACsI,EAAMvD,KAC9B,IAAIuR,EAAW,IAAIvD,GAAKzK,GAEpBgZ,EAAchZ,EAHsB,MAKhC0H,EAAwH1H,EAAxH0H,IAAapF,GAA2GtC,EAApH0K,SAAoH1K,EAA3GsC,OAAMkG,EAAqGxI,EAArGwI,MAAMpB,EAA+FpH,EAA/FoH,MAAMC,EAAyFrH,EAAzFqH,KAAKC,EAAoFtH,EAApFsH,KAAKC,EAA+EvH,EAA/EuH,WAAWC,EAAoExH,EAApEwH,WAAWM,EAAyD9H,EAAzD8H,YAAYC,EAA6C/H,EAA7C+H,OAAOC,EAAsChI,EAAtCgI,MAAM1E,EAAgCtD,EAAhCsD,MAAMsV,EAA0B5Y,EAA1B4Y,SAASE,EAAiB9Y,EAAjB8Y,aACzG5K,EAAUxG,EACVP,EAAOlI,OAAOmI,GAAOpI,OAAO,OAAOA,OAAOC,OAAOoI,IACtCrI,OAAO,OAAOA,OAAOsI,GACjBtI,OAAO,OAAOA,OAAOuI,GACrBvI,OAAO,OAAOA,OAAOwI,GAEpCC,EAAY,UAAUzI,OAAO0I,EAAIC,YACjCC,EAAQ,IAAI5I,OAAO0I,EAAIC,YACvBE,EAAY,UAAU7I,OAAO8I,GAAa9I,OAC5B,mBAAmBA,OAAO+I,GAAQ/I,OAClC,oBAAeA,OAAOgJ,KAEtBrG,QAAQC,IAAI,aAAaiG,GAE7C,MAAMsG,EAAmBH,EAASpD,WAAa,eACvBtH,EAAQ,eACRwV,EAAa,2BACbF,EAAU,yCAE5BxK,EAAiB9L,EAAMtD,OAAO,KAAKA,OAAOwJ,GAAOxJ,OAAO,OAAOA,OAAOmI,GAS5E,OACA,wBAAIvP,IAAKgQ,GACP,wBAAIW,MAAM,OACR,kBAAC3S,EAAA,EAAD,CAAOd,UAAU,sBACf,uBACEA,UAAU,6BACVuB,KAAK,SACLC,QAASnC,GAAKA,EAAEoC,kBAEZ,yBACFV,IAAI,MACJC,IAAKC,EAAQ,OAGjB,kBAACH,EAAA,EAAD,KACE,0BAAMd,UAAU,gBACbwN,MAKT,4BACE,0BAAMxN,UAAU,gBACb0T,IAGL,4BACI,uBAAG1T,UAhCM,8BA+Bb,IACgCqS,GAEhC,4BACE,0BAAMrS,UAAU,gBACbwO,IAGL,4BACE,0BAAMxO,UAAU,gBACb8jB,IAGL,4BACE,0BAAM9jB,UAAU,gBACbgkB,IAGL,wBAAIhkB,UAAU,cACd,8BACE,uBAAGA,UArDQ,+BAqDaN,GAAIiT,IAC1B,kBAACgB,EAAA,EAAD,CACEC,MAAO,EACP7R,OAAQ4Q,GAEPI,IAGP,kBAACpS,EAAA,EAAD,CAAsByT,UAAU,QAC5B,kBAACvT,EAAA,EAAD,CAAgBb,UAAU,OAAOY,KAAG,GAClC,uBAAGZ,UA9DQ,8BAgEb,kBAACkB,EAAA,EAAD,CAAclB,UAAU,uBACtB,kBAACmB,EAAA,EAAD,CAAcnB,UAAU,aAAaoB,QAAM,EAACC,IAAI,OAC9C,wBAAIrB,UAAU,qBAAqBsZ,IAErC,kBAACnY,EAAA,EAAD,CAAcG,SAAO,IAErB,kBAACH,EAAA,EAAD,CAAcK,QAAS,IAAMlB,KAAKC,MAAM6V,WAAW,sBACjD,uBAAGpW,UAAU,gBACb,4CACA,kBAAC,GAAD,CACEiY,MAAOiB,EAASpD,WAChB5D,KAAMgH,EACN7C,eAAgB/V,KAAKC,MAAMgZ,mBAC3BhV,OAAQjE,KAAKC,MAAMuY,mBACnB1C,WAAY9V,KAAKC,MAAM6V,WACvB4B,SAAU1X,KAAKC,MAAMyX,SACrBJ,IAAKsM,KAOT,kBAAC/iB,EAAA,EAAD,CAAcK,QAAS,IAAMlB,KAAKC,MAAM6V,WAAW,wBACjD,uBAAGpW,UAAU,qBACb,qCACA,kBAAC,GAAD,CAAoBwW,YAAY,UACZC,UAAW4C,EACX1C,kBAAkB,yBAClBD,SAvHP,wGAwHOnS,OAAQjE,KAAKC,MAAMkZ,sBACnBpD,eAAgB/V,KAAKC,MAAMmZ,qBAC3BtD,WAAY9V,KAAKC,MAAM6V,WACvBG,YAAajW,KAAKC,MAAMgW,YACxB7W,GAAI0Z,WAa1CtZ,SACI,OACQ,kBAACiU,EAAA,EAAD,CAAM/T,UAAU,qBAGZ,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,2BACpB,wBAAIA,UAAU,mBAAmBM,KAAKC,MAAMkW,YA4B1C,kBAACtC,EAAA,EAAD,CACAnU,UAAU,4CACVyP,YAAU,GAEV,2BAAOzP,UAAU,cACb,4BACCM,KAAKmY,uBAIV,+BACKnY,KAAK2Y,iBCrRlC,MAAMU,GAAS9N,KAAO+N,aAAa,oBAM7BhO,GALU+N,GAAO5N,iBACrBC,KAAkBC,QAClB,iBAGiBL,GAAG,gBAEtB+N,GAAOE,KAAKC,oBAAoB,IAAIC,MAAuB1M,KAAK2M,IAC9DnN,QAAQC,IAAR,+CAAoDkN,EAAKta,OACxDgO,MAAMb,QAAQc,OAGjB,IAAIsM,GAAY,IAAIC,KAAKC,aAAa,QAAS,CAC3CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAK3B,MAAM6J,WAAavkB,IAAMC,UACvBsC,YAAY5B,GACV6B,MAAM7B,GADW,KA4GnB6jB,eAAkBC,IACd,OAAQA,GACN,IAAK,QAAS,OAAO,EACrB,IAAK,QAAS,OAAO,EACrB,IAAK,QAAS,OAAO,EACrB,IAAK,OAAS,OAAO,EACrB,IAAK,OAAQ,OAAO,EACpB,IAAK,MAAO,OAAO,EACnB,IAAK,MAAO,OAAO,EACnB,IAAK,QAAS,OAAO,EACrB,IAAK,SAAU,OAAO,EACtB,IAAK,QAAS,OAAO,GACrB,QAAS,OAAO,IAxHH,KA4HnBC,uBAAyB,CAACC,EAAIC,KAC1B3X,QAAQC,IAAIgH,OAAOtU,KAAK+kB,IACxB,IAAIE,EAAc,EASlB,OARA3Q,OAAOtU,KAAK+kB,GAAK3hB,IAAK,CAACC,EAAK8E,KACxBkF,QAAQC,IAAInF,EAAM9E,GACb4hB,EAAcnkB,KAAK8jB,eAAevhB,IAC9BvC,KAAK8jB,eAAevhB,GAAQvC,KAAK8jB,eAAeI,KACjDC,EAAcnkB,KAAK8jB,eAAevhB,MAIvC4hB,GAvIQ,KA4InBjK,YAAe1L,IACb,IAAIkV,EAAe1jB,KAAK+B,MAAM2hB,aAC1BU,EAAgBV,EAAelV,EAAM/M,OAAOgJ,MAC5C4P,EAAcqJ,EAAe,KAC7BpJ,EAAe8J,EAAgB,KACnC5M,SAASC,eAAe,6BAA6BhN,MAAU4D,OAAOkM,MAAMF,GAAgB,GAAKV,GAAUtF,OAAOgG,GAClH7C,SAASC,eAAe,8BAA8BhN,MAAU4D,OAAOkM,MAAMD,GAAiB,GAAKX,GAAUtF,OAAOiG,GACpHta,KAAKkC,SAAS,CAACshB,SAAUhV,EAAM/M,OAAOgJ,MAAM2Z,cAAeA,KAnJ1C,KAuJnB5J,kBAAqBhM,IACjB,IAAI4V,EACAV,EAAelV,EAAM/M,OAAOgJ,MAEhCzK,KAAKkC,SAAWH,IACZqiB,EAAgBriB,EAAMqiB,cAElBA,EADiB,KAAjBV,EACgB,GAEX3hB,EAAMyhB,SAAW,EACFE,EAAe3hB,EAAMyhB,SAErB,GAKxB,IAAInJ,EAAcqJ,EAAe,KAC7BpJ,EAAe8J,EAAgB,KAMnC,OAHA5M,SAASC,eAAe,6BAA6BhN,MAAU4D,OAAOkM,MAAMF,GAAgB,GAAKV,GAAUtF,OAAOgG,GAClH7C,SAASC,eAAe,8BAA8BhN,MAAU4D,OAAOkM,MAAMD,GAAiB,GAAKX,GAAUtF,OAAOiG,GAE7G,CAAEoJ,eAAaU,oBA/KX,KAoLnBzJ,mBAAsBnM,IACpB,IAAIkV,EACAU,EAAgB5V,EAAM/M,OAAOgJ,MAEjCzK,KAAKkC,SAAUH,IACX2hB,EAAe3hB,EAAM2hB,aAEjBA,EADkB,KAAlBU,EACe,GAEXriB,EAAMyhB,SAAW,EACFY,EAAgBriB,EAAMyhB,SAExB,GAKrB,IAAInJ,EAAcV,GAAUtF,OAAOqP,EAAe,MAC9CpJ,EAAeX,GAAUtF,OAAO+P,EAAgB,MAIpD,OAFA5M,SAASC,eAAe,6BAA6BhN,MAAS4D,OAAOkM,MAAMF,GAAe,GAAKA,EAC/F7C,SAASC,eAAe,8BAA8BhN,MAAS4D,OAAOkM,MAAMD,GAAgB,GAAKA,EAC1F,CAAEoJ,eAAaU,oBA1MT,KA+MnBxJ,iBAAoBnQ,IAClB8B,QAAQC,IAAI,2BAA2B/B,GACrCzK,KAAKkC,SAAS,CACZ2Y,aAAcpQ,KAlND,KA2NnB4Z,kBAAoB,CAAC5Z,EAAM6Z,KACzB/X,QAAQC,IAAI,0BAA0B/B,EAAM6Z,GAC5CtkB,KAAKkC,SAAS,CACZqiB,cAAe9Z,EACf+Z,eAAgBF,KA/ND,KAwOnBxJ,qBAAwBC,IACpB,IAAIC,GAAW,EAEf,GAAIhb,KAAK+B,MAAMkZ,kBACb,OAAQF,GACN,IAAK,QACDC,EAAyC,KAA7Bhb,KAAK+B,MAAMmZ,cACzB,MACF,IAAK,QACDF,EAAyC,KAA7Bhb,KAAK+B,MAAMoZ,cACzB,MACF,IAAK,QACDH,EAAyC,KAA7Bhb,KAAK+B,MAAMqZ,cACzB,MACF,IAAK,OACDJ,EAAwC,KAA5Bhb,KAAK+B,MAAMsZ,aACzB,MACF,IAAK,OACDL,EAAwC,KAA5Bhb,KAAK+B,MAAMuZ,aACzB,MACF,IAAK,MACDN,EAAuC,KAA3Bhb,KAAK+B,MAAMwZ,YACzB,MACF,IAAK,MACDP,EAAuC,KAA3Bhb,KAAK+B,MAAMyZ,YACzB,MACF,IAAK,QACDR,EAAyC,KAA7Bhb,KAAK+B,MAAM0Z,cACzB,MACF,IAAK,SACDT,EAA0C,KAA9Bhb,KAAK+B,MAAM2Z,eACzB,MACF,IAAK,QACDV,EAAyC,KAA7Bhb,KAAK+B,MAAM4Z,cACzB,MACF,IAAK,QACHX,EAAwC,KAA5Bhb,KAAK+B,MAAM2hB,cAAkD,GAA3B1jB,KAAK+B,MAAM2hB,aACzD,MACF,IAAK,OACH1I,EAAoC,KAAxBhb,KAAK+B,MAAMyhB,UAA0C,GAAvBxjB,KAAK+B,MAAMyhB,SACrD,MACF,IAAK,SACHxI,EAAyC,KAA7Bhb,KAAK+B,MAAMqiB,eAAoD,GAA5BpkB,KAAK+B,MAAMqiB,cAMhE,OAAOpJ,GAxRQ,KA2RnBY,sBAAwB,KAEpB,IAAIC,GAAa,EACbC,EAAY,GA0EhB,MAzEiC,KAA7B9b,KAAK+B,MAAMmZ,gBACXY,EAAU/R,KAAK,SACf8R,GAAa,GAGgB,KAA7B7b,KAAK+B,MAAMoZ,gBACXW,EAAU/R,KAAK,SACf8R,GAAa,GAEgB,KAA7B7b,KAAK+B,MAAMqZ,gBACXU,EAAU/R,KAAK,SACf8R,GAAa,GAEe,KAA5B7b,KAAK+B,MAAMsZ,eACXS,EAAU/R,KAAK,QACf8R,GAAa,GAEe,KAA5B7b,KAAK+B,MAAMuZ,eACXQ,EAAU/R,KAAK,QACf8R,GAAa,GAEc,KAA3B7b,KAAK+B,MAAMwZ,cACZO,EAAU/R,KAAK,eACf8R,GAAa,GAEe,KAA3B7b,KAAK+B,MAAMyZ,cACXM,EAAU/R,KAAK,oBACf8R,GAAa,GAEgB,KAA7B7b,KAAK+B,MAAM0Z,gBACXK,EAAU/R,KAAK,SACf8R,GAAa,GAEiB,KAA9B7b,KAAK+B,MAAM2Z,iBACXI,EAAU/R,KAAK,UACf8R,GAAa,GAEgB,KAA7B7b,KAAK+B,MAAM4Z,gBACXG,EAAU/R,KAAK,cACf8R,GAAa,GAOe,KAA5B7b,KAAK+B,MAAM2hB,cAAmD,GAA3B1jB,KAAK+B,MAAM2hB,eAC9C5H,EAAU/R,KAAK,iBACf8R,GAAa,GAEW,KAAxB7b,KAAK+B,MAAMyhB,UAA0C,GAAvBxjB,KAAK+B,MAAMyhB,WACzC1H,EAAU/R,KAAK,QACf8R,GAAa,GAEgB,KAA7B7b,KAAK+B,MAAMqiB,eAAoD,GAA5BpkB,KAAK+B,MAAMqiB,gBAC9CtI,EAAU/R,KAAK,kBACf8R,GAAa,GAIjB7b,KAAKkC,SAAS,CAAC+Y,mBAAoB,EAAKc,YAAaD,IAa9CD,GAxWQ,KA2WnB4I,aAAe,KAEX,GAAKzkB,KAAK4b,wBAA0B,CAChC,IAYIK,EAZAC,EAASlc,KAAK+B,MAAMmZ,cACpBiB,EAASnc,KAAK+B,MAAMoZ,cACpBiB,EAAS/N,OAAOrO,KAAK+B,MAAMqZ,eAC3BiB,EAAQhO,OAAOrO,KAAK+B,MAAMsZ,cAC1BiB,EAAQtc,KAAK+B,MAAMuZ,aACnBiB,EAAclO,OAAOrO,KAAK+B,MAAMwZ,aAChCiB,EAAcxc,KAAK+B,MAAMyZ,YACzBiB,EAAezc,KAAK+B,MAAM0Z,cAC1BiB,EAAU1c,KAAK+B,MAAM2Z,eACrBiB,EAAS3c,KAAK+B,MAAM4Z,cACpB+I,EAAgBrW,OAAOrO,KAAK+B,MAAM2hB,cAClCiB,EAAYtW,OAAOrO,KAAK+B,MAAMyhB,UAElC,GAAgC,KAA5BxjB,KAAK+B,MAAM8Y,aAAqB,CAChC,IAAIgC,EAAQ,IAAIzT,KAIhB6S,EAHSpS,OAAOgT,EAAMC,WAAWC,SAAS,EAAG,KAG/B,IAFLlT,OAAOgT,EAAMvT,WAAa,GAAGyT,SAAS,EAAG,KAEzB,IADdF,EAAMrT,cAEjB4T,MAAM,QAAQnB,QAEdA,EAASjc,KAAK+B,MAAM8Y,aAExBvP,GAAGsB,WAAW,sBACXoQ,UAAU,CACT1H,SAAU+D,GAAOE,KAAKG,KAAKta,GAC3B8N,MAAOgP,EACP9I,MAAO+I,EACPnK,MAAOoK,EACPnK,KAAMoK,EACNnK,KAAMoK,EACNnK,WAAYoK,EACZnK,WAAYoK,EACZ9J,YAAa+J,EACb9J,OAAQ+J,EACR9J,MAAO+J,EACPzO,MAAQ+N,EACRuH,SAAWmB,EACXjB,aAAegB,IAEhB3X,KAAKkQ,IACF1Q,QAAQC,IAAI,uBAAuByQ,EAAaC,YAChDld,KAAKkC,SAAS,CAAC+Y,mBAAmB,IAClCjb,KAAK4kB,qBAAqB5kB,KAAK+B,MAAMqK,iBACxCgB,MAIGgQ,MAAM7Q,QAAQc,QAKlB,IAAIwX,EAAgB,CAChB,SAAaxL,GAAOE,KAAKG,KAAKta,GAC9B,MAAU8c,EACV,MAAUC,EACV,MAAUC,EACV,KAAUC,EACV,KAAUC,EACV,WAAeC,EACf,WAAeC,EACf,YAAeC,EACf,OAAUC,EACV,MAAUC,GAEd3c,KAAK8kB,wBAAwBD,EAAcH,EAAcC,QAK7DvH,MAAM,gLArbO,KA4cnB0H,wBAA0B,CAAClT,EAAK2L,EAAMC,KAClClS,GAAGsB,WAAW,mBAAmBC,KAAK+E,GAAM9E,UAAUC,KAAKC,IACvD,GAAIA,EAAU9B,OAAS,EAAE,CACrBqB,QAAQC,IAAI,oBAAoBQ,GAChC,IAAIyQ,EAAezQ,EAAU,GACzB+X,GAAkBtH,EAAa5K,WAAa4K,EAAa+F,SAAajG,EAAQC,IAAWC,EAAa+F,SAAWhG,GACrHC,EAAa5K,WAAakS,EAC1BtH,EAAa+F,SAAW/F,EAAa+F,SAAWhG,EAChDC,EAAa3L,SAAW2L,EAAa3L,SAAW0L,EAEhDlS,GAAGsB,WAAW,mBACb+Q,kBAAkB/L,EAAK6L,GAAc1Q,KAAK6Q,IACzCrR,QAAQC,IAAI,qBAAsBoR,GAClCR,MAAM,4BACLhQ,MAAMb,QAAQc,YAGjBd,QAAQC,IAAI,2BAEZoF,EAAK4R,SAAWhG,EAChB5L,EAAKiB,WAAa0K,EAClB3L,EAAKzD,UAAY,EACjByD,EAAKoB,SAAW,EAChBpB,EAAKE,SAAW0L,EAEhBlS,GAAGsB,WAAW,mBACboQ,UAAUpL,GACV7E,KAAKkQ,IACF1Q,QAAQC,IAAI,uBAAuByQ,EAAaC,cAGnD9P,MACDb,QAAQc,SAIfD,MACCb,QAAQc,QAjfK,KA8fnB2X,aAAe,CAAClH,EAAUzG,EAASoM,KAC/BnY,GAAGsB,WAAW,sBACb+Q,kBAAkB,CAAErL,IAAKwL,EAAUxL,KAAMwL,GAAW/Q,KAAKgR,IACxDxR,QAAQC,IAAI,2CAA4CuR,GACxD,IAAIC,EAAsB,CACxB,MAAUD,EAAU7Q,MACpB,MAAU6Q,EAAU3K,MACpB,MAAU2K,EAAU/L,MACpB,KAAU+L,EAAU9L,KACpB,KAAU8L,EAAU7L,KACpB,WAAe6L,EAAU5L,WACzB,WAAe4L,EAAU3L,WACzB,YAAe2L,EAAUrL,YACzB,OAAUqL,EAAUpL,OACpB,MAAUoL,EAAUnL,OAGtBtH,GAAGsB,WAAW,mBAAmBqR,QAAQD,GAAqBjR,KAAM6Q,IAClErR,QAAQC,IAAI,+CAA+CoR,GAEtDA,EAAU4F,SAAWnM,EAAWyG,EAAU0F,WAAc,EACzD5F,EAAU/K,YAAe+K,EAAU/K,WAAa+K,EAAU4F,SAAYC,EAAkB3F,EAAU4F,aAAe5F,EAAU0F,WAAe5F,EAAU4F,SAAWnM,EAAWyG,EAAU0F,UAEpL5F,EAAU/K,WAAa,EAG3B+K,EAAU4F,SAAW5F,EAAU4F,SAAWnM,EAAWyG,EAAU0F,SAC/D5F,EAAU9L,SAAW8L,EAAU9L,SAAWuF,EAAWyG,EAAU0F,SAE/DlY,GAAGsB,WAAW,mBACb+Q,kBAAkBK,EAAoBJ,GAAW7Q,KAAKmR,IAErD3R,QAAQC,IAAI,0CAA2C0R,GACvDd,MAAM,kDACLhQ,MAAMb,QAAQc,SAGjBD,MAAMb,QAAQc,OAChBrN,KAAKkC,SAAS,CAAC+iB,mBAAmB,IAElCjlB,KAAK4kB,qBAAqB5kB,KAAK+B,MAAMqK,iBACpCgB,MAAMb,QAAQc,QAviBF,KA4iBnB6X,eAAkB9lB,IAIdmN,QAAQC,IAAI,gBAAgBpN,EAAGmT,WAAW,mCAI1CjH,GAAGsB,WAAW,sBACXyR,iBACC,CAAC/L,IAAMlT,IAEV2N,KAAK6Q,IACJrR,QAAQC,IAAI,qBAAsBoR,GAClC,IAAII,EAAsB,CACxB,MAAUJ,EAAU1Q,MACpB,MAAU0Q,EAAUxK,MACpB,MAAUwK,EAAU5L,MACpB,KAAU4L,EAAU3L,KACpB,KAAU2L,EAAU1L,KACpB,WAAe0L,EAAUzL,WACzB,WAAeyL,EAAUxL,WACzB,YAAewL,EAAUlL,YACzB,OAAUkL,EAAUjL,OACpB,MAAUiL,EAAUhL,OAElBuS,EAAsBvH,EAAU8F,aAChC0B,EAAuBxH,EAAU4F,SAErClY,GAAGsB,WAAW,mBAAmBqR,QAAQD,GAAqBjR,KAAM6Q,IAClErR,QAAQC,IAAI,+CAA+CoR,GAIrDA,EAAU4F,SAAW4B,IAA2B,EAClDxH,EAAU/K,YAAe+K,EAAU/K,WAAa+K,EAAU4F,SAAa2B,EAAsBC,IAA2BxH,EAAU4F,SAAW4B,GAE7IxH,EAAU/K,WAAa,EAG3B+K,EAAU4F,SAAW5F,EAAU4F,SAAW4B,EAC1CxH,EAAU9L,SAAW8L,EAAU9L,SAAWsT,EAE1C9Z,GAAGsB,WAAW,mBACb+Q,kBAAkBK,EAAoBJ,GAAW7Q,KAAKmR,IACrD3R,QAAQC,IAAI,4CAA6C0R,GACzDd,MAAM,oDACLhQ,MAAMb,QAAQc,SAGjBD,MAAMb,QAAQc,OAEhBrN,KAAKkC,SAAS,CAACmjB,qBAAqB,IAEpCrlB,KAAK4kB,qBAAqB5kB,KAAK+B,MAAMqK,iBACpCgB,MAAMb,QAAQc,QAnmBF,KAumBnBuX,qBAAwBjY,IACpBrB,GAAGsB,WAAW,sBAAsBC,KAAKF,GAAQG,UAAUC,KAAK0R,IAC9DlS,QAAQC,IAAI,aAAaiS,GAIzBze,KAAKkC,SAAU,CAACojB,UAAY7G,MAE7BrR,MAAMb,QAAQc,OAGfd,QAAQC,IAAI,iBAAiBxM,KAAK+B,MAAMujB,WAExCha,GAAGsB,WAAW,sBAAsBC,OAAOC,UAAUC,KAAKC,IAExDT,QAAQC,IAAI,mBAAmBQ,GAG/B,IAAIwE,EAA4B,IAAI,IAAIvE,IAAID,EAAU1K,IAAImI,GAASA,EAAMyC,SAASC,OAC9EyR,EAA4B,IAAI,IAAI3R,IAAID,EAAU1K,IAAImI,GAASA,EAAMyD,SAASf,OAGlFnN,KAAKkC,SAAS,CAAEiK,iBAAmBqF,EACnBqN,iBAAmBD,MAGpCxR,MAAMb,QAAQc,QAjoBA,KAsoBnByR,iBAAoBtQ,IAEhBjC,QAAQC,IAAI,oBAAsBgC,EAAM/M,OAAOgJ,MAAQ,OAAS+D,EAAM/M,OAAOrC,IAC7E,IAAI2f,EAAUlV,OAAO2E,EAAM/M,OAAOrC,IAAI0K,UAAU,GAC5CkV,EAAUxQ,EAAM/M,OAAOgJ,MAE3B8B,QAAQC,IAAI,mBACZD,QAAQC,IAAIxM,KAAK+B,MAAMod,cAkBvBnf,KAAKkC,SAAUH,IACX,IAAIkd,EAAiBld,EAAMkd,eACvB/D,EAAgBnZ,EAAMmZ,cACtBC,EAAgBpZ,EAAMoZ,cACtBC,EAAgBrZ,EAAMqZ,cACtBC,EAAetZ,EAAMsZ,aACrBC,EAAevZ,EAAMuZ,aACrBC,EAAcxZ,EAAMwZ,YACpBC,EAAczZ,EAAMyZ,YACpBC,EAAgB1Z,EAAM0Z,cACtBC,EAAiB3Z,EAAM2Z,eACvBC,EAAgB5Z,EAAM4Z,cAsB1B,OAjBI5Z,EAAMkd,iBACNA,GAAiB,EACjB/D,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB,GAChBC,EAAe,GACfC,EAAe,GACfC,EAAc,GACdC,EAAc,GACdC,EAAgB,GAChBC,EAAiB,GACjBC,EAAgB,IAMZoD,GACN,IAAK,QACD7D,EAAgB8D,EAClB,MACF,IAAK,QACD7D,EAAgB6D,EAClB,MACF,IAAK,QACD5D,EAAgB4D,EAClB,MACF,IAAK,OACD3D,EAAe2D,EACjB,MACF,IAAK,OACD1D,EAAe0D,EACjB,MACF,IAAK,MACDzD,EAAcyD,EAChB,MACF,IAAK,MACDxD,EAAcwD,EAChB,MACF,IAAK,QACDvD,EAAgBuD,EAClB,MACF,IAAK,SACDtD,EAAiBsD,EACnB,MACF,IAAK,QACDrD,EAAgBqD,EAMtB,MAAO,CAAC9D,gBAAcC,gBAAcC,gBAAcC,eAAaC,eAAaC,cAClEC,cAAYC,gBAAcC,iBAAeC,gBAAcsD,oBAKrE,IAAIC,EAAqBlf,KAAK+B,MAAMod,aAEpC5S,QAAQC,IAAI,+BAAgC0S,GAGtCF,EAAQpQ,SAAS,mBACZsQ,EAAmBH,GAItBG,EAAmBH,GADJ,UAAZA,GAAmC,SAAZA,GAAkC,QAAZA,EAClB1Q,OAAO2Q,GAEPA,EAMtCzS,QAAQC,IAAI,sDAAuD0S,GAEnE5T,GAAGsB,WAAW,uBAAuBC,KAAKqS,GAAoBpS,UAAUC,KAAKC,IAI3E,GAHAT,QAAQC,IAAI,cAAcQ,GAGN,GAFFA,EAAU9B,OAEL,CACrB,IAAI0G,EAAO5E,EAAU,GAEnBT,QAAQC,IAAI,qCAAqCoF,EAAKwB,MAAMxB,EAAKI,MAAMJ,EAAKK,KAAKL,EAAKM,MAEtFlS,KAAKkC,SAEH,CAEUid,aAAe,GACfF,gBAAiB,EACjB/D,cAAgBtJ,EAAK1E,MACrBiO,cAAgBvJ,EAAKwB,MACrBgI,cAAgBxJ,EAAKI,MACrBqJ,aAAezJ,EAAKK,KACpBqJ,aAAe1J,EAAKM,KACpBqJ,YAAc3J,EAAKO,WACnBqJ,YAAc5J,EAAKQ,WACnBqJ,cAAgB7J,EAAKc,YACrBgJ,eAAiB9J,EAAKe,OACtBgJ,cAAgB/J,EAAKgB,QAkBrC,IAAI0M,EAAoB,IAAI,IAAIrS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyC,SAASC,OACvEoS,EAAoB,IAAI,IAAItS,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2I,SAASjG,OACvEqS,EAAoB,IAAI,IAAIvS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMuH,SAAS7E,OACvEsS,EAAmB,IAAI,IAAIxS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMwH,QAAQ9E,OACrEuS,EAAmB,IAAI,IAAIzS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyH,QAAQ/E,OACrEwS,EAAkB,IAAI,IAAI1S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM0H,cAAchF,OAC1EyS,EAAkB,IAAI,IAAI3S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2H,cAAcjF,OAC1E0S,EAAoB,IAAI,IAAI5S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMiI,eAAevF,OAC7E2S,EAAqB,IAAI,IAAI7S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMkI,UAAUxF,OACzE4S,EAAoB,IAAI,IAAI9S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMmI,SAASzF,cAMpE+R,EAAkB,WAClBA,EAAkB,SAEzBlf,KAAKkC,SAAWH,IACZ,IAAIie,EAAgBje,EAAMie,cACtBC,EAAoBle,EAAMke,kBAC1BC,EAAqBne,EAAMme,mBAC3BC,EAAoBpe,EAAMoe,kBAC1BC,EAAoBre,EAAMqe,kBAC1BC,EAAwBte,EAAMse,sBAC9BC,EAAwBve,EAAMue,sBAC9BC,EAAqBxe,EAAMwe,mBAC3BC,EAAsBze,EAAMye,oBAC5B/N,EAAW1Q,EAAM0Q,UA+CrB,OA5CAuN,EAAgBV,EAChBW,EAAoBV,EACpBW,EAAqBV,EACrBW,EAAoBV,EACpBW,EAAoBV,EACpBW,EAAwBV,EACxBW,EAAwBV,EACxBW,EAAqBV,EACrBW,EAAsBV,EACtBrN,EAAYsN,EAmCL,CAAEC,gBAAcC,oBAAkBC,qBAAmBC,oBAClDC,oBAAkBC,wBAAsBC,wBAAsBC,qBAC5DC,sBAAoB/N,iBAKrCrF,MAAMb,QAAQc,QAz3BA,KA+3BnBkY,cAAiB/W,IACb,IAAI2N,EAAU3N,EAAM/M,OAAOgJ,MACvByU,EAAqB,CACvBhS,MAAQlN,KAAK+B,MAAMod,aAAajS,MAChCkG,MAAQ+I,GAEV7Q,GAAGsB,WAAW,uBAAuBC,KAAKqS,GAAoBpS,UAAUC,KAAKC,IAE3E,IAAIwY,EAAe,IAAI,IAAIvY,IAAID,EAAU1K,IAAKmI,GAASA,EAAMuH,SAC7DzF,QAAQC,IAAI,wCAAyCgZ,GAEjDA,EAAata,OAAS,GACtBsa,EAAa3E,QAAQ,kBAEzB7gB,KAAKkC,SAAU,CAACge,mBAAqBsF,EACrBrG,aAAa,CAAEjS,MAAOlN,KAAK+B,MAAMod,aAAajS,MAAQkG,MAAQ+I,OAE/E/O,MAAMb,QAAQc,QAh5BA,KAy5BnBoT,UAAY,KACVjJ,SAASC,eAAe,6BAA6BhN,MAAQ,GAC7D+M,SAASC,eAAe,8BAA8BhN,MAAQ,GAC9Da,GAAGsB,WAAW,uBAAuBC,OAAOC,UAAUC,KAAKC,IACvD,IAAIsS,EAAoB,IAAI,IAAIrS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyC,SAC9DqS,EAAoB,IAAI,IAAItS,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2I,SAC9DoM,EAAoB,IAAI,IAAIvS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMuH,SAC9DyN,EAAmB,IAAI,IAAIxS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMwH,QAC7DyN,EAAmB,IAAI,IAAIzS,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyH,QAC7DyN,EAAkB,IAAI,IAAI1S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM0H,cAC5DyN,EAAkB,IAAI,IAAI3S,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2H,cAC5DyN,EAAoB,IAAI,IAAI5S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMiI,eAC9DoN,EAAqB,IAAI,IAAI7S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMkI,UAC/DoN,EAAoB,IAAI,IAAI9S,IAAID,EAAU1K,IAAKmI,GAASA,EAAMmI,SAElE5S,KAAKkC,SAAU,CACb8d,cAAgBV,EAChBW,kBAAoBV,EACpBW,mBAAqBV,EACrBW,kBAAoBV,EACpBW,kBAAoBV,EACpBW,sBAAwBV,EACxBW,sBAAwBV,EACxBW,mBAAqBV,EACrBW,oBAAsBV,EACtBrN,UAAYsN,EACZZ,aAAe,GACfF,gBAAiB,EAEhB/D,cAAgB,GAChBC,cAAgB,GAChBC,cAAgB,GAChBC,aAAe,GACfC,aAAe,GACfC,YAAc,GACdC,YAAc,GACdC,cAAgB,GAChBC,eAAiB,GACjBC,cAAgB,GAChBd,aAAe,GACf6I,aAAe,GACfF,SAAW,GACXY,cAAe,GACfrI,YAAc,GACdd,mBAAoB,OAr8BV,KA08BnByF,eAAkB1J,IAGhB,IAAI2J,EACAC,EAEJ,OALArU,QAAQC,IAAI,2BAA2BwK,GAK/BA,GACN,IAAK,QACD2J,EAAW3gB,KAAK+B,MAAMie,cACtBY,EAAgB,0BAElB,MACF,IAAK,QACDrU,QAAQC,IAAI,UAAWxM,KAAK+B,MAAMke,mBAClCU,EAAW3gB,KAAK+B,MAAMke,kBACtBW,EAAgB,yBAClB,MACF,IAAK,QACDrU,QAAQC,IAAI,UAAWxM,KAAK+B,MAAMme,oBAClCS,EAAW3gB,KAAK+B,MAAMme,mBACtBU,EAAgB,iBAClB,MACF,IAAK,OACDrU,QAAQC,IAAI,SAAUxM,KAAK+B,MAAMoe,mBACjCQ,EAAW3gB,KAAK+B,MAAMoe,kBACtBS,EAAgB,gBAClB,MACF,IAAK,OACDrU,QAAQC,IAAI,SAASxM,KAAK+B,MAAMqe,mBAChCO,EAAW3gB,KAAK+B,MAAMqe,kBACtBQ,EAAgB,iBAClB,MACF,IAAK,MACDrU,QAAQC,IAAI,OACZmU,EAAW3gB,KAAK+B,MAAMse,sBACtBO,EAAgB,uBAClB,MACF,IAAK,MACLrU,QAAQC,IAAI,QAASxM,KAAK+B,MAAMue,uBAC5BK,EAAW3gB,KAAK+B,MAAMue,sBACtBM,EAAgB,uBAClB,MACF,IAAK,QACDD,EAAW3gB,KAAK+B,MAAMwe,mBACtBK,EAAgB,iBAClB,MACF,IAAK,SACDD,EAAW3gB,KAAK+B,MAAMye,oBACtBI,EAAgB,kBAClB,MACF,IAAK,QACDD,EAAW3gB,KAAK+B,MAAM0Q,UACtBmO,EAAgB,yBActB,OATArU,QAAQC,IAAK,wCAAsCxM,KAAK+B,MAAMod,cACvC,GAAnBwB,EAASzV,SAAyD,IAA1CrB,OAAO8W,EAAS,IAAI/R,SAAS,aAErD+R,EAASE,QAAQD,GAMhB5gB,KAAK+B,MAAMod,eAAiB,SAAkB2B,GAAZH,GAA4C,GAAnBA,EAASzV,QACvEqB,QAAQC,IAAI,kBACJ,gCAASoU,KAGjBrU,QAAQC,IAAI,iBAAiBwK,GAC7BzK,QAAQC,IAAI,qCAAqCxM,KAAK+B,MAAMod,aAAanI,IACzEzK,QAAQC,IAAI,SAAUxM,KAAK+B,MAAMod,cAG1BwB,EAASre,IAAK,CAACsI,EAAKvD,IAKd,4BAAQ7E,IAAKwU,EAAMpN,OAAO,WAAWA,OAAOvC,IAAUuD,MA3hCpD,KAoiCnBgL,YAAeG,IACb/V,KAAKkC,SAAS,CACZ,CAAC6T,IAAkB/V,KAAK+B,MAAMgU,MAtiCf,KA4iCnBxH,YAAeE,IAGNA,EAAUvB,MACRuB,EAAUvB,MAAM0B,SAAS,sBACjBH,EAAUvB,aAGVuB,EAAUP,MAIlBO,EAAUP,MAAMU,SAAS,sBACnBH,EAAUP,aAEVO,EAAUvB,MAGvBlN,KAAK4kB,qBAAqBnW,GAE1BzO,KAAKkC,SAAS,CACZkK,cAAgBqC,KA/jCpBzO,KAAK+B,MAAQ,CACRod,aAAe,GACfF,gBAAiB,EACjBe,cAAgB,GAChBC,kBAAoB,GACpBC,mBAAqB,GACrBC,kBAAoB,GACpBC,kBAAoB,GACpBC,sBAAwB,GACxBC,sBAAuB,GACvBC,mBAAqB,GACrBC,oBAAsB,GACtB/N,UAAW,GACX6S,UAAY,GAEZpK,cAAgB,GAChBC,cAAgB,GAChBC,cAAgB,GAChBC,aAAe,GACfC,aAAe,GACfC,YAAc,GACdC,YAAc,GACdC,cAAgB,GAChBC,eAAiB,GACjBC,cAAgB,GAChBd,aAAe,GACf6I,aAAe,GACfF,SAAW,GACXY,cAAe,GACfrI,YAAc,GACdd,mBAAoB,EAGpBoK,qBAAsB,EACtBJ,mBAAoB,EAGpB9Y,iBAAmB,GACnB0S,iBAAmB,GACnBzS,cAAgB,IAWvByC,qBACIvD,GAAGsB,WAAW,uBAAuBC,OAAOC,UAAUC,KAAKC,IAErDT,QAAQC,IAAI,mBAAmBQ,GAG/B,IAAI+T,EAAsB,IAAI,IAAI9T,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyC,SAASC,OACzE6T,EAAsB,IAAI,IAAI/T,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2I,SAASjG,OACzE8T,EAAsB,IAAI,IAAIhU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMuH,SAAS7E,OACzE+T,EAAqB,IAAI,IAAIjU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMwH,QAAQ9E,OACvEgU,EAAqB,IAAI,IAAIlU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMyH,QAAQ/E,OACvEiU,EAAoB,IAAI,IAAInU,IAAID,EAAU1K,IAAKmI,GAASA,EAAM0H,cAAchF,OAC5EkU,EAAoB,IAAI,IAAIpU,IAAID,EAAU1K,IAAKmI,GAASA,EAAM2H,cAAcjF,OAC5EmU,EAAsB,IAAI,IAAIrU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMiI,eAAevF,OAC/EoU,EAAuB,IAAI,IAAItU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMkI,UAAUxF,OAC3EqU,EAAsB,IAAI,IAAIvU,IAAID,EAAU1K,IAAKmI,GAASA,EAAMmI,SAASzF,OAG7EnN,KAAKkC,SAAS,CAAE8d,cAAgBe,EAChBd,kBAAoBe,EACpBd,mBAAqBe,EACrBd,kBAAoBe,EACpBd,kBAAoBe,EACpBd,sBAAwBe,EACxBd,sBAAwBe,EACxBd,mBAAqBe,EACrBd,oBAAsBe,EACtB9O,UAAY+O,MAG/BpU,MAAMb,QAAQc,OAEf/B,GAAGsB,WAAW,sBAAsBC,OAAOC,UAAUC,KAAKC,IAExDT,QAAQC,IAAI,mBAAmBQ,GAG/B,IAAIwE,EAA4B,IAAI,IAAIvE,IAAID,EAAU1K,IAAImI,GAASA,EAAMyC,SAASC,OAC9EyR,EAA4B,IAAI,IAAI3R,IAAID,EAAU1K,IAAImI,GAASA,EAAMyD,SAASf,OAGlFnN,KAAKkC,SAAS,CAAEiK,iBAAmBqF,EACnBqN,iBAAmBD,MAGpCxR,MAAMb,QAAQc,OAIfrN,KAAK4kB,qBAAqB5kB,KAAK+B,MAAMqK,eAo+B3C5M,SAEE,OACE,oCACE,kBAAC,GAAD,MAEA,kBAACI,EAAA,EAAD,CAAWF,UAAU,QAAQG,OAAK,GAEhC,kBAACwB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK5B,UAAU,aAAa6B,GAAG,MAE7B,kBAACkS,EAAA,EAAD,CAAM/T,UAAU,uBACd,kBAACgU,EAAA,EAAD,CAAYhU,UAAU,qBACpB,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK4C,GAAG,KACN,wBAAIxE,UAAU,QAAd,oBAEF,kBAAC4B,EAAA,EAAD,CAAK5B,UAAU,aAAawE,GAAG,KAE7B,kBAAC4Q,GAAA,EAAD,CACIzK,MAAM,SACN3G,KAAK,SACLqR,KAAK,KACL7T,QAASlB,KAAKygB,WAEd,0BAAM/gB,UAAU,mBAEN,uBAAGA,UAAU,mBAEf,0BAAMA,UAAU,mBAAhB,yBAOlB,kBAACiU,EAAA,EAAD,KACA,kBAACxP,EAAA,EAAD,KACI,wBAAIzE,UAAU,iCAAd,oBAGA,yBAAKA,UAAU,WACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,aACXxV,UAAU,sBADd,SAOE,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SAEVhE,UAAeM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACnF1b,GAAG,aACHqL,MAAOzK,KAAK+B,MAAMmZ,cAClB5G,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,YAK/B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,aACXxV,UAAU,sBADd,SAOE,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,aACHqL,MAASzK,KAAK+B,MAAMoZ,cACpB7G,SAAUtU,KAAK8e,kBAGZ9e,KAAK0gB,eAAe,aAO/B,kBAACrf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,aACTxV,UAAU,sBADhB,SAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,aACHqL,MAAQzK,KAAK+B,MAAMqZ,cACnB9G,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,YAK7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,YACTxV,UAAU,sBADhB,QAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,QAAY,2BAA6B,aAChF1b,GAAG,YACHqL,MAAOzK,KAAK+B,MAAMsZ,aAClB/G,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,WAK7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,YACTxV,UAAU,sBADhB,QAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,QAAY,2BAA6B,aAChF1b,GAAG,YACHqL,MAASzK,KAAK+B,MAAMuZ,aACpBhH,SAAWtU,KAAK8e,kBAEb9e,KAAK0gB,eAAe,WAI7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,WACTxV,UAAU,sBADhB,eAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,OAAW,2BAA6B,aAC/E1b,GAAG,WACHqL,MAAOzK,KAAK+B,MAAMwZ,YAClBjH,SAAYtU,KAAK8e,kBAEd9e,KAAK0gB,eAAe,UAI7B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACA,2BAAOU,QAAQ,WACTxV,UAAU,sBADhB,eAOI,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SACZhE,UAAaM,KAAK8a,qBAAqB,OAAW,2BAA6B,aAC/E1b,GAAG,WACHqL,MAAOzK,KAAK+B,MAAMyZ,YAClBlH,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,WAO/B,kBAACrf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,aACbxV,UAAU,sBADZ,gBAOA,kBAAC2E,EAAA,EAAD,CACE3E,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,aACHsE,KAAK,SACL+G,MAAOzK,KAAK+B,MAAM0Z,cAClBnH,SAAUtU,KAAK8e,kBAEhB9e,KAAK0gB,eAAe,YAIzB,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BAAOU,QAAQ,cACbxV,UAAU,sBADZ,UAOA,kBAAC2E,EAAA,EAAD,CACEX,KAAK,SAELhE,UAAaM,KAAK8a,qBAAqB,UAAc,2BAA6B,aAClF1b,GAAG,cACHqL,MAASzK,KAAK+B,MAAM2Z,eACpBpH,SAAUtU,KAAK8e,kBAEf9e,KAAK0gB,eAAe,aAQ1B,kBAACpf,EAAA,EAAD,CAAK0T,GAAG,KACR,kBAACR,GAAA,EAAD,KACM,2BAAOU,QAAQ,aACbxV,UAAU,sBADZ,SAMA,kBAAC2E,EAAA,EAAD,CAAOX,KAAK,SAEZhE,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aACjF1b,GAAG,aACHqL,MAAOzK,KAAK+B,MAAM4Z,cAClBrH,SAAUtU,KAAK8e,kBAEZ9e,KAAK0gB,eAAe,aAe/B,kBAACrf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,sBAFV,8BAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAaM,KAAK8a,qBAAqB,SAAa,2BAA6B,aAEjF1b,GAAG,qBACHmF,YAAY,mBACZb,KAAK,SACL+G,MAAQzK,KAAK+B,MAAM2hB,aACnBpP,SAAUtU,KAAKwa,sBAIrB,kBAAClZ,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,aAFV,QAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAaM,KAAK8a,qBAAqB,QAAY,2BAA6B,aAEhF1b,GAAG,YACHmF,YAAY,IACZb,KAAK,SACL2C,IAAI,IACJoE,MAAOzK,KAAK+B,MAAMyhB,SAClBlP,SAAUtU,KAAKka,gBAIrB,kBAAC5Y,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,uBAFV,8BAMA,kBAAC7Q,EAAA,EAAD,CACE3E,UAAcM,KAAK8a,qBAAqB,UAAc,2BAA6B,aACnF1b,GAAG,sBACHmF,YAAY,mBACZb,KAAK,SACL+G,MAAQzK,KAAK+B,MAAMqiB,cACnB9P,SAAUtU,KAAK2a,uBAIrB,kBAACrZ,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,cAFV,SAaA,kBAAC,GAAD,CACE9V,GAAG,aACHM,UAAcM,KAAK8a,qBAAqB,QAAc,aAAe,2BACrEvW,YAAc,8BAEdkG,MAAOzK,KAAK+B,MAAM8Y,aAClBvG,SAAUtU,KAAK4a,sBAMvB,kBAACvZ,EAAA,EAAD,CAAK3B,UAAU,6BACb,kBAAC4B,EAAA,EAAD,CAAK0T,GAAG,IAAItV,UAAU,cAGd,kBAACoV,GAAA,EAAD,CAAQ2M,OAAK,EAAC/hB,UAAU,iBAAiB2K,MAAM,UAAU3G,KAAK,SAC1DqR,KAAK,KACL7T,QAASlB,KAAKykB,cAEhB,0BAAM/kB,UAAU,mBAEd,uBAAGA,UAAU,iBAEf,0BAAMA,UAAU,mBAAhB,qBASd,wBAAIA,UAAU,SAEd,wBAAIA,UAAU,iCAAd,8BAGA,yBAAKA,UAAU,WACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,6BAFV,6BAOA,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,4BACHmF,YAAY,WACZb,KAAK,WAIX,kBAACpC,EAAA,EAAD,CAAK0T,GAAG,KACN,kBAACR,GAAA,EAAD,KACE,2BACE9U,UAAU,qBACVwV,QAAQ,8BAFV,8BAOA,kBAAC7Q,EAAA,EAAD,CAAOqd,UAAQ,EACbhiB,UAAU,2BACVN,GAAG,6BACHmF,YAAY,WACZb,KAAK,kBAezB,wBAAIhE,UAAU,SACd,kBAAC2B,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAK5B,UAAU,aAAa6B,GAAG,MAC7B,kBAAC,GAAD,CAAgB4U,UAAU,mCACdiC,aAAc,CAAC,QAAQ,QAAQ,OAAO,QAAQ,OAAO,cAAc,cACnEvN,KAAM7K,KAAK+B,MAAMujB,UACjBlM,qBAAsB,sBACtBH,mBAAmB,oBACnBnD,WAAY9V,KAAK4V,YACjBK,YAAajW,KAAKklB,eAClBxN,SAAU1X,KAAKglB,aACf7L,sBAAwBnZ,KAAK+B,MAAMsjB,oBACnC7M,mBAAoBxY,KAAK+B,MAAMkjB,kBAC/BxM,mBAAoBzY,KAAK+B,MAAMoK,iBAC/BuM,mBAAoB1Y,KAAK+B,MAAM8c,iBAC/B5G,WAAYjY,KAAKuO,YACjB5B,OAAQ3M,KAAK+B,MAAMqK,qBAW9ByX,IC9/CAxhB,GAhEF,CACX,CACEK,KAAM,SACNI,KAAM,eACND,KAAM,0BACN4iB,UAAW7Z,GACXnJ,OAAQ,UAEV,CACEC,KAAM,QACNI,KAAM,iBACND,KAAM,gCACN4iB,UDkjDW5B,GCjjDXphB,OAAQ,UAEV,CACEC,KAAM,SACNI,KAAM,kBACND,KAAM,gCACN4iB,UAAWxL,GACXxX,OAAQ,UAEV,CACEC,KAAM,gBACNI,KAAM,eACND,KAAM,yBACN4iB,UAAW5Q,GACXpS,OAAQ,UAEV,CACEC,KAAM,SACNI,KAAM,YACND,KAAM,gCACN4iB,UAAWvD,GACXzf,OAAQ,WChCZ,MAAMijB,WAAcpmB,IAAMC,UAAW,eAAD,oBAMlComB,UAAYtjB,GACHA,EAAOC,IAAI,CAACC,EAAMC,IACH,WAAhBD,EAAKE,OAEL,kBAACmjB,EAAA,EAAD,CACEljB,KAAMH,EAAKE,OAASF,EAAKG,KACzB+iB,UAAWljB,EAAKkjB,UAChBjjB,IAAKA,IAIF,MAjBqB,KAqBlCqjB,aAAenjB,IACb,IAAK,IAAI8E,EAAI,EAAGA,EAAInF,GAAO6I,OAAQ1D,IACjC,IAGS,IAFPxH,KAAKC,MAAMiD,SAASC,SAASC,QAC3Bf,GAAOmF,GAAG/E,OAASJ,GAAOmF,GAAG9E,MAG/B,OAAOL,GAAOmF,GAAG1E,KAGrB,MAAO,SA9BTgjB,mBAAmB/mB,GACjByY,SAASuO,gBAAgBC,UAAY,EACrCxO,SAASyO,iBAAiBD,UAAY,EACtChmB,KAAKkmB,KAAKC,YAAYH,UAAY,EA6BpCxmB,SACE,OACE,oCACE,kBAAC,EAAD,iBACMQ,KAAKC,MADX,CAEEoC,OAAQA,GACRiB,KAAM,CACJE,UAAW,eACXK,OAAQlD,EAAQ,KAChBiD,OAAQ,UAGZ,yBAAKlE,UAAU,eAAe0mB,IAAI,eAChC,kBAAC,EAAD,iBACMpmB,KAAKC,MADX,CAEEC,UAAWF,KAAK6lB,aAAa7lB,KAAKC,MAAMiD,SAASC,aAEnD,kBAACkjB,EAAA,EAAD,KAASrmB,KAAK2lB,UAAUtjB,KACxB,kBAACzC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACymB,EAAD,UAQGZ,U,UCxDf,MAAMrmB,WAAoBC,IAAMC,UAC9BC,SACE,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,UAAU,2CACVC,OAAO,MAEP,kBAACC,EAAA,EAAD,CAAWF,UAAU,QACnB,kBAACiE,EAAA,EAAD,CAAa5D,GAAG,IAAIgB,IAAKjB,KACvB,yBAAKW,IAAI,MAAMC,IAAKC,EAAQ,QAE9B,4BAAQjB,UAAU,iBAAiBN,GAAG,wBACpC,0BAAMM,UAAU,yBAElB,kBAAC6mB,GAAA,EAAD,CAAsBnmB,QAAM,EAAComB,QAAQ,yBACnC,yBAAK9mB,UAAU,oCACb,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK5B,UAAU,iBAAiBwE,GAAG,KACjC,kBAACpE,EAAA,EAAD,CAAMC,GAAG,KACP,yBACEU,IAAI,MACJC,IAAKC,EAAQ,SAInB,kBAACW,EAAA,EAAD,CAAK5B,UAAU,iBAAiBwE,GAAG,KACjC,4BACExE,UAAU,iBACVN,GAAG,wBAEH,+BACA,mCAKR,kBAACe,EAAA,EAAD,CAAKT,UAAU,UAAUU,QAAM,GAC7B,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASjC,UAAU,gBAAgBK,GAAG,IAAIgB,IAAKjB,KAC7C,uBAAGJ,UAAU,iBACb,0BAAMA,UAAU,wBAAhB,eAGJ,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEjC,UAAU,gBACVK,GAAG,iBACHgB,IAAKjB,KAEL,uBAAGJ,UAAU,oBACb,0BAAMA,UAAU,wBAAhB,cAGJ,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEjC,UAAU,gBACVK,GAAG,cACHgB,IAAKjB,KAEL,uBAAGJ,UAAU,iBACb,0BAAMA,UAAU,wBAAhB,WAGJ,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEjC,UAAU,gBACVK,GAAG,sBACHgB,IAAKjB,KAEL,uBAAGJ,UAAU,oBACb,0BAAMA,UAAU,wBAAhB,mBAYLL,UC5Ff,MAAMonB,WAAcnnB,IAAMC,UACxBC,SACE,OACE,sCA4DSinB,UC1Df,MAAMC,WAAapnB,IAAMC,UAAW,eAAD,oBAOjComB,UAAYtjB,GACHA,EAAOC,IAAI,CAACC,EAAMC,IACH,UAAhBD,EAAKE,OAEL,kBAACmjB,EAAA,EAAD,CACEljB,KAAMH,EAAKE,OAASF,EAAKG,KACzB+iB,UAAWljB,EAAKkjB,UAChBjjB,IAAKA,IAIF,MAjBb+T,oBACEiB,SAASmP,KAAKC,UAAUC,IAAI,cAE9BC,uBACEtP,SAASmP,KAAKC,UAAUG,OAAO,cAiBjCvnB,SACE,OACE,oCACE,yBAAKE,UAAU,gBACb,kBAACsnB,GAAD,MACA,yBAAKtnB,UAAU,wCACb,kBAACE,EAAA,EAAD,KACE,yBAAKF,UAAU,gCACb,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,0BACb,kBAAC4B,EAAA,EAAD,CAAK0T,GAAG,IAAIiS,GAAG,KACb,wBAAIvnB,UAAU,cAAd,YACA,uBAAGA,UAAU,wBAAb,wFAQR,yBAAKA,UAAU,wDACb,yBACEwnB,MAAM,6BACNC,oBAAoB,OACpBC,QAAQ,MACRC,QAAQ,eACRthB,EAAE,IACFC,EAAE,KAEF,6BACEtG,UAAU,eACV4nB,OAAO,6BAMf,kBAAC1nB,EAAA,EAAD,CAAWF,UAAU,cACnB,kBAAC2B,EAAA,EAAD,CAAK3B,UAAU,0BACb,kBAAC2mB,EAAA,EAAD,KAASrmB,KAAK2lB,UAAUtjB,QAI9B,kBAACklB,GAAD,QAMOb,UCtEfc,IAAShoB,OACP,kBAACioB,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,KACE,kBAACT,EAAA,EAAD,CAAOljB,KAAK,SAASlD,OAAQS,GAAS,kBAAC,GAAgBA,KACvD,kBAAC2lB,EAAA,EAAD,CAAOljB,KAAK,QAAQlD,OAAQS,GAAS,kBAAC,GAAeA,KACrD,kBAACynB,EAAA,EAAD,CAAUC,KAAK,IAAI5nB,GAAG,mBAG1ByX,SAASC,eAAe,U,mBCpC1B9Y,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.45f1c75b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-cover.e2582654.jpg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 571;","module.exports = __webpack_public_path__ + \"static/media/argon-react-white.275a2629.png\";","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n            {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form> */}\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        Emre ÇÖMEZ\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\">\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-calendar-grid-58\" />\n                    <span>Activity</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-support-16\" />\n                    <span>Support</span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2018{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"https://www.creative-tim.com?ref=adr-admin-footer\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Creative Tim\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"https://www.creative-tim.com?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Creative Tim\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://www.creative-tim.com/presentation?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  About Us\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"http://blog.creative-tim.com?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Blog\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-admin-footer\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  MIT License\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}\n            <h6 className=\"navbar-heading text-muted\">Documentation</h6>\n            {/* Navigation */}\n            <Nav className=\"mb-md-3\" navbar>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/documentation/overview?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-spaceship\" />\n                  Getting started\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/documentation/colors?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-palette\" />\n                  Foundation\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://demos.creative-tim.com/argon-dashboard-react/documentation/alerts?ref=adr-admin-sidebar\">\n                  <i className=\"ni ni-ui-04\" />\n                  Components\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport { functionExpression } from \"@babel/types\";\nimport { months } from \"moment\";\n\n// const Stitch = require(\"mongodb-stitch-browser-sdk\");\n// const AnonymousCredential = require(\"mongodb-stitch-browser-sdk\");\n// const RemoteMongoClient = require(\"mongodb-stitch-browser-sdk\");\n\n\n\nconst Chart = require(\"chart.js\");\nconst MonthNames =[\"Oca\",\"Şub\",\"Mar\",\"Nis\",\"May\",\"Haz\",\"Tem\",\"Ağu\",\"Eyl\",\"Eki\",\"Kas\",\"Ara\"]\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    //var radius: any = cornerRadius;\n    var radius = cornerRadius;  \n    \n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// function getSalesPerMonth(){\n    \n//     return aylikSatislar;\n// }\n\n// Methods\n\nexport function monthsToDisplayInGraphs(){\n    let months = [];\n    let curDate = new Date();\n    let curMonth = curDate.getMonth();\n    let curYear = curDate.getFullYear();\n\n    for (let i = curMonth-12 ; i <= curMonth ; i++ ){\n        let _month,_year;\n        if ( i < 0){\n            _month = i + 12 ;\n            _year = curYear - 1 ;\n        }else {\n            _month = i ;\n            _year = curYear;\n        }\n        _month = _month + 1;\n        let m = String(_month).length > 1 ?  String(_year).substr(2).concat(String(_month)) :  String(_year).substr(2).concat(\"0\").concat(String(_month)) ;\n        console.log(\"YaXis: \",m )\n        months.push(m);\n    }\n    console.log(\"xXx:\", months)\n    return months;\n}\n\nfunction findMonthLabels(){\n    let labelArray = [];\n    let curDate = new Date();\n    let curMonth = curDate.getMonth();\n    let curYear = curDate.getFullYear();\n\n    for (let i = curMonth-12 ; i <= curMonth ; i++ ){\n        let _month,_year;\n        if ( i < 0){\n            _month = i + 12 ;\n            _year = curYear - 1 ;\n        }else {\n            _month = i ;\n            _year = curYear;\n        }\n        let label = MonthNames[_month].concat(\"'\").concat(String(_year).substring(2));\n        //console.log(\"YaXis: \",label )\n        labelArray.push(label);\n\n    }\n\n\n    return labelArray;\n}\n\n// Chart.js global options\nexport function chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    },\n    maxBarThickness: 10\n  });\n\n  return options;\n}\n\n// Parse global options\nexport function parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.jsx (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.jsx (Total orders - Card)\nexport let chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29]\n      }\n    ]\n  }\n};\n//LastikParkCharts:\nexport let chartAylikCiroBazliX = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"₺\" + value + \"b\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"₺\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      //labels: [\"Ocak\", \"Subat\", \"Mart\", \"Nisan\", \"Mayis\", \"Haziran\", \"Temmuz\", \"Agustos\",\"Eylul\", \"Ekim\", \"Kasim\", \"Aralik\"],\n      labels: findMonthLabels(),\n      datasets: [\n        {\n          label: \"Satislar\",\n          data: [100, 90, 110, 130, 80, 75, 80, 85, 62,100,0,110,600]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      //labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      labels: findMonthLabels(),\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 100, 40]\n        }\n      ]\n    };\n  }\n};\n\nexport let chartAylikCiroBazli = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return \"₺\" + value + \"b\";\n                return \"₺\" + value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"₺\" + yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n      //labels: [\"Ocak\", \"Subat\", \"Mart\", \"Nisan\", \"Mayis\", \"Haziran\", \"Temmuz\", \"Agustos\",\"Eylul\", \"Ekim\", \"Kasim\", \"Aralik\"],\n      labels: findMonthLabels(),\n      datasets: [\n        {\n          label: \"Satislar\",\n          data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }\n      ]\n  }\n};\n\n\nexport let chartAylikAdetBazli = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: findMonthLabels(),\n    datasets: [\n      {\n        label: \"Satislar\",\n        data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        //data: findAdetBazliSatislar()\n      }\n    ]\n  }\n};\n\n// module.exports = {\n//   chartOptions, // used inside src/views/Index.jsx\n//   parseOptions, // used inside src/views/Index.jsx\n//   chartExample1, // used inside src/views/Index.jsx\n//   chartExample2 // used inside src/views/Index.jsx\n//   ,chartAylikCiroBazli\n\n// };\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {  Container } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-6 pt-5 pt-md-8\">\n          <Container fluid>\n          <div className=\"header-body\"> \n              {/* Card stats */}\n              {/*<Row>\n                 <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Traffic\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            350,897\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fa fa-arrow-up\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            New users\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            2,356\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-pie\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-danger mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 3.48%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last week</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Sales\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">924</span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                            <i className=\"fas fa-users\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-warning mr-2\">\n                          <i className=\"fas fa-arrow-down\" /> 1.10%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since yesterday</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Performance\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            49,65%\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                            <i className=\"fas fa-percent\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <p className=\"mt-3 mb-0 text-muted text-sm\">\n                        <span className=\"text-success mr-2\">\n                          <i className=\"fas fa-arrow-up\" /> 12%\n                        </span>{\" \"}\n                        <span className=\"text-nowrap\">Since last month</span>\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row> */}\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// import parseOptions from \"variables/charts.jsx\";\n// import chartAylikCiroBazli from \"variables/charts.jsx\";\n// import chartOptions from \"variables/charts.jsx\";\n//import {chartExample1,chartExample2} from \"variables/charts.jsx\"\n\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Media,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  UncontrolledTooltip,\n  Container,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\n// core components\nimport {\n chartOptions,\n  parseOptions,\n  chartExample1,\n chartExample2,\n chartAylikCiroBazli,\n chartAylikAdetBazli,\n monthsToDisplayInGraphs\n} from \"variables/charts.jsx\";\n\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\";\n\nimport Header from \"components/Headers/Header.jsx\";\nimport { chartreuse } from \"color-name\";\n\n// /***********************************************************************/\n// /* DB STUFF */\nconst client = Stitch.initializeDefaultAppClient(\"lastikpark-ogewz\");\n//const client = Stitch.getAppClient(\"lastikpark-ogewz\");\nconst mongodb = client.getServiceClient(\n   RemoteMongoClient.factory,\n   \"mongodb-atlas\"\n);\n\nconst db = mongodb.db(\"lastikParkDB\");\n\n// client.auth.loginWithCredential(new AnonymousCredential()).then(user => {\n//   console.log(`Logged in as anonymous user with id: ${user.id}`);\n// }).catch(console.error);\n// /***********************************************************************/\n\nconst maxStock = 100;\n\nclass Index extends React.Component {\n  state = {\n    activeNav: 1,\n    chartExample1Data: \"data1\",\n    chartAylikCiroBazliOrnek:\"data1\",\n    barChart : chartAylikAdetBazli ,\n    lineChart: chartAylikCiroBazli,\n\n    tires : []\n    ,filterArrayMarka : []\n    ,filterApplied : {}\n  };\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartAylikCiroBazliOrnek:\n        this.state.chartAylikCiroBazliOrnek === \"data1\" ? \"data2\" : \"data1\"\n    });\n    let wow = () => {\n      console.log(this.state);\n    };\n    wow.bind(this);\n    setTimeout(() => wow(), 1000);\n    // this.chartReference.update();\n  };\n  componentWillMount() {\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n    // chartAylikAdetBazli.data.datasets[0].data = [1,2,3,4,5,6,7,8,9,10,11,12,13];  \n    this.findAylikBazliSatislar();\n    this.getStockData(this.state.filterApplied);\n\n\n    db.collection(\"stockCollection\").find().toArray().then(dbResults => {\n\n      console.log(\"chats DB Results:\",dbResults);\n      let distinctFilterMarkaValues = [...new Set(dbResults.map(value => value.marka))].sort();\n      this.setState({  filterArrayMarka : distinctFilterMarkaValues });\n      \n    })\n    .catch(console.error);\n\n\n    \n  }\n\n  getStockData = (filter) => {\n    db.collection(\"stockCollection\").find(filter).toArray().then(dbResults => {\n\n      console.log(\"chats DB Results:\",dbResults);\n      let distinctFilterMarkaValues = [...new Set(dbResults.map(value => value.marka))].sort();\n      this.setState({tires: dbResults });\n      \n    })\n    .catch(console.error);\n  }\n\n  findAylikBazliSatislar = () => {\n    let aylikSatislarAdet = {} ;\n    let aylikSatislarCiro = {} ;\n    let satisAdetArray = [];\n    let satisCiroArray = [];\n    let monthsForGraphs = monthsToDisplayInGraphs();\n\n    db.collection(\"salesCollection\").find().toArray().then(dbResults => {\n\n      console.log(\"chats DB Results:\",dbResults);\n      dbResults.forEach((satis) => {\n\n          let m = String(satis.tarih).substr(8,2).concat(String(satis.tarih).substr(3,2));\n          console.log(\"Aylar varki: \", m);\n          if(aylikSatislarAdet[m]){\n              aylikSatislarAdet[m] = aylikSatislarAdet[m] + satis.satisAdet ;\n          }else{\n            aylikSatislarAdet[m] =  satis.satisAdet ;\n          }\n          if(aylikSatislarCiro[m]){\n            aylikSatislarCiro[m] = aylikSatislarCiro[m] + (satis.satisAdet * satis.birimFiyat) ;\n          }else{\n            aylikSatislarCiro[m] =  satis.satisAdet * satis.birimFiyat ;\n          }\n\n\n      })\n      monthsForGraphs.forEach((item)=>{\n\n          item = Number(item);\n          let _satisAdeti = aylikSatislarAdet[item];\n          satisAdetArray.push(_satisAdeti);\n\n          satisCiroArray.push(aylikSatislarCiro[item]);\n      })\n      \n      console.log(\"yYy: \", satisAdetArray);\n      chartAylikAdetBazli.data.datasets[0].data = satisAdetArray ;\n      chartAylikCiroBazli.data.datasets[0].data = satisCiroArray ;\n      console.log(chartAylikCiroBazli);\n      this.setState({barChart: chartAylikAdetBazli});\n      \n    })\n    .catch(console.error);\n    \n    return satisAdetArray;\n  }\n\n  applyFilter = (event) => {\n    debugger;\n    let filterObj = {marka: event.currentTarget.textContent}\n\n    if(event.currentTarget.textContent.includes(\"Kaldır\")){\n        delete filterObj.marka;\n    }\n  \n    this.getStockData(filterObj);\n\n    this.setState({\n      filterApplied : filterObj\n    });\n    \n    \n}\n\n  renderMarkaFilterOptions(){\n    return this.state.filterArrayMarka.map(element => {\n        return (\n          // <DropdownItem onClick={() => this.toggleModal(\"modalEditTire\")}>\n          <DropdownItem key={element} onClick={this.applyFilter}>\n                        <span>{element}</span>\n          </DropdownItem>\n        )\n    });\n  }\n\n  renderStokTableRows() {\n    return this.state.tires.map((tire, index) => {\n        const stockPerc = tire.stokAdet / maxStock *100;\n        \n        const ebat = String(tire.taban).concat(\" / \").concat(String(tire.oran))\n                          .concat(\" / \").concat(tire.jant)\n                            .concat(\" / \").concat(tire.yukEndeksi)\n                              .concat(\" / \").concat(tire.hizEndeksi).concat(\" \");\n\n        const tooltipID = \"tooltip\".concat(tire._id.toString());\n        const rowId = \"r\".concat(tire._id.toString());\n        const otherInfo = \"\\n\\t Yanak: \".concat(tire.yanakYapisi).concat(\n                          \"\\n\\t Mevsim: \".concat(tire.mevsim).concat(\n                          \"\\n\\t Diğer: \".concat(tire.diger)));\n        const ortMaliyet = Number.isInteger(tire.ortMaliyet) ? tire.ortMaliyet : tire.ortMaliyet.toFixed(2);\n        const ortFiyat = Number.isInteger(tire.ortFiyat) ? tire.ortFiyat : tire.ortFiyat.toFixed(2);\n                                  \n        if (stockPerc <= 20) {\n          var barClassVar = 'bg-danger';\n          var infoIcon = 'fas fa-info-circle text-red';  \n          var settingsIcon = 'ni ni-settings text-red';\n          var ebatIcon = 'fas fa-car-side text-red'\n        }else if (stockPerc >= 21 && stockPerc <=80 ) {\n          var barClassVar = 'bg-info';\n          var infoIcon = 'fas fa-info-circle text-info';\n          var settingsIcon = 'ni ni-settings text-info';\n          var ebatIcon = 'fas fa-car-side text-info'\n        }else{\n          var barClassVar = 'bg-success';\n          var infoIcon = 'fas fa-info-circle text-green';\n          var settingsIcon = 'ni ni-settings text-green';\n          var ebatIcon = 'fas fa-car-side text-green'\n        }\n\n        return (\n          <tr key={rowId}>\n          <th scope=\"row\">\n            <Media className=\"align-items-center\">\n              <a\n                className=\"avatar rounded-circle mr-3\"\n                href=\"#pablo\"\n                onClick={e => e.preventDefault()}\n              >\n                <img\n                  alt=\"...\"\n                  src={require(\"assets/img/theme/sketch.jpg\")}\n                />\n              </a>\n              <Media>\n                <span className=\"mb-0 text-sm\">\n                  {tire.marka}\n                </span>\n              </Media>\n            </Media>\n          </th>\n          <td className = \"text-left\">\n              {tire.model}\n          </td>\n          <td>\n              <i className={ebatIcon} /> {ebat}\n              <span>\n                  <i className={infoIcon} id={tooltipID} /> \n                  <UncontrolledTooltip\n                    delay={0}\n                    target={tooltipID}\n                  >\n                    {otherInfo}\n                  </UncontrolledTooltip>\n              </span>\n          </td>\n          <td>\n            <div className=\"d-flex align-items-center\">\n              <span className=\"mr-2\">{tire.stokAdet}</span>\n                {/* <div>\n                  <Progress\n                    max=\"100\"\n                    value={stockPerc}\n                    barClassName={barClassVar}\n                  />\n              </div> */}\n            </div>                \n          </td>\n          <td>\n              ₺{ortMaliyet}\n          </td>\n          <td>\n              ₺{ortFiyat}\n          </td>\n        </tr>\n\n        );\n    })\n  }\n\n\n  render() {\n    let filterIcon ;\n    debugger;\n    if (Object.keys(this.state.filterApplied).length> 0 ){\n      filterIcon = 'fas fa-filter text-green';  \n    }else{\n      filterIcon = 'fas fa-filter';  \n    }\n\n    return (\n\n      \n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Ciro Bazında\n                      </h6>\n                      <h2 className=\"text-white mb-0\">Satışlar</h2>\n                    </div>\n                    {/* <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div> */}\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      //data={chartAylikCiroBazli[this.state.chartAylikCiroBazliOrnek]}\n                      data={chartAylikCiroBazli.data}\n                      options={chartAylikCiroBazli.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            </Row>\n            <Row className=\"mt-5\">\n            <Col xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Adet Bazlı\n                      </h6>\n                      <h2 className=\"mb-0\">Satış Sayıları</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={this.state.barChart.data}\n                      options={chartAylikAdetBazli.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Stok Tablosu</h3>\n                    </div>\n                    {/* <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div> */}\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Marka\n                          <UncontrolledDropdown direction=\"right\">\n                              <DropdownToggle className=\"pr-0\" nav>\n                                <i className={filterIcon} /*id={filterId}*/ /> \n                              </DropdownToggle>\n                              <DropdownMenu className=\"dropdown-menu-arrow\">\n                                { this.renderMarkaFilterOptions()}\n                                { Object.keys(this.state.filterApplied).length> 0 && \n                                    <DropdownItem divider /> \n                                }\n                                { Object.keys(this.state.filterApplied).length> 0 && \n                                    <DropdownItem key=\"removeFilter\" onClick={this.applyFilter}>\n                                      <span>Filtreyi Kaldır</span>\n                                    </DropdownItem>\n                                }\n                              </DropdownMenu>  \n                          </UncontrolledDropdown>\n                      </th>\n                      <th scope=\"col\">Desen</th>\n                      <th scope=\"col\">Ebat </th>\n                      <th scope=\"col\">Adet </th>\n                      <th scope=\"col\">Ort. Maliyet </th>\n                      <th scope=\"col\">Ort. Fiyat </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.renderStokTableRows()}\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nclass UserHeader extends React.Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n          style={{\n            minHeight: \"600px\",\n            backgroundImage:\n              \"url(\" + require(\"assets/img/theme/profile-cover.jpg\") + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center top\"\n          }}\n        >\n          {/* Mask */}\n          <span className=\"mask bg-gradient-default opacity-8\" />\n          {/* Header container */}\n          <Container className=\"d-flex align-items-center\" fluid>\n            <Row>\n              <Col lg=\"7\" md=\"10\">\n                <h1 className=\"display-2 text-white\">Hello Jesse</h1>\n                <p className=\"text-white mt-0 mb-5\">\n                  This is your profile page. You can see the progress you've\n                  made with your work and manage your projects or assigned tasks\n                </p>\n                <Button\n                  color=\"info\"\n                  href=\"#pablo\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Edit profile\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserHeader;\n","import React from \"react\";\n// react plugin used to create datetimepicker\nimport ReactDatetime from \"react-datetime\";\nimport moment from 'moment';\n// reactstrap components\nimport {\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col,\n  Row\n} from \"reactstrap\";\n\nclass Datepicker extends React.Component {\n  // state = {};\n  constructor(props){\n    super(props);\n    this.state = {\n        // placeholder : this.props.placeholder ,\n        // value : this.props.value ,\n        // className: this.props.className\n    }\n}\n  componentWillMount() {\n      console.log(\"xxxDatepicker: \",this.state.className)\n  }\n  componentWillUpdate(){\n    console.log(\"xxxDatepicker up: \",this.state.className)\n  }\n\n  handleChange = (val) => {\n      // console.log(\"datepicker val \", val );\n      // console.log(\"datepicker fVal \" , val.format(\"DD-YYYY-MM\") );\n      // let fVal = val.format(\"DD/MM/YYYY\");\n      debugger;\n      if ( moment(val,\"DD/MM/YYYY\",true).isValid() ){\n          this.setState ({value:val.format(\"DD/MM/YYYY\")});\n          this.props.onChange(val.format(\"DD/MM/YYYY\"));\n      }\n  }\n\n  render() {\n    return (\n      <>\n        <FormGroup>\n          <InputGroup className=\"input-group-alternative\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <i className=\"ni ni-calendar-grid-58\" />\n              </InputGroupText>\n            </InputGroupAddon>\n            <ReactDatetime\n              inputProps={{\n                //placeholder : \"Tarih Seciniz\"\n                placeholder : this.props.placeholder \n               //,value : this.state.value \n              }}\n              timeFormat={false}\n              closeOnSelect={true}\n              dateFormat=\"DD/MM/YYYY\" \n              onChange={this.handleChange}\n              value = { this.props.value  }\n              className = \"is-invalid\"\n            />\n          </InputGroup>\n        </FormGroup>\n      </>\n    );\n  }\n}\n\nexport default Datepicker;","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n//import { Link } from \"react-router-dom\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  UncontrolledDropdown,\n  Media,\n  FormGroup,\n  Form,\n  Input,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.jsx\";\nimport Header from \"components/Headers/Header.jsx\";\nimport Datepicker from \"../../Datepicker.jsx\"\n\n\n\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <>\n        {<Header /> } \n\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"12\">\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Yeni Sipariş</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        Mevcut Siparişler\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Lastik Bilgileri\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label for=\"input-marka\"\n                                className=\"form-control-label\"\n                              >\n                                Marka\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className=\"form-control-alternative\"\n                              id=\"input-marka\"\n                              >\n                                <option>Lastik Markasi Secimi</option>  \n                                <option>Good Year</option>\n                                <option>Michelin</option>\n                                <option>Continental</option>\n\n                            </Input>\n\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                          <label for=\"input-marka\"\n                                className=\"form-control-label\"\n                              >\n                                Ebat\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className=\"form-control-alternative\"\n                              id=\"input-ebat\"\n                              >\n                                <option>Lastik Ebati Secin</option>  \n                                <option>R16</option>\n                                <option>R17</option>\n                                <option>R18</option>\n                                <option>R19</option>\n\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              Alış Fiyatı (KDV Dahil)\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              //defaultValue=\"Lucky\"\n                              id=\"input-first-name\"\n                              placeholder=\"₺ Cinsinden\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Satış Fiyatı (KDV Dahil)\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              //defaultValue=\"Jesse\"\n                              id=\"input-last-name\"\n                              placeholder=\"₺ Cinsinden\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-first-name\"\n                            >\n                              Kapora Miktari \n                            </label>\n\n                            <Input\n                              className=\"form-control-alternative\"\n                              //defaultValue=\"Lucky\"\n                              id=\"input-first-name\"\n                              placeholder=\"₺ Cinsinden\"\n                              type=\"number\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                        <FormGroup > \n                              <label for=\"kaporaSelect\"\n                                className=\"form-control-label\"\n                              >\n                                Kapora Tipi\n                              </label>\n                            \n                              \n                              <Input type=\"select\" label=\"dene\"\n                              className=\"form-control-alternative\"\n                              id=\"kaporaSelect\"\n                              >\n                                <option>Kapora Tipini Secin</option>  \n                                <option>Nakit</option>\n                                <option>K.Karti</option>\n                            </Input>\n                            \n          \n                            </FormGroup> \n                        </Col>\n                      </Row>\n                    </div>\n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Teslimat Bilgileri\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                              \n                            >\n                              Sipariş Nedeni\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              //defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Stok / Kisi Bilgisi\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-address\"\n                            >\n                              Sipariş Yeri\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              //defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                              id=\"input-address\"\n                              placeholder=\"Nereden temin edilecek ?\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-city\"\n                            >\n                              Telefon Numarasi\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              defaultValue=\"05\"\n                              id=\"input-city\"\n                              placeholder=\"tel\"\n                              type=\"tel\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-country\"\n                            >\n                              Teslimat Tarihi\n                            </label>\n                            {/* <Input\n                              className=\"form-control-alternative\"\n                              defaultValue =\"01/01/0001\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type= \"date\"\n                            /> */}\n                            <Datepicker\n                              placeholder = \"Teslimat Tarihini Secin\"\n                            ></Datepicker>\n                          \n                          </FormGroup>\n                        </Col>\n                        \n                      </Row>\n                      <Row>\n                        <Col lg=\"12\">\n                          <FormGroup>\n                            <label>Notlar</label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              placeholder=\"Ek not varsa buraya ...\"\n                              rows=\"4\"\n                              type=\"textarea\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      \n                    </div>\n                    \n                    {/* Description */}\n                    \n                    \n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\n\n\n\n\nexport default Profile;\n","class Tire {\n    // constructor({}){\n\n    //   this.marka = \"\",\n    //   this.taban = 0,\n    //   this.oran = 0,\n    //   this.jant = \"\",\n    //   this.yukEndeksi= \"\",\n    //   this.hizEndeksi = \"\",\n    //   this.desen = \"\",\n    //   this.yanakYapisi =\"\",\n    //   this.mevsim =\"\",\n    //   this.diger =\"\";\n    // }\n//     constructor(_marka,_taban,_oran,_jant,_yukEndeksi,_hizEndeksi,_desen,_yanakYapisi,_mevsim,_diger){\n//         this.marka = _marka,\n//         this.taban = _taban,\n//         this.oran = _oran,\n//         this.jant = _jant,\n//         this.yukEndeksi= _yukEndeksi,\n//         this.hizEndeksi = _hizEndeksi,\n//         this.desen = _desen,\n//         this.yanakYapisi = _yanakYapisi,\n//         this.mevsim = _mevsim,\n//         this.diger = _diger;\n//       }\n\n    constructor(tire){\n       // debugger;\n        let { _id,owner_id,marka,model,taban,oran,jant,yukEndeksi,hizEndeksi,desen,yanakYapisi,mevsim,diger } = tire; \n        this._id = _id ;\n        this.owner_id = owner_id ;\n        this.marka = marka;\n        this.model = model;\n        this.taban = taban;\n        this.oran = oran;\n        this.jant = jant;\n        this.yukEndeksi= yukEndeksi;\n        this.hizEndeksi = hizEndeksi;\n        this.desen = desen;\n        this.yanakYapisi = yanakYapisi;\n        this.mevsim = mevsim;\n        this.diger = diger;\n    }\n    mainInfo(){\n        return this.marka.concat(\" \")\n                .concat(this.model).concat(\" - \")\n                    .concat(String(this.taban))\n                        .concat(\" / \").concat(String(this.oran))\n                            .concat(\" / \").concat(this.jant)\n                            .concat(\" / \").concat(String(this.yukEndeksi))\n                                .concat(\" / \").concat(this.hizEndeksi);\n    }\n\n    otherInfo(){\n        return  \"\\nYanak: \".concat(this.yanakYapisi).concat(\n                    \"\\n\\t Mevsim: \".concat(this.mevsim).concat(\n                    \"\\n\\t Diğer: \".concat(this.diger)));\n    }\n\n    fullInfo(){\n        return this.mainInfo() + \" \" + this.otherInfo() ;\n    }\n\n    idInfoToString(){\n        return (this._id.toString());\n    }\n    \n}   \n\nexport default Tire;\n\n//     // get getProperty(prop){\n//     //     return this[prop];\n//     // }\n    \n//     mainInfo(){\n//         return this.marka.concat(\" - \")\n//                 .concat(String(this.taban))\n//                     .concat(\" / \").concat(String(this.oran))\n//                         .concat(\" / \").concat(this.jant)\n//                          .concat(\" / \").concat(String(this.yukEndeksi))\n//                              .concat(\" / \").concat(this.hizEndeksi);\n//     }\n\n\n\n// }\n\n\n\n\n\n\n// var Tire ={\n//     marka : \"\",\n//     taban : 0,\n//     oran : 0,\n//     jant : \"\",\n//     yukEndeksi : \"\",\n//     hizEndeksi : \"\",\n//     desen : \"\",\n//     yanakYapisi : \"\",\n//     mevsim : \"\",\n//     diger : \"\",\n//     mainInfo : function(){\n//         return this.marka.concat(\" - \")\n//                     .concat(String(this.taban))\n//                         .concat(\" / \").concat(String(this.oran))\n//                             .concat(\" / \").concat(this.jant)\n//                              .concat(\" / \").concat(String(this.yukEndeksi))\n//                                  .concat(\" / \").concat(this.hizEndeksi);\n//     }\n// }\n\n\n","import React, {Component} from 'react';\nimport Tire from \"../../Tire.js\";\nimport {\n    Button,\n    Modal\n} from \"reactstrap\";\n\n\nexport default class ModalTrxDelConfirm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isOnScreen: props.isOpen,\n            headerTitle: props.headerTitle,\n            mainTitle: props.mainTitle,\n            question: props.question,\n            confirmButtonName: props.confirmButtonName,\n            tire : props.forTire\n\n        }\n    }\n    componentDidMount(){\n        console.log(\"Confirmation Modal componentDidMount\");\n        //console.log(this.props.isOpen, this.props.modalStateName);\n\n    }\n\n    toggleModal = ()=> { \n        this.setState({\n            isOnScreen: !this.state.isOnScreen\n        });\n\n        this.props.toggleFunc(this.props.modalStateName);\n      };\n\n    confirmPressed = () => {\n\n        this.setState({\n            isOnScreen: !this.state.isOnScreen\n        });\n\n        this.props.confirmFunc(this.props.id);\n    }\n\n    render(){\n        return (\n            <Modal\n            className=\"modal-dialog-centered modal-danger\"\n            contentClassName=\"bg-gradient-danger\"\n            isOpen={this.state.isOnScreen}\n            toggle={() => this.toggleModal()}\n            backdrop=\"static\"\n            >\n            <div className=\"modal-header\">\n                <h6 className=\"modal-title\" id=\"modal-title-notification\">\n                {this.state.headerTitle}\n                </h6>\n                <button\n                aria-label=\"Close\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                type=\"button\"\n                onClick={() => this.toggleModal()}\n                >\n                <span aria-hidden={true}>×</span>\n                </button>\n            </div>\n            <div className=\"modal-body\">\n                <div className=\"py-3 text-center\">\n                <i className=\"ni ni-bell-55 ni-3x\" />\n                {/* <h4 className=\"heading mt-4\">{editPopupTitle} - {otherInfo}</h4> */}\n                <h4 className=\"heading mt-4\">{this.state.mainTitle}</h4>\n                <p>\n                    {this.state.question}\n                </p>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <Button className=\"btn-white\" color=\"default\" type=\"button\"\n                        onClick={() => this.confirmPressed() }>\n                {this.state.confirmButtonName}\n                </Button>\n                <Button\n                className=\"text-white ml-auto\"\n                color=\"link\"\n                data-dismiss=\"modal\"\n                type=\"button\"\n                onClick={() => this.toggleModal()}\n                >\n                Vazgeç\n                </Button>\n            </div>\n            </Modal>\n        );\n    }\n}","import React, {Component} from 'react';\nimport Datepicker from \"../../Datepicker.jsx\";\nimport {\n    Button,\n    Modal,\n    Col,\n    Form,\n    FormGroup,\n    Input\n\n} from \"reactstrap\";\n\n\nexport default class ModalEditTrxSatis extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isOnScreen: props.isOpen,\n            editedDate : props.trx.tarih,\n            birimFiyat :props.trx.birimFiyat,\n            satisAdet : props.trx.satisAdet,\n            stokAdeti : props.trx.satisAdet + props.trx.stokAdeti\n            \n        }\n    }\n\n\n    componentWillMount(){\n        \n         console.log(\"componentWillMount: ModalEditTrx\");\n         \n         console.log(\"++isOpen \", this.props.trx,this.props.stokAdet);\n\n    }\n    \n    numInputChanged = (event) => {\n        \n        console.log(\"asdasd\", event);\n        let input = event.target.id.substring(14);\n        let x = Number(event.target.value);\n        if (x > 0 ){\n            if  (input === \"birimFiyat\"){\n                this.setState( { [input]: x });\n            }\n            else{\n                if ( x <= this.state.stokAdeti){\n                    this.setState( { [input]: x });\n                }\n            }\n        }\n    }\n\n    toggleModal = ()=> {\n        this.setState({\n          isOnScreen: !this.state.isOnScreen\n        });\n        \n        this.props.toggleFunc(this.props.modalStateName);\n      };\n\n    dateChanged = (value) => {\n        console.log(\"inputDateChangeCalled : \",value);\n          this.setState({\n            editedDate: value // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\n            \n          });\n          // this.setState((state)=>{\n          //     let selectedDate = event.target.value;\n          //     return selectedDate\n          //   });\n      }\n\n    saveUpdates = () => {\n\n        this.setState({\n            isOnScreen: !this.state.isOnScreen\n        });\n\n\n        // console.log(\"+++iNPUT TIRE:\",this.tire._id.idInfoToString(),\"=>\", this.tire._id.idInfoToString() );\n       \n        let eskiAdet = this.props.trx.satisAdet;\n        let eskiTotFiyat = this.props.trx.birimFiyat * this.props.trx.satisAdet ;\n        this.props.trx.birimFiyat = Number(document.getElementById(\"edit-modalTrx-birimFiyat\").value);\n        this.props.trx.satisAdet     = Number(document.getElementById(\"edit-modalTrx-satisAdet\").value);\n        //this.props.trx.tarih        = document.getElementById(\"edit-modalTrx-tarih\").value; -- ? Not working\n        this.props.trx.tarih        = this.state.editedDate ;\n        console.log(\"-i- saveUpdates@ModalEditTrxSatis: new trx: \", this.props.trx);\n        \n        this.props.editFunc(this.props.trx,eskiAdet, eskiTotFiyat  );\n    }\n\n   \n     \n    render(){\n       // const _birimFiyat = this.props.trx.birimFiyat;\n        \n        return (\n            // console.log(\"<<<<<<<<\", tire);\n            <Modal\n                className=\"modal-dialog-centered\"\n                 isOpen={this.state.isOnScreen}\n                // toggle={() => this.toggleModal()}\n            >\n                <div className=\"modal-header\">\n                    <h3 className=\"modal-title\" id=\"modal-title-default\">\n                    {this.props.title}\n                    </h3>\n                    <button\n                    aria-label=\"Close\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    type=\"button\"\n                    onClick={() => this.toggleModal()}\n                    >\n                    <span aria-hidden={true}>×</span>\n                    </button>\n                    \n                </div>\n                \n                <div className=\"modal-body\">\n                {/* <hr className=\"my-4\" /> */}\n                <Form>\n                    \n                    \n                    <FormGroup row>\n                        {/* <Col sm=\"6\"> */}\n                        <Col sm=\"6\">    \n                            <label htmlFor=\"edit-modalTrx-birimFiyat\"\n                                className=\"form-control-label\"\n                                sm=\"2\"\n                            >\n                             Birim Fiyatı (KDV Dahil) \n                            </label>\n                            <Input type=\"number\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modalTrx-birimFiyat\"\n                                    placeholder={this.state.birimFiyat}\n                                    value={this.state.birimFiyat}\n                                    onChange={this.numInputChanged}\n                            />\n                        </Col>\n                         <Col lg=\"6\">\n                            <label htmlFor=\"edit-modalTrx-satisAdet\"\n                                className=\"form-control-label\"\n                                sm=\"2\"\n                            >\n                                Adet\n                            </label>\n                        {/* </Col>         */}\n                \n                            <Input type=\"number\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modalTrx-satisAdet\"\n                                    min=\"1\"\n                                    max={this.state.stokAdeti}\n                                    placeholder={this.state.satisAdet}\n                                    value={this.state.satisAdet}\n                                    onChange={this.numInputChanged}\n                            />\n                        </Col>\n                        \n                        </FormGroup>\n\n                        <FormGroup row className=\"justify-content-md-center\">\n                        <Col sm=\"12\">\n                        <label htmlFor=\"edit-modalTrx-tarih\"\n                            className=\"form-control-label\"\n                            sm=\"3\"\n                            >\n                            Tarih\n                        </label>\n                        \n                            <Datepicker \n                                id=\"edit-modalTrx-tarih\"\n                                className=\"form-control-alternative\"\n                                placeholder = {this.props.trx.tarih}\n                                // defaultValue={new Date()}                          \n                                value={this.state.editedDate}\n                                onChange={this.dateChanged}\n                            />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col className=\"text-left\">              \n                            <Button className=\"ml-auto\"\n                                    color=\"danger\"\n                                    data-dismiss=\"modal\"\n                                    type=\"button\"\n                                    onClick={() => this.toggleModal()}\n                            >\n                                Vazgeç\n                            </Button>  \n                        </Col> \n                        <Col className =\"text-right\" sm=\"9\">\n                            \n                            <Button color=\"primary\" \n                                    type=\"button\"\n                                    onClick={ () => this.saveUpdates() }    \n                                >\n                                Değişiklikleri Kaydet\n                            </Button>\n                        \n                        </Col>\n                    </FormGroup>       \n                   \n                </Form>\n            </div>\n\n            </Modal>\n            );\n        }\n    }","import React, {Component} from 'react';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Container,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    FormGroup,\n    Input,\n    Media,\n    Row,\n    UncontrolledDropdown,\n    UncontrolledTooltip,\n    Table\n} from \"reactstrap\";\n\nimport ModalTrxDelConfirm from \"./ModalTrxDelConfirm\";\nimport Tire from \"../../Tire.js\";\nimport ModalEditTrxSatis from './ModalEditTrxSatis';\n\n\nexport default class SatisDataTable extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            columnTitles : props.columnTitles\n            \n\n        }\n    }\n    componentDidMount(){\n        console.log(\"DataTable componentDidMount\");\n        console.log(\"Column headers: \", this.props.isEditModalVisible);\n \n    }\n\n    addMarkaFilter = (event) => {\n\n        console.log(\"addFilter@SatisDataTable event: \", event.currentTarget.textContent,);\n\n        this.props.filterFunc({marka: event.currentTarget.textContent});\n    }\n\n    addTarihFilter = (event) => {\n\n        console.log(\"addFilter@SatisDataTable event: \", event.currentTarget.textContent,);\n\n        this.props.filterFunc({tarih: event.currentTarget.textContent});\n    }\n\n    renderColumnTitles = () => {\n      \n      \n        return this.state.columnTitles.map( (item,index)=>{\n              var filterIcon;\n               console.log(index,item,this.props.filter);\n               let thKey = \"thColHdr\"+index;\n               let filterId = \"iFilterId\"+index;\n               switch (item) {\n                 case \"Marka\":\n                    if (this.props.filter.marka){\n                        filterIcon = 'fas fa-filter text-green';  \n                    }else{\n                        filterIcon = 'fas fa-filter';  \n                    }\n                    return (<th scope=\"col\" key={thKey} >{item}\n\n                              <UncontrolledDropdown direction=\"right\">\n                                <DropdownToggle className=\"pr-0\" nav>\n                                  <i className={filterIcon} id={filterId} /> \n                                </DropdownToggle>\n                                <DropdownMenu className=\"dropdown-menu-arrow\">\n                                  { this.renderMarkaFilterOptions()}\n                                  { this.props.filter.marka && \n                                      <DropdownItem divider /> \n                                  }\n                                  { this.props.filter.marka && \n                                      <DropdownItem key=\"removeFilter\" onClick={this.addMarkaFilter}>\n                                        <span>Filtreyi Kaldır</span>\n                                      </DropdownItem>\n                                  }\n                                  </DropdownMenu>  \n                              </UncontrolledDropdown>\n                              </th>) ;\n                 case \"Tarih\":\n                    if (this.props.filter.tarih){\n                      filterIcon = 'fas fa-filter text-green';  \n                    }else{\n                      filterIcon = 'fas fa-filter';  \n                    }\n                    return (<th scope=\"col\" key={thKey} >{item}\n                              <UncontrolledDropdown direction=\"right\">\n                                <DropdownToggle className=\"pr-0\" nav>\n                                  <i className={filterIcon} id={filterId} /> \n                                </DropdownToggle>\n                                <DropdownMenu className=\"dropdown-menu-arrow\">\n                                  { this.renderTarihFilterOptions() }                          \n                                  { this.props.filter.tarih && \n                                      <DropdownItem divider /> \n                                  }\n                                  { this.props.filter.tarih && \n                                      \n                                      <DropdownItem key=\"removeFilter-tarih\" onClick={this.addTarihFilter}>\n                                          <span>Filtreyi Kaldır</span>\n                                      </DropdownItem>\n                                  }\n                                </DropdownMenu>  \n                              </UncontrolledDropdown>\n                            </th>) ;\n                 default:\n                 return (<th scope=\"col\" key={thKey} >{item}</th>) ;\n               }\n           \n             \n            \n\n          });\n    }\n\n    renderMarkaFilterOptions(){\n        return this.props.markaFilterOptions.map(element => {\n            return (\n              // <DropdownItem onClick={() => this.toggleModal(\"modalEditTire\")}>\n              <DropdownItem key={element} onClick={this.addMarkaFilter}>\n                            <span>{element}</span>\n              </DropdownItem>\n            )\n        });\n    }\n\n    renderTarihFilterOptions(){\n      return this.props.tarihFilterOptions.map(element => {\n          return (\n            // <DropdownItem onClick={() => this.toggleModal(\"modalEditTire\")}>\n            <DropdownItem key={element} onClick={this.addTarihFilter}>\n                          <span>{element}</span>\n            </DropdownItem>\n          )\n      });\n    }\n   \n\n    // renderRows = () => {\n    renderRows(){\n        \n        return this.props.data.map((item, index) => {\n            let tireTemp = new Tire(item);\n            let deleteConfirmQstn =\"Yukarda belirtilen satış işlemini envanterden silmek üzeresiniz.\\nOnaylıyor musunuz?\"\n            let saleTrx = item ;\n\n            const { _id,owner_id,marka,model,taban,oran,jant,yukEndeksi,hizEndeksi,yanakYapisi,mevsim,diger,tarih,satisAdet,birimFiyat } = item; //destructuring\n            const dbRowId = _id;\n            const ebat = String(taban).concat(\" / \").concat(String(oran))\n                            .concat(\" / \").concat(jant)\n                                .concat(\" / \").concat(yukEndeksi)\n                                .concat(\" / \").concat(hizEndeksi);\n\n            const tooltipID = \"tooltip\".concat(_id.toString());\n            const rowId = \"r\".concat(_id.toString());\n            const otherInfo = \"Yanak: \".concat(yanakYapisi).concat(\n                                \"\\n\\t\\t  Mevsim: \".concat(mevsim).concat(\n                                \"\\n\\t Diğer: \".concat(diger)));\n            \n                                console.log(\"otherinfi:\",otherInfo);\n\n            const deleteModalTitle = tireTemp.mainInfo() + \" için, \\n\" + \n                                    tarih + \" tarihinde\\n\"  +\n                                    birimFiyat+\"₺ fiyatından\\n\" +\n                                    satisAdet+ \" adet satış işlemi\"\n\n            const editPopupTitle = marka.concat(\" \").concat(model).concat(\" - \").concat(ebat);\n            \n            var infoIcon = 'fas fa-info-circle text-info';\n            var settingsIcon = 'ni ni-settings text-info';\n            var ebatIcon = 'fas fa-car-side text-info';\n            const editModalValues =[birimFiyat,satisAdet,tarih];\n            \n                                        \n            \n            return (\n            <tr key={rowId}>\n              <th scope=\"row\">\n                <Media className=\"align-items-center\">\n                  <a\n                    className=\"avatar rounded-circle mr-3\"\n                    href=\"#pablo\"\n                    onClick={e => e.preventDefault()}\n                  >\n                        <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/sketch.jpg\")}\n                    />\n                  </a>\n                  <Media>\n                    <span className=\"mb-0 text-sm\">\n                      {marka}\n                    </span>\n                  </Media>\n                </Media>\n              </th>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {model}\n                </span>\n              </td>\n              <td>\n                  <i className={ebatIcon} /> {ebat}\n              </td>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {tarih}\n                </span>\n              </td>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {satisAdet}\n                </span>\n              </td>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {birimFiyat}\n                </span>\n              </td>\n              <td className=\"text-right\">\n              <span>\n                <i className={infoIcon} id={tooltipID} /> \n                  <UncontrolledTooltip\n                    delay={0}\n                    target={tooltipID}\n                  >\n                    {otherInfo}\n                  </UncontrolledTooltip>\n              </span>\n              <UncontrolledDropdown direction=\"left\">\n                  <DropdownToggle className=\"pr-0\" nav>\n                    <i className={settingsIcon} /> \n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-menu-arrow\">\n                    <DropdownItem className=\"noti-title\" header tag=\"div\">\n                      <h6 className=\"text-overflow m-0\">{editPopupTitle}</h6>\n                    </DropdownItem>\n                    <DropdownItem divider />\n\n                    <DropdownItem onClick={() => this.props.toggleFunc(\"modalEditSale\")}>\n                      <i className=\"fas fa-edit\" />\n                      <span>Düzenle</span>\n                      <ModalEditTrxSatis\n                        title={tireTemp.mainInfo()}\n                        tire={tireTemp}\n                        modalStateName={this.props.editModalStateName}\n                        isOpen={this.props.isEditModalVisible}\n                        toggleFunc={this.props.toggleFunc}\n                        editFunc={this.props.editFunc}\n                        trx={saleTrx}\n                        maxAdet={this.props.maxAdet}\n                        />\n\n                      \n                    \n\n                    </DropdownItem>\n                    <DropdownItem onClick={() => this.props.toggleFunc(\"modalDeleteSale\")}>\n                      <i className=\"fas fa-trash-alt\"/>\n                      <span>Sil</span> \n                      <ModalTrxDelConfirm headerTitle=\"Dikkat!\" \n                                          mainTitle={deleteModalTitle}\n                                          confirmButtonName=\"Onaylıyorum, sil.\"\n                                          question={deleteConfirmQstn}\n                                          isOpen={this.props.isConfirmModalVisible}\n                                          modalStateName={this.props.deleteModalStateName}\n                                          toggleFunc={this.props.toggleFunc}\n                                          confirmFunc={this.props.confirmFunc}\n                                          id={dbRowId}\n                      />\n\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </td> \n            </tr>\n            )\n        })\n    };\n\n\n    render(){\n        return (\n                <Card className=\"bg-default shadow\">\n                {/* <Container className=\"mt--7\" fluid> */}\n                \n                    <CardHeader className=\"bg-transparent border-0\">\n                      <h3 className=\"text-white mb-0\">{this.props.mainTitle}</h3>\n                    </CardHeader>\n                        <Table\n                        className=\"align-items-center table-dark table-flush\"\n                        responsive\n                        >\n                        <thead className=\"thead-dark\">\n                            <tr>\n                            {this.renderColumnTitles()}\n                            \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.renderRows()} \n                        </tbody>\n                    </Table>\n                </Card>\n       \n        );\n    }\n}","/*!\n\n\n! maxAdet guncellenmiyor stok eksiye dusuyr\n\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react component that copies the given text inside your clipboard\n//import { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Form,\n\n  FormGroup,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row,\n  Col,\n\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\nimport Datepicker from \"../../Datepicker.jsx\";\nimport SatisDataTable from \"./SatisDataTable.jsx\";\n\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\";\n//import { noop } from \"@babel/types\";\n//import { thisTypeAnnotation } from \"@babel/types\";\n//import { eventNames } from \"cluster\";\nimport 'moment';\nimport { couldStartTrivia, getDefaultLibFileName } from \"typescript\";\n/***********************************************************************/\n/* DB STUFF */\n//const client = Stitch.initializeDefaultAppClient(\"lastikpark-ogewz\");\nconst client = Stitch.getAppClient(\"lastikpark-ogewz\");\nconst mongodb = client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n);\n\nconst db = mongodb.db(\"lastikParkDB\");\n\nclient.auth.loginWithCredential(new AnonymousCredential()).then(user => {\n  console.log(`Logged in as anonymous user with id: ${user.id}`);\n}).catch(console.error);\n/***********************************************************************/\n/* Formatting Currency */\nvar formatTRY = new Intl.NumberFormat('tr-TR', {\n    style: 'currency',\n    currency: 'TRY',\n    minimumFractionDigits: 2,\n  });\n\nvar currency_symbol = \"₺\"\n\nclass Satis extends React.Component {\n  constructor(props) {\n    super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n    this.state = {\n         tireSelected : {}\n        ,queryResulted1 : false\n        ,definedBrands : []\n        ,modelsForTheBrand : []\n        ,tabansForSelection : []\n        ,oransForSelection : []\n        ,jantsForSelection : []\n        ,yukEndeksForSelection : []\n        ,hizEndeksForSelection :[]\n        ,yanaksForSelection : []\n        ,mevsimsForSelection : []\n        ,otherInfo: []\n        ,sales : []\n        \n        ,selectedBrand : \"\"\n        ,selectedModel : \"\"\n        ,selectedTaban : \"\"\n        ,selectedOran : \"\"\n        ,selectedJant : \"\"\n        ,selectedYuk : \"\"\n        ,selectedHiz : \"\"\n        ,selectedYanak : \"\"\n        ,selectedMevsim : \"\"\n        ,selectedOther : \"\"\n        ,selectedDate : \"\"\n        ,birimFiyat : \"\" \n        ,satisAdet : \"\"\n        ,toplamFiyat :\"\"\n        ,saveButtonPressed : false\n\n        //Modals:\n        ,modalDeleteSale : false\n        ,modalEditSale : false\n\n        //Filters\n        ,filterArrayMarka : []\n        ,filterArrayTarih : []\n        ,filterApplied : {}\n\n        ,ortMaliyet: \"\"\n        ,karOrani : \"\"\n        ,stokAdeti : 0\n        ,ortFiyat : \"\"\n        ,ortKarOrani : \"\"\n\n\n    }\n    \n    //let definedBrands = [];\n    // const editableFields = [{label: \"Birim Maliyet(KDV Dahil)\", type=\"number\",mapsTo: \"birimFiyat\" },\n    //                         {label: \"Adet\", type : \"number\", mapsTo: \"satisAdet\"},\n    //                         {label: \"Tarih\", type : \"date\", mapsTo: \"tarih\" } ];\n  }\n  \n\n  componentWillMount(){\n      db.collection(\"purchaseCollection\").find().toArray().then(dbResults => {\n        \n            console.log(\"will DB Results:\",dbResults);\n            \n            //prepare Options\n            let distinctMarkaValues = [...new Set(dbResults.map( value => value.marka))].sort();\n            let distinctModelValues = [...new Set(dbResults.map( value => value.model))].sort();\n            let distinctTabanValues = [...new Set(dbResults.map( value => value.taban))].sort();\n            let distinctOranValues = [...new Set(dbResults.map( value => value.oran))].sort();\n            let distinctJantValues = [...new Set(dbResults.map( value => value.jant))].sort();\n            let distinctYukValues = [...new Set(dbResults.map( value => value.yukEndeksi))].sort();\n            let distinctHizValues = [...new Set(dbResults.map( value => value.hizEndeksi))].sort();\n            let distinctYanakValues = [...new Set(dbResults.map( value => value.yanakYapisi))].sort();\n            let distinctMevsimValues = [...new Set(dbResults.map( value => value.mevsim))].sort();\n            let distinctDigerValues = [...new Set(dbResults.map( value => value.diger))].sort();\n    \n           \n            this.setState({ definedBrands : distinctMarkaValues ,\n                            modelsForTheBrand : distinctModelValues ,\n                            tabansForSelection : distinctTabanValues ,\n                            oransForSelection : distinctOranValues ,\n                            jantsForSelection : distinctJantValues ,\n                            yukEndeksForSelection : distinctYukValues ,\n                            hizEndeksForSelection : distinctHizValues ,\n                            yanaksForSelection : distinctYanakValues,\n                            mevsimsForSelection : distinctMevsimValues,\n                            otherInfo : distinctDigerValues           \n            });\n        })\n        .catch(console.error);\n\n        db.collection(\"salesCollection\").find().toArray().then(dbResults => {\n        \n          console.log(\"will DB Results:\",dbResults);\n          \n          //prepare Options\n          let distinctFilterMarkaValues = [...new Set(dbResults.map(value => value.marka))].sort();\n          let distinctFilterTarihValues = [...new Set(dbResults.map(value => value.tarih))].sort();\n  \n         \n          this.setState({ filterArrayMarka : distinctFilterMarkaValues\n                         ,filterArrayTarih : distinctFilterTarihValues       \n          });\n        })\n        .catch(console.error);\n\n        \n\n        this.refreshSalesTable(this.state.filterApplied);\n\n      \n            \n  }\n  \n\n\n\n\n\n  adetChanged = (event) => {\n    \n\n    let birimFiyat = this.state.birimFiyat;\n    let toplamFiyat = birimFiyat * event.target.value;\n    let birimKdvsiz = birimFiyat / 1.18 ;\n    let toplamKdvsiz = toplamFiyat / 1.18 ;\n    let _satisAdet;\n    \n    \n\n    if ( 0 <= event.target.value && event.target.value <= this.state.stokAdeti){\n        _satisAdet = event.target.value ;\n    }else if ( event.target.value > this.state.stokAdeti ){\n        _satisAdet = this.state.stokAdeti;\n    }else{\n        _satisAdet = 0 ;\n    }\n    \n    if(isNaN(event.target.value)) {\n      _satisAdet = 0;\n    }\n    \n    document.getElementById(\"satis-birim-fiyat-kdvsiz\").value = ((Number.isNaN(birimKdvsiz)) ? \"\" : formatTRY.format(birimKdvsiz) ) ;\n    document.getElementById(\"satis-toplam-fiyat-kdvsiz\").value = ((Number.isNaN(toplamKdvsiz)) ? \"\" : formatTRY.format(toplamKdvsiz) ) ;\n    this.setState({satisAdet: _satisAdet,toplamFiyat: toplamFiyat});\n\n  }\n\n  inputBirimChanged = (event) => {\n      let toplamFiyat;\n      let birimFiyat = event.target.value;\n      let karOrani, ortMaliyet;\n      \n      this.setState( (state) => {\n        \n          toplamFiyat = state.toplamFiyat;\n          ortMaliyet = parseInt(state.ortMaliyet);\n          if (birimFiyat === \"\") {\n              toplamFiyat = \"\";\n              karOrani = String(\"% -\")\n          }else{\n              if ( state.satisAdet > 0 ) {\n                  toplamFiyat = birimFiyat * state.satisAdet ;\n              }else{\n                  toplamFiyat = \"\";\n              }\n              if (ortMaliyet !== \"\"){\n                karOrani = ((birimFiyat - ortMaliyet) / ortMaliyet * 100).toFixed(2) ;\n                karOrani = String(\"% \").concat(karOrani);\n              \n              }\n          }\n        \n\n          let birimKdvsiz = birimFiyat / 1.18 ;\n          let toplamKdvsiz = toplamFiyat / 1.18 ;\n\n\n          document.getElementById(\"satis-birim-fiyat-kdvsiz\").value = ((Number.isNaN(birimKdvsiz)) ? \"\" : formatTRY.format(birimKdvsiz) ) ;\n          document.getElementById(\"satis-toplam-fiyat-kdvsiz\").value = ((Number.isNaN(toplamKdvsiz)) ? \"\" : formatTRY.format(toplamKdvsiz) ) ;\n          \n          return { birimFiyat,toplamFiyat,karOrani };\n\n     }); \n  }\n\n  inputToplamChanged = (event) => {\n    let birimFiyat;\n    let toplamFiyat = event.target.value;\n    \n    this.setState((state) => {\n        birimFiyat = state.birimFiyat;\n        if (toplamFiyat === \"\"){\n            birimFiyat = \"\";\n        }else{\n            if (state.satisAdet > 0 ) {\n                birimFiyat = toplamFiyat / state.satisAdet ;\n            }else{\n              birimFiyat = \"\";\n            }\n        }\n\n        \n        let birimKdvsiz = formatTRY.format(birimFiyat / 1.18 );\n        let toplamKdvsiz = formatTRY.format(toplamFiyat / 1.18 );\n\n        document.getElementById(\"satis-birim-fiyat-kdvsiz\").value = (Number.isNaN(birimKdvsiz) ? \"\" : birimKdvsiz );\n        document.getElementById(\"satis-toplam-fiyat-kdvsiz\").value = (Number.isNaN(toplamKdvsiz) ? \"\" : toplamKdvsiz );\n        return { birimFiyat,toplamFiyat };\n    });\n      \n  }\n\n  inputDateChanged = (value) => {\n    console.log(\"inputDateChangeCalled : \",value);\n      this.setState({\n        selectedDate: value // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\n        \n      });\n      // this.setState((state)=>{\n      //     let selectedDate = event.target.value;\n      //     return selectedDate\n      //   });\n  }\n\n\n\n  inputSetCorrectlyFor = (inputField) => {\n      let decision = true;\n      // inputField = inputField.substring(5);\n      if (this.state.saveButtonPressed){\n        switch (inputField) {\n          case \"marka\":\n              decision = (this.state.selectedBrand === \"\") ? false : true ;\n            break;\n          case \"model\":\n              decision = (this.state.selectedModel === \"\") ? false : true ;\n            break;\n          case \"taban\":\n              decision = (this.state.selectedTaban === \"\") ? false : true ;\n            break;\n          case \"oran\":\n              decision = (this.state.selectedOran === \"\") ? false : true ;\n            break;\n          case \"jant\":\n              decision = (this.state.selectedJant === \"\") ? false : true ;\n            break;\n          case \"yuk\":\n              decision = (this.state.selectedYuk === \"\") ? false : true ;\n            break;\n          case \"hiz\":\n              decision = (this.state.selectedHiz === \"\") ? false : true ;\n            break;\n          case \"yanak\":\n              decision = (this.state.selectedYanak === \"\") ? false : true ;\n            break;\n          case \"mevsim\":\n              decision = (this.state.selectedMevsim === \"\") ? false : true ;\n            break;\n          case \"diger\":\n              decision = (this.state.selectedOther === \"\") ? false : true ;\n            break;\n          case \"birim\":\n            decision = (this.state.birimFiyat === \"\" || this.state.birimFiyat == 0 ) ? false : true ;\n            break;\n          case \"adet\":\n            decision = (this.state.satisAdet === \"\" || this.state.satisAdet == 0 ) ? false : true ;\n            break;\n          case \"toplam\":\n            decision = (this.state.toplamFiyat === \"\" || this.state.toplamFiyat == 0 ) ? false : true ;\n            break;\n          default:\n            break;\n        }\n      }\n      return decision;\n   }\n\n  allInputsSetCorrectly = () => {\n\n      let setCorrect = true ;\n      let tempArray = [];\n      if (this.state.selectedBrand === \"\"){\n          tempArray.push(\"Marka\");\n          setCorrect = false;\n          \n      }\n      if (this.state.selectedModel === \"\" ){\n          tempArray.push(\"Desen\");\n          setCorrect = false;\n      }\n      if (this.state.selectedTaban === \"\" ){\n          tempArray.push(\"Taban\");\n          setCorrect = false;\n      }\n      if (this.state.selectedOran === \"\" ){\n          tempArray.push(\"Oran\");\n          setCorrect = false;\n      }\n      if (this.state.selectedJant === \"\" ) {\n          tempArray.push(\"Jant\");\n          setCorrect = false;\n      }\n      if (this.state.selectedYuk === \"\"  ){\n         tempArray.push(\"Yuk Endeksi\");\n         setCorrect = false;\n      } \n      if (this.state.selectedHiz === \"\"  ){\n          tempArray.push(\"Hız Endeksi\");\n          setCorrect = false;\n      }\n      if (this.state.selectedYanak === \"\" ){\n          tempArray.push(\"Yanak\");\n          setCorrect = false;\n      }\n      if (this.state.selectedMevsim === \"\" ){\n          tempArray.push(\"Mevsim\");\n          setCorrect = false;\n      }\n      if (this.state.selectedOther === \"\" ){\n          tempArray.push(\"Diğer\");\n          setCorrect = false;\n      }\n      if (this.state.birimFiyat === \"\"  || this.state.birimFiyat == 0){\n          tempArray.push(\"Birim-fiyat\");\n          setCorrect = false;\n      }\n      if (this.state.satisAdet === \"\" || this.state.satisAdet == 0){\n          tempArray.push(\"Adet\");\n          setCorrect = false;\n      }\n      if (this.state.toplamFiyat === \"\" || this.state.toplamFiyat == 0 ){\n          tempArray.push(\"Toplam-fiyat\");\n          setCorrect = false;\n      }\n\n\n      this.setState({saveButtonPressed : true,wrongInputs: tempArray});\n      \n\n      return setCorrect;\n  }\n\n  saveSale = () => {\n\n      if ( this.allInputsSetCorrectly() ) {\n          let _marka = this.state.selectedBrand ;\n          let _model = this.state.selectedModel ;\n          let _taban = Number(this.state.selectedTaban);\n          let _oran = Number(this.state.selectedOran);\n          let _jant = this.state.selectedJant ;\n          let _yukEndeksi = Number(this.state.selectedYuk) ;\n          let _hizEndeksi = this.state.selectedHiz ;\n          let _yanakYapisi = this.state.selectedYanak ;\n          let _mevsim = this.state.selectedMevsim ;\n          let _diger = this.state.selectedOther;\n          let _birimFiyat = Number(this.state.birimFiyat);\n          let _satisAdet = Number(this.state.satisAdet);\n          let _tarih ;\n          if (this.state.selectedDate === \"\" ){\n              let today = new Date();\n              let dd = String(today.getDate()).padStart(2, '0');\n              let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n              let yyyy = today.getFullYear();\n              _tarih = dd + '/' + mm + '/' + yyyy;\n          }else{\n              _tarih = this.state.selectedDate;\n          }\n          db.collection(\"salesCollection\")\n            .insertOne({\n              owner_id: client.auth.user.id,\n              marka: _marka,\n              model: _model,\n              taban: _taban,\n              oran: _oran,\n              jant: _jant,\n              yukEndeksi: _yukEndeksi,\n              hizEndeksi: _hizEndeksi,\n              yanakYapisi: _yanakYapisi,\n              mevsim: _mevsim,\n              diger: _diger ,\n              tarih : _tarih ,\n              satisAdet : _satisAdet ,\n              birimFiyat : _birimFiyat     \n            })\n            .then(remoteResult => {\n                console.log(\"Insert done with id:\",remoteResult.insertedId);\n                this.setState({saveButtonPressed: false});\n                this.refreshSalesTable(this.state.filterApplied); \n          }).catch(\n              //console.error\n                // this.displayError(console.error)\n                //console.log(err.message);\n                alert(console.error)\n                // console.log(error.message);\n                // this.setState({modalError: true,errorMsg : error.message});\n                //     );\n            );\n            let tireSold = {\n                \"owner_id\" : client.auth.user.id , //tire.owner_id = client.auth.user.id\n                \"marka\" : _marka ,\n                \"model\" : _model ,\n                \"taban\" : _taban ,\n                \"oran\"  : _oran ,\n                \"jant\"  : _jant ,\n                \"yukEndeksi\" : _yukEndeksi ,\n                \"hizEndeksi\" : _hizEndeksi ,\n                \"yanakYapisi\": _yanakYapisi ,\n                \"mevsim\": _mevsim ,\n                \"diger\" : _diger\n            };\n            this.updateStockWithSale(tireSold,_birimFiyat,_satisAdet);\n          \n      }\n      else{\n        // this.setState({saveButtonPressed:false});\n        alert(\"Eksik bilgi girişi yaptınız. Lütfen giriş yapmadığınız kırmızı ile işaretlenmiş alanları doldurun.\" ); \n        // if (this.state.wrongInputs.length === 0 ) {\n        //   alert(\"Eksik bilgi girişi yaptınız. Lütfen giriş yapmadığınız şu alanları doldurun: \" + errorText );\n        // }else{\n        //   let errorText;\n        //   this.state.wrongInputs.forEach( (item,index) =>{\n        //         debugger;\n        //           if (index === 0){\n        //             errorText = item.substring(5);\n        //           }else{\n        //               errorText += \", \" + item.substring(5);\n        //           }\n        //         });\n        //   alert(\"Eksik bilgi girişi yaptınız. Lütfen giriş yapmadığınız şu alanları doldurun: \" + errorText );\n        // }\n          \n      }\n\n    \n  }\n\n\n  \n  updateStockWithSale = (tire,fiyat,count) => {\n      db.collection(\"stockCollection\").find(tire).toArray().then(dbResults => {\n         // if (dbResults.length > 0){\n              console.log(\"Stok:Tire found: \",dbResults);\n              let tireReturned = dbResults[0];\n              let newOrtFiyat = ((tireReturned.ortFiyat * tireReturned.satisAdet) + (fiyat * count)) / (tireReturned.satisAdet + count); \n              tireReturned.ortFiyat = newOrtFiyat ;\n              tireReturned.satisAdet = tireReturned.satisAdet + count;\n              tireReturned.stokAdet = tireReturned.stokAdet - count;\n\n              db.collection(\"stockCollection\")\n              .findOneAndReplace(tire,tireReturned).then(DocumentT => {\n\n                console.log(\"Updated document: \", DocumentT);\n                alert(\"stock table: Updated!!\");\n                this.setState({stokAdeti : tireReturned.stokAdet});\n              }).catch(console.error);\n          // }\n          // else{\n          //     console.log(\"Stok Lastik bulunamadi:\");\n              \n          //     tire.stokAdet = count ;\n          //     tire.ortFiyat = fiyat;\n          //     db.collection(\"stockCollection\")\n          //     .insertOne(tire)\n          //     .then(remoteResult => {\n          //         console.log(\"Insert done with id:\",remoteResult.insertedId);\n                 \n                 \n          //   }).catch(\n          //     console.error\n          //   );\n          //}\n      })\n      .catch(\n        console.error\n      );\n\n      //UPSERT:\n      // db.collection(\"stockCollection\").findOneAndUpdate(tire,{ $inc:{stokAdet: count} }, {upsert:true})\n      // .then(dbResults => {\n      //     debugger;\n      //     console.log(\"UPSERT COMPLETED:\", dbResults);\n      //     console.log(\"Insert done with id:\",dbResults.insertedId);\n      // })\n      // .catch(console.error);\n  }\n\n  editSale = (editedTrx,eskiAdet,eskiTotFiyat) => {\n\n      delete editedTrx.stokAdeti;\n      db.collection(\"salesCollection\")\n      .findOneAndReplace({ _id: editedTrx._id },editedTrx).then(DocumentX => {\n        console.log(\"Updated document after editingSale: \", DocumentX);\n\n        console.log(editedTrx);\n\n        let stockTire2beUpdated = {\n          \"marka\" : DocumentX.marka ,\n          \"model\" : DocumentX.model ,\n          \"taban\" : DocumentX.taban ,\n          \"oran\"  : DocumentX.oran ,\n          \"jant\"  : DocumentX.jant ,\n          \"yukEndeksi\" : DocumentX.yukEndeksi ,\n          \"hizEndeksi\" : DocumentX.hizEndeksi ,\n          \"yanakYapisi\": DocumentX.yanakYapisi ,\n          \"mevsim\": DocumentX.mevsim ,\n          \"diger\" : DocumentX.diger\n        };\n        console.log(stockTire2beUpdated);\n        \n        \n        db.collection(\"stockCollection\").findOne(stockTire2beUpdated).then( DocumentT =>{\n          \n          //Lastigi buldun simdi stok tablosunu guncelle\n          if (DocumentT.satisAdet - eskiAdet + editedTrx.satisAdet !== 0 ){ \n              DocumentT.ortFiyat = ((DocumentT.ortFiyat * DocumentT.satisAdet) - eskiTotFiyat + (editedTrx.birimFiyat * editedTrx.satisAdet) ) / (DocumentT.satisAdet - eskiAdet + editedTrx.satisAdet); \n          }else{\n              DocumentT.ortFiyat = 0;\n          }\n          DocumentT.satisAdet = DocumentT.satisAdet - eskiAdet + editedTrx.satisAdet ;\n          DocumentT.stokAdet = DocumentT.stokAdet + eskiAdet - editedTrx.satisAdet ;\n          \n          db.collection(\"stockCollection\")\n          .findOneAndReplace(stockTire2beUpdated,DocumentT).then(DocumentU => {\n\n            console.log(\"Updated document afterPurchase change: \", DocumentU);\n            alert(\"stock table: Updated after Purchase Change!!\");\n          }).catch(console.error);\n\n        }\n        ).catch(console.error);\n        this.setState({modalEditSale: false});\n        \n        this.refreshSalesTable(this.state.filterApplied);\n      }).catch(console.error);\n\n\n  }\n\n  deleteSale = (id) => {\n      // let {_id} = tire;\n      \n        \n      console.log(\"Tirewith id '\",id.toString(),\"'will be deleted from database.\");\n      \n      \n\n      db.collection(\"salesCollection\")\n        .findOneAndDelete(\n          {_id : id}\n        )\n      .then(DocumentT => {\n        console.log(\"Deleted document: \", DocumentT);\n        let stockTire2beUpdated = {\n          \"marka\" : DocumentT.marka ,\n          \"model\" : DocumentT.model ,\n          \"taban\" : DocumentT.taban ,\n          \"oran\"  : DocumentT.oran ,\n          \"jant\"  : DocumentT.jant ,\n          \"yukEndeksi\" : DocumentT.yukEndeksi ,\n          \"hizEndeksi\" : DocumentT.hizEndeksi ,\n          \"yanakYapisi\": DocumentT.yanakYapisi ,\n          \"mevsim\": DocumentT.mevsim ,\n          \"diger\" : DocumentT.diger\n        };\n        let deletedSaleCost = DocumentT.birimFiyat;\n        let deletedSaleCount = DocumentT.satisAdet;\n\n        db.collection(\"stockCollection\").findOne(stockTire2beUpdated).then( DocumentT =>{\n          console.log(\"deleteSale Method/ DocumentT2beUpdated: \",DocumentT)\n          \n          if ( (DocumentT.satisAdet - deletedSaleCount) !== 0){\n              DocumentT.ortFiyat = ((DocumentT.ortFiyat * DocumentT.satisAdet) - (deletedSaleCost * deletedSaleCount) ) / (DocumentT.satisAdet - deletedSaleCount); \n          }else {\n              DocumentT.ortFiyat = 0;\n          }\n          DocumentT.satisAdet = DocumentT.satisAdet - deletedSaleCount ;\n          DocumentT.stokAdet = DocumentT.stokAdet + deletedSaleCount ;\n          //Lastigi buldun simdi stok tablosunu guncelle\n          \n          \n          db.collection(\"stockCollection\")\n          .findOneAndReplace(stockTire2beUpdated,DocumentT).then(DocumentU => {\n            console.log(\"Updated document afterSale Deletion: \", DocumentU);\n            alert(\"stock table: Updated after Sale Deletion!!\");\n          }).catch(console.error);\n\n        }\n        ).catch(console.error);\n\n        this.setState({modalDeleteSale: false});\n        \n        this.refreshSalesTable(this.state.filterApplied);\n      }).catch(console.error);\n\n  }\n\n  refreshSalesTable = (filter) => {\n      db.collection(\"salesCollection\").find(filter).toArray().then(results => {\n        //console.log(\"TiresArray\",this.state.tires);\n        // let resArry = Object.assign({}, results);\n     \n        results = results.map((item,index)=>{\n           \n            let tireSold = {\n              //\"owner_id\" : item.owner_id , //tire.owner_id = client.auth.user.id\n              \"marka\" : item.marka ,\n              \"model\" : item.model ,\n              \"taban\" : item.taban ,\n              \"oran\"  : item.oran ,\n              \"jant\"  : item.jant ,\n              \"yukEndeksi\" : item.yukEndeksi ,\n              \"hizEndeksi\" : item.hizEndeksi ,\n              \"yanakYapisi\": item.yanakYapisi ,\n              \"mevsim\": item.mevsim ,\n              \"diger\" : item.diger\n            };\n            console.log(tireSold);\n            db.collection(\"stockCollection\").find(tireSold).toArray().then(stokResults => {\n             \n                item.stokAdeti = stokResults[0].stokAdet;\n                console.log(item);\n            })\n            .catch(\n              console.error\n            );\n            \n            return item;\n        });\n        \n        console.log(\"EVET sonucl results:\", results);\n        \n        this.setState( {sales : results})\n\n\n      })\n      .catch(console.error);\n        \n        \n      console.log(\"salesArray\",this.state.sales);\n\n      db.collection(\"salesCollection\").find().toArray().then(dbResults => {\n        \n        console.log(\"will DB Results:\",dbResults);\n        \n        //prepare Options\n        let distinctFilterMarkaValues = [...new Set(dbResults.map(value => value.marka))].sort();\n        let distinctFilterTarihValues = [...new Set(dbResults.map(value => value.tarih))].sort();\n\n       \n        this.setState({ filterArrayMarka : distinctFilterMarkaValues\n                       ,filterArrayTarih : distinctFilterTarihValues       \n        });\n      })\n      .catch(console.error);\n  }\n\n  anOptionSelected = (event) => {\n\n\n      let _selOpt = String(event.target.id).substring(6);\n      let _selVal = event.target.value;\n\n\n      this.setState((state)=> {\n         \n          let queryResulted1 = state.queryResulted1;\n          let selectedBrand = state.selectedBrand;\n          let selectedModel = state.selectedModel;\n          let selectedTaban = state.selectedTaban;\n          let selectedOran = state.selectedOran;\n          let selectedJant = state.selectedJant;\n          let selectedYuk = state.selectedYuk;\n          let selectedHiz = state.selectedHiz;\n          let selectedYanak = state.selectedYanak;\n          let selectedMevsim = state.selectedMevsim;\n          let selectedOther = state.selectedOther;\n\n          if (state.queryResulted1){\n              queryResulted1 = false;\n              selectedBrand = \"\" ;\n              selectedModel = \"\" ;\n              selectedTaban = \"\" ;\n              selectedOran = \"\" ;\n              selectedJant = \"\" ;\n              selectedYuk = \"\" ;\n              selectedHiz = \"\" ;\n              selectedYanak = \"\" ;\n              selectedMevsim = \"\" ;\n              selectedOther = \"\" ;\n          }\n          switch (_selOpt) {\n            case \"marka\":\n                selectedBrand = _selVal;\n              break;\n            case \"model\":\n                selectedModel = _selVal;\n              break;\n            case \"taban\":\n                selectedTaban = _selVal;\n              break;\n            case \"oran\":\n                selectedOran = _selVal;\n              break;\n            case \"jant\":\n                selectedJant = _selVal;\n              break;\n            case \"yuk\":\n                selectedYuk = _selVal;\n              break;\n            case \"hiz\":\n                selectedHiz = _selVal;\n              break;\n            case \"yanak\":\n                selectedYanak = _selVal;\n              break;\n            case \"mevsim\":\n                selectedMevsim = _selVal;\n              break;\n            case \"diger\":\n                selectedOther = _selVal;\n              break;\n          \n            default:\n              break;\n          }\n          return {selectedBrand,selectedModel,selectedTaban,selectedOran,selectedJant,selectedYuk,\n                    selectedHiz,selectedYanak,selectedMevsim,selectedOther,queryResulted1};\n      });\n      \n\n      \n      let queryFilterOptions = this.state.tireSelected;\n      \n      console.log(\"===> OptionSelected Before: \", queryFilterOptions);\n      \n \n      if  ( _selVal.includes(\"Seçin\") ) { \n          delete queryFilterOptions[_selOpt];\n\n      }else {\n            if ( _selOpt === \"taban\" || _selOpt === \"oran\" || _selOpt === \"yuk\" ) { \n              queryFilterOptions[_selOpt] = Number(_selVal);\n            }else{\n              queryFilterOptions[_selOpt] = _selVal;\n            }\n          \n      }\n      \n\n      console.log(\"Filter options after new attribute has been added: \", queryFilterOptions);\n\n      db.collection(\"stockCollection\").find(queryFilterOptions).toArray().then(dbResults => {\n       // debugger;\n        console.log(\"DB Results:\",dbResults);\n\n        let resultCount = dbResults.length;\n        //this.definedBrands = dbResults.map( value => value.marka);\n        if ( resultCount == 1) {\n            let tire = dbResults[0];\n            let gnlKarOrani = (tire.satisAdet !== 0) ? ((tire.ortFiyat - tire.ortMaliyet) / tire.ortMaliyet * 100).toFixed(2) : String(\"-\") ;\n            gnlKarOrani = String(\"% \").concat(gnlKarOrani);\n            tire.ortMaliyet = (Number.isInteger(tire.ortMaliyet) ? String(tire.ortMaliyet).concat(\" ₺\") : String(tire.ortMaliyet.toFixed(2)).concat(\" ₺\"));\n            tire.ortFiyat = (Number.isInteger(tire.ortFiyat) ? String(tire.ortFiyat).concat(\" ₺\") : String(tire.ortFiyat.toFixed(2)).concat(\" ₺\"));\n\n            //tire.ortMaliyet = \"₺\"\n            this.setState(\n              {         \n                        tireSelected : {} \n                       ,queryResulted1 : true\n                       ,selectedBrand : tire.marka\n                       ,selectedModel : tire.model\n                       ,selectedTaban : tire.taban\n                       ,selectedOran : tire.oran\n                       ,selectedJant : tire.jant\n                       ,selectedYuk : tire.yukEndeksi\n                       ,selectedHiz : tire.hizEndeksi\n                       ,selectedYanak : tire.yanakYapisi\n                       ,selectedMevsim : tire.mevsim\n                       ,selectedOther : tire.diger\n                       ,ortMaliyet : tire.ortMaliyet \n                       ,stokAdeti : tire.stokAdet\n                       ,ortFiyat : tire.ortFiyat\n                       ,ortKarOrani : gnlKarOrani\n\n\n             });\n            //return;\n        }\n        //Calculate the options\n        let uniqueMarkaValues = [...new Set(dbResults.map( value => value.marka))].sort();\n        let uniqueModelValues = [...new Set(dbResults.map( value => value.model))].sort();\n        let uniqueTabanValues = [...new Set(dbResults.map( value => value.taban))].sort();\n        let uniqueOranValues = [...new Set(dbResults.map( value => value.oran))].sort();\n        let uniqueJantValues = [...new Set(dbResults.map( value => value.jant))].sort();\n        let uniqueYukValues = [...new Set(dbResults.map( value => value.yukEndeksi))].sort();\n        let uniqueHizValues = [...new Set(dbResults.map( value => value.hizEndeksi))].sort();  \n        let uniqueYanakValues = [...new Set(dbResults.map( value => value.yanakYapisi))].sort();  \n        let uniqueMevsimValues = [...new Set(dbResults.map( value => value.mevsim))].sort();  \n        let uniqueDigerValues = [...new Set(dbResults.map( value => value.diger))].sort();  \n       \n        delete queryFilterOptions[\"_id\"];\n        delete queryFilterOptions[\"owner_id\"];\n\n        this.setState( (state) => {\n           \n            // let selectedBrand = (uniqueMarkaValues.length === 1) ? uniqueMarkaValues[0] : state.selectedBrand ;\n            // let selectedModel = (uniqueModelValues.length === 1) ? uniqueModelValues[0] : state.selectedModel ;\n            // let selectedTaban = (uniqueTabanValues.lenth === 1) ? uniqueTabanValues[0] : state.selectedTaban ;\n            // let selectedOran = (uniqueOranValues.length === 1) ? uniqueOranValues[0] : state.selectedOran ;\n            // let selectedJant = (uniqueJantValues.length === 1) ? uniqueJantValues[0] : state.selectedJant ;\n            // let selectedYuk = (uniqueYukValues.length === 1) ? uniqueYukValues[0] : state.selectedYuk ;\n            // let selectedHiz = (uniqueHizValues.length === 1) ? uniqueHizValues[0] : state.selectedHiz ;\n            // let selectedYanak = (uniqueYanakValues.length === 1) ? uniqueYanakValues[0] : state.selectedYanak ;\n            // let selectedMevsim = (uniqueMevsimValues.length === 1) ? uniqueMevsimValues[0] : state.selectedMevsim ;\n            // let selectedOther = (uniqueDigerValues.length === 1) ? uniqueDigerValues[0] : state.selectedOther ;\n\n            let definedBrands = state.definedBrands;\n            let modelsForTheBrand = state.modelsForTheBrand;\n            let tabansForSelection = state.tabansForSelection;\n            let oransForSelection = state.oransForSelection;\n            let jantsForSelection = state.jantsForSelection;\n            let yukEndeksForSelection = state.yukEndeksForSelection;\n            let hizEndeksForSelection = state.hizEndeksForSelection;\n            let yanaksForSelection = state.yanaksForSelection;\n            let mevsimsForSelection = state.mevsimsForSelection;\n            let otherInfo = state.otherInfo;\n\n\n            definedBrands = uniqueMarkaValues ;\n            modelsForTheBrand = uniqueModelValues;\n            tabansForSelection = uniqueTabanValues;\n            oransForSelection = uniqueOranValues  ;\n            jantsForSelection = uniqueJantValues ;\n            yukEndeksForSelection = uniqueYukValues ;\n            hizEndeksForSelection = uniqueHizValues ;\n            yanaksForSelection = uniqueYanakValues ;\n            mevsimsForSelection = uniqueMevsimValues;\n            otherInfo = uniqueDigerValues;\n\n            // if (_selOpt != \"marka\" ) {\n            //   definedBrands = uniqueMarkaValues ;\n            // }\n            // if (_selOpt != \"model\" ) {\n            //   modelsForTheBrand = uniqueModelValues;\n            // }\n            // if (_selOpt != \"taban\" ) {\n            //   tabansFor = uniqueTabanValues;\n            // }\n            // if (_selOpt != \"oran\" ) {\n            //   oransForSelection = uniqueOranValues  ;\n            // }\n            // if (_selOpt != \"jant\"){\n            //   jantsForSelection = uniqueJantValues ;\n            // }\n            // if (_selOpt != \"yuk\"){\n            //   yukEndeksForSelection = uniqueYukValues ;\n            // }\n            // if (_selOpt != \"hiz\"){\n            //   hizEndeksForSelection = uniqueHizValues ;\n            // }\n            // if (_selOpt != \"yanak\"){\n            //   yanaksForSelection = uniqueYanakValues ;\n            // }\n            // if (_selOpt != \"mevsim\"){\n            //   mevsimsForSelection = uniqueMevsimValues;\n            // }\n            // if (_selOpt != \"\"){\n            //   otherInfo = uniqueDigerValues;\n            // }\n          \n\n            return { //selectedBrand,selectedModel,selectedTaban,selectedOran,selectedJant,\n                      //selectedYuk,selectedHiz,selectedYanak,selectedMevsim,selectedOther,\n                        definedBrands,modelsForTheBrand,tabansForSelection,oransForSelection,\n                          jantsForSelection,yukEndeksForSelection,hizEndeksForSelection,yanaksForSelection,\n                            mevsimsForSelection,otherInfo};\n\n        });\n        \n      })\n      .catch(console.error);  \n      \n  }\n\n\n\n  resetForm = () => {\n    document.getElementById(\"satis-birim-fiyat-kdvsiz\").value = \"\";\n    document.getElementById(\"satis-toplam-fiyat-kdvsiz\").value = \"\";\n    db.collection(\"purchaseCollection\").find().toArray().then(dbResults => {\n        let uniqueMarkaValues = [...new Set(dbResults.map( value => value.marka))];\n        let uniqueModelValues = [...new Set(dbResults.map( value => value.model))];\n        let uniqueTabanValues = [...new Set(dbResults.map( value => value.taban))];\n        let uniqueOranValues = [...new Set(dbResults.map( value => value.oran))];\n        let uniqueJantValues = [...new Set(dbResults.map( value => value.jant))];\n        let uniqueYukValues = [...new Set(dbResults.map( value => value.yukEndeksi))];\n        let uniqueHizValues = [...new Set(dbResults.map( value => value.hizEndeksi))];  \n        let uniqueYanakValues = [...new Set(dbResults.map( value => value.yanakYapisi))];  \n        let uniqueMevsimValues = [...new Set(dbResults.map( value => value.mevsim))];  \n        let uniqueDigerValues = [...new Set(dbResults.map( value => value.diger))];  \n\n        this.setState( {\n          definedBrands : uniqueMarkaValues,\n          modelsForTheBrand : uniqueModelValues , \n          tabansForSelection : uniqueTabanValues,\n          oransForSelection : uniqueOranValues,\n          jantsForSelection : uniqueJantValues,\n          yukEndeksForSelection : uniqueYukValues,\n          hizEndeksForSelection : uniqueHizValues,\n          yanaksForSelection : uniqueYanakValues,\n          mevsimsForSelection : uniqueMevsimValues,\n          otherInfo : uniqueDigerValues,\n          tireSelected : {},\n          queryResulted1 : false\n\n          ,selectedBrand : \"\"\n          ,selectedModel : \"\"\n          ,selectedTaban : \"\"\n          ,selectedOran : \"\"\n          ,selectedJant : \"\"\n          ,selectedYuk : \"\"\n          ,selectedHiz : \"\"\n          ,selectedYanak : \"\"\n          ,selectedMevsim : \"\"\n          ,selectedOther : \"\"\n          ,selectedDate : \"\"\n          ,birimFiyat : \"\" \n          ,satisAdet : \"\"\n          ,toplamFiyat :\"\"\n          ,wrongInputs : [] \n          ,saveButtonPressed : false\n          ,ortMaliyet : \"\"\n          ,ortFiyat : \"\"\n          ,karOrani : \"\"\n          ,stokAdeti : 0 \n          ,ortKarOrani : \"\"\n          });\n    });  \n  }\n\n  displayOptions = (input) => {\n    //let input = event.target.id.substring(5);\n    let varArray;\n    let varOptionText;\n    \n    switch (input) {\n      case \"marka\":\n          varArray = this.state.definedBrands;\n          varOptionText = \"Lastik Markasi Seçin\"\n          \n        break;\n      case \"model\":\n          console.log(\"model: \", this.state.modelsForTheBrand);\n          varArray = this.state.modelsForTheBrand;\n          varOptionText = \"Lastik Deseni Seçin\"\n        break;\n      case \"taban\":\n          console.log(\"taban: \", this.state.tabansForSelection);\n          varArray = this.state.tabansForSelection;\n          varOptionText = \"Taban Seçin\"\n        break;\n      case \"oran\":\n          console.log(\"oran: \", this.state.oransForSelection);\n          varArray = this.state.oransForSelection;\n          varOptionText = \"Oran Seçin\"\n        break;\n      case \"jant\":\n          console.log(\"jant: \",this.state.jantsForSelection);\n          varArray = this.state.jantsForSelection;\n          varOptionText = \"Ebati Seçin\"\n        break;\n      case \"yuk\":\n          console.log(\"yuk\");\n          varArray = this.state.yukEndeksForSelection;\n          varOptionText = \"Yuk Endeksi Seçin\"\n        break;\n      case \"hiz\":\n      console.log(\"hiz: \", this.state.hizEndeksForSelection);\n          varArray = this.state.hizEndeksForSelection;  \n          varOptionText = \"Hiz Endeksi Seçin\"\n        break;\n      case \"yanak\":\n          varArray = this.state.yanaksForSelection;\n          varOptionText = \"Yanak Seçin\"\n        break;\n      case \"mevsim\":\n          varArray = this.state.mevsimsForSelection;\n          varOptionText = \"Mevsim Seçin\"\n        break;\n      case \"diger\":\n          varArray = this.state.otherInfo;\n          varOptionText = \"Ek Özellik Seçin\"\n        break;\n      \n    }\n   \n    if (varArray.length != 0 && String(varArray[0]).includes(\"Seçin\") === false ){\n        varArray.unshift(varOptionText);\n    }\n\n\n    \n    if ( this.state.tireSelected === {} || varArray == undefined || varArray.length == 0 ) {\n      return  <option>{varOptionText}</option>   \n    }\n    else{\n      return varArray.map( (item,index)=>{\n            return <option key={input.concat(\"Options\").concat(index)} >{item}</option>\n      });\n    }\n  }\n\n\n\n\n  toggleModal = (modalStateName) => {  \n    this.setState({\n      [modalStateName]: !this.state[modalStateName]\n    });\n  \n  \n  };\n\n  applyFilter = (filterObj) => {\n     \n      \n      if ( filterObj.marka ) {\n          if(filterObj.marka.includes(\"Kaldır\")){\n              delete filterObj.marka;\n          }\n          else{\n              delete filterObj.tarih;\n          }\n      }\n      else{\n        if ( filterObj.tarih.includes(\"Kaldır\")){\n            delete filterObj.tarih;\n        }else{\n            delete filterObj.marka;\n        }\n      }\n      this.refreshSalesTable(filterObj);\n\n      this.setState({\n        filterApplied : filterObj\n      });\n      \n      \n  }\n\n\n  \n  render() {\n    \n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"12\">\n            {/* <div className=\"col\"> */}\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row>\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Lastik Satış Gir</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      \n                      <Button \n                          color=\"danger\" \n                          type=\"button\"\n                          size=\"sm\"\n                          onClick={this.resetForm}\n                          >\n                          <span className=\"btn-inner--icon\">\n                                    {/* <i className=\"ni ni-folder-17\" /> */}\n                                    <i className=\"fas fa-eraser\" />\n                                  </span>\n                                  <span className=\"btn-inner--text\">Sıfırla</span>\n                      </Button>\n                    </Col>\n                    \n                  </Row>\n                </CardHeader>\n                {/* <CardBody className=\"bg-secondary shadow\"> */}\n                <CardBody>\n                <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Lastik Bilgileri\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label htmlFor=\"satis-marka\"\n                                className=\"form-control-label\"\n                              >\n                                Marka\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                                // className=\"form-control-alternative\"\n                                className = { (this.inputSetCorrectlyFor(\"marka\")  ?  \"form-control-alternative\" : \"is-invalid\" )}\n                                id=\"satis-marka\"\n                                value={this.state.selectedBrand}\n                                onChange={this.anOptionSelected}\n                                >\n                                  {this.displayOptions(\"marka\")}\n                              </Input>\n\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label htmlFor=\"satis-model\"\n                                className=\"form-control-label\"\n                              >\n                                Desen\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"model\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-model\"\n                              value = {this.state.selectedModel}                                      \n                              onChange={this.anOptionSelected}\n                              >\n\n                                {this.displayOptions(\"model\")}\n\n                            </Input>\n\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                          <label htmlFor=\"satis-taban\"\n                                className=\"form-control-label\"\n                              >\n                                Taban\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"taban\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-taban\"\n                              value ={this.state.selectedTaban}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"taban\")}\n\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"satis-oran\"\n                                className=\"form-control-label\"\n                              >\n                                Oran\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"oran\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-oran\"\n                              value={this.state.selectedOran}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"oran\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n\n                        <Col lg=\"3\">\n                          <FormGroup>\n                          <label htmlFor=\"satis-jant\"\n                                className=\"form-control-label\"\n                              >\n                                Jant\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"jant\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-jant\"\n                              value = {this.state.selectedJant}\n                              onChange= {this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"jant\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"satis-yuk\"\n                                className=\"form-control-label\"\n                              >\n                                Yuk Endeksi\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"yuk\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-yuk\"\n                              value={this.state.selectedYuk}\n                              onChange = {this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"yuk\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"satis-hiz\"\n                                className=\"form-control-label\"\n                              >\n                                Hiz Endeksi\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"hiz\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-hiz\"\n                              value={this.state.selectedHiz}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"hiz\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n\n                      </Row>\n\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label htmlFor=\"satis-yanak\"\n                              className=\"form-control-label\"\n                              \n                            >\n                              Yanak Yapisi\n                            </label>\n\n                            <Input\n                              className={ (this.inputSetCorrectlyFor(\"yanak\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-yanak\"\n                              type=\"select\"\n                              value={this.state.selectedYanak}\n                              onChange={this.anOptionSelected}\n                            >\n                            {this.displayOptions(\"yanak\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label htmlFor=\"satis-mevsim\"\n                              className=\"form-control-label\"\n                              \n                            >\n                              Mevsim\n                            </label>\n\n                            <Input\n                              type=\"select\"\n                              // className=\"form-control-alternative\"\n                              className={ (this.inputSetCorrectlyFor(\"mevsim\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-mevsim\"\n                              value = {this.state.selectedMevsim}\n                              onChange={this.anOptionSelected}\n                            >\n                             {this.displayOptions(\"mevsim\")} \n                           {/* <option>ilkbahar</option>\n                           <option>Yaz</option>\n                           <option>Sonbahar</option>\n                           <option>Kiss</option> */}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                        <FormGroup > \n                              <label htmlFor=\"satis-diger\"\n                                className=\"form-control-label\"\n                              >\n                                Diger\n                              </label>\n                            \n                              <Input type=\"select\"\n                              //placeholder=\"Ek ozellikler...\" \n                              className={ (this.inputSetCorrectlyFor(\"diger\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-diger\"\n                              value={this.state.selectedOther}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"diger\")}\n                              </Input>\n\n                              {/* <Input type=\"text\"\n                              placeholder=\"Ek ozellikler...\" \n                              className=\"form-control-alternative\"\n                              id=\"satis-diger\"\n                              /> */}\n                              \n                            \n          \n                            </FormGroup> \n                        </Col>\n                      </Row>\n                      \n                      <Row>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-birim-fiyat\"\n                            >\n                              Birim Fiyatı (KDV Dahil)\n                            </label>   \n                              <Input\n                                className={ (this.inputSetCorrectlyFor(\"birim\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                                //defaultValue=\"Lucky\"\n                                id=\"satis-birim-fiyat\"\n                                placeholder=\"₺ Cinsinden\"\n                                type=\"number\"\n                                value= {this.state.birimFiyat}\n                                onChange={this.inputBirimChanged}\n                              />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-adet\"\n                            >\n                              Adet\n                            </label>\n                            <Input\n                              className={ (this.inputSetCorrectlyFor(\"adet\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                        \n                              id=\"satis-adet\"\n                              placeholder=\"0\"\n                              type=\"number\"\n                              min=\"0\"\n                              max={this.state.stokAdeti}\n                              value={this.state.satisAdet}\n                              onChange={this.adetChanged}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-toplam-fiyat\"\n                            >\n                              Toplam Fiyatı (KDV Dahil)\n                            </label>\n                            <Input\n                              className= { (this.inputSetCorrectlyFor(\"toplam\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"satis-toplam-fiyat\"\n                              placeholder=\"₺ Cinsinden\"\n                              type=\"number\"\n                              value ={this.state.toplamFiyat}\n                              onChange={this.inputToplamChanged}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-tarih\"\n                            >\n                              Tarih\n                            </label>\n                            {/* <Input\n                              className=\"form-control-alternative\"\n                              defaultValue =\"01/01/0001\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type= \"date\"\n                            /> */}\n                            <Datepicker \n                              id=\"satis-tarih\"\n                              className= { (this.inputSetCorrectlyFor(\"date\") ) ?   \"is-invalid\" : \"form-control-alternative\" }\n                              placeholder = \"Satış Tarihi Seçin\"\n                              // defaultValue={new Date()}                          \n                              value={this.state.selectedDate}\n                              onChange={this.inputDateChanged}\n                            ></Datepicker>\n                          \n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\" className=\"text-right\">\n                          \n                                \n                                <Button block className=\"btn-icon btn-3\" color=\"primary\" type=\"button\" \n                                    size=\"lg\"\n                                    onClick={this.saveSale}    \n                                >\n                                  <span className=\"btn-inner--icon\">\n                                    {/* <i className=\"ni ni-folder-17\" /> */}\n                                    <i className=\"fas fa-save\" />\n                                  </span>\n                                  <span className=\"btn-inner--text\">Satışı Kaydet</span>\n                                </Button>\n                          {/* </FormGroup>  */}\n                       \n                        </Col>\n                      </Row>\n                      \n                    </div>\n                    \n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Satış Destek Asistanı\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-ort-maliyet\"\n                            >\n                              Ortalama Maliyet\n                            </label>\n     \n                              <Input disabled\n                                className=\"form-control-alternative\"\n                                id=\"satis-ort-maliyet\"\n                                placeholder=\"₺ Cinsinden\"\n                                type=\"text\"\n                                value= {this.state.ortMaliyet}\n                              />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-kar-orani\"\n                            >\n                              Mevcut İşlem Kâr Oranı\n                            </label>\n                            <Input disabled\n                              className=\"form-control-alternative\"\n                              id=\"satis-kar-orani\"\n                              placeholder=\"% -\"\n                              type=\"text\"\n                              value= {this.state.karOrani}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-ort-fiyat\"\n                            >\n                              Ortalama Fiyat\n                            </label>\n     \n                              <Input disabled\n                                className=\"form-control-alternative\"\n                                id=\"satis-ort-fiyat\"\n                                placeholder=\"₺ Cinsinden\"\n                                type=\"text\"\n                                value= {this.state.ortFiyat}\n                              />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-ort-kar\"\n                            >\n                              Ortalama Kâr Oranı\n                            </label>\n                            <Input disabled\n                              className=\"form-control-alternative\"\n                              id=\"satis-ort-kar\"\n                              placeholder=\"% -\"\n                              type=\"text\"\n                              value= {this.state.ortKarOrani}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-birim-fiyat-kdvsiz\"\n                              \n                            >\n                              Birim Fiyatı (KDV Hariç)\n                            </label>\n                            <Input disabled\n                              className=\"form-control-alternative\"\n                              id=\"satis-birim-fiyat-kdvsiz\"\n                              placeholder=\"- ₺\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-toplam-fiyat-kdvsiz\"\n                              \n                            >\n                              Toplam Fiyatı (KDV Hariç)\n                            </label>\n                            <Input disabled\n                              className=\"form-control-alternative\"\n                              id=\"satis-toplam-fiyat-kdvsiz\"\n                              placeholder=\"- ₺\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    {/* Description */}\n                    \n                    \n                  </Form>\n                </CardBody>\n              </Card>\n            {/* </div> */}\n            </Col>\n          </Row>\n          <hr className=\"my-4\" />\n          <Row>\n\n            <Col className=\"order-xl-1\" xl=\"12\">\n              <SatisDataTable  mainTitle=\"Mevcut Lastik Satışları\" \n                          columnTitles={[\"Marka\",\"Desen\",\"Ebat\",\"Tarih\",\"Adet\",\"Birim Fiyat\",\"Diğer\"]}\n                          data={this.state.sales}\n                          deleteModalStateName= \"modalDeleteSale\"\n                          editModalStateName=\"modalEditSale\"\n                          toggleFunc={this.toggleModal}\n                          confirmFunc={this.deleteSale}\n                          editFunc={this.editSale}\n                          isConfirmModalVisible= {this.state.modalDeleteSale}\n                          isEditModalVisible={this.state.modalEditSale}\n                          markaFilterOptions={this.state.filterArrayMarka}\n                          tarihFilterOptions={this.state.filterArrayTarih}\n                          filterFunc={this.applyFilter}\n                          filter={this.state.filterApplied}\n                          \n              />\n            </Col>\n          </Row>\n          \n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Satis;\n\n\n\n// displayModelOptions = () => {\n//   console.log(\"displayModelOptions: \",this.state.modelsForTheBrand);\n  \n//   if ( this.state.modelsForTheBrand == undefined || this.state.modelsForTheBrand.length == 0 ) {\n//     return  <option>Lastik Modeli Secimi</option>   \n//   }\n//   else{\n//     return this.state.modelsForTheBrand.map( (item,index)=>{\n//       return <option key={\"modelOptions\".concat(index)} >{item}</option>\n//     });\n//   }\n// }\n\n\n{/* <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"satis-birim-fiyat\"\n                            >\n                              Birim Fiyatı (KDV Dahil)\n                            </label>\n                            <InputGroup className=\"form-control-alternative mb-4\" >\n                              <InputGroupAddon addonType=\"prepend\" className=\"form-control-alternative\">\n                                <InputGroupText className=\"form-control-alternative text-sm\" disabled>\n                                  <i className=\"fas fa-lira-sign\" />\n                                </InputGroupText>\n                              </InputGroupAddon>      \n                              <Input\n                                className={ (this.inputSetCorrectlyFor(\"birim\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                                //defaultValue=\"Lucky\"\n                                id=\"satis-birim-fiyat\"\n                                placeholder=\"₺ Cinsinden\"\n                                type=\"number\"\n                                value= {this.state.birimFiyat}\n                                onChange={this.inputBirimChanged}\n                              />\n                            </InputGroup>\n                          </FormGroup>\n                        </Col> */}","import React, {Component} from 'react';\nimport Tire from \"../../Tire.js\";\nimport {\n    Button,\n    Container,\n    Modal,\n    Row,\n    Col,\n    Form,\n    FormGroup,\n    Input\n\n} from \"reactstrap\";\n\n\nexport default class ModalEditDefinition extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isOnScreen: props.isOpen,\n            title: props.title,\n            tire: props.tire \n            \n        }\n    }\n\n\n    componentWillMount(){\n         console.log(\"componentWillMount: ModalEdit\");\n         let t1 = new Tire(this.state.tire);\n         console.log(\"++Tire in the state: \", this.state.tire);\n         console.log(\"++Tire newly created: \",t1);\n         console.log(\"---\");\n         console.log(t1.mainInfo());\n    }\n    \n    \n\n    toggleModal = ()=> {\n        let curVisiblity = this.state.isOnScreen;\n        this.setState({\n          isOnScreen: !this.state.isOnScreen\n        });\n        \n        this.props.toggleFunc(this.props.modalStateName,!curVisiblity);\n      };\n\n    saveUpdates = () => {\n\n        this.setState({\n            isOnScreen: !this.state.isOnScreen\n        });\n\n        //debugger;\n        // console.log(\"+++iNPUT TIRE:\",this.tire._id.idInfoToString(),\"=>\", this.tire._id.idInfoToString() );\n        let tire2Save = new Tire(this.state.tire);\n        tire2Save._id         = this.state.tire._id;\n        tire2Save.owner_id    = this.state.tire.owner_id;\n        tire2Save.marka       = document.getElementById(\"edit-modal-marka\").value;\n        tire2Save.model       = document.getElementById(\"edit-modal-model\").value;\n        tire2Save.taban       = Number(document.getElementById(\"edit-modal-taban\").value);\n        tire2Save.oran        = Number(document.getElementById(\"edit-modal-oran\").value);\n        tire2Save.jant        = document.getElementById(\"edit-modal-jant\").value;\n        tire2Save.yukEndeksi  = Number(document.getElementById(\"edit-modal-yuk\").value);\n        tire2Save.hizEndeksi  = document.getElementById(\"edit-modal-hiz\").value;\n        tire2Save.yanakYapisi = document.getElementById(\"edit-modal-yanak\").value;\n        tire2Save.mevsim      = document.getElementById(\"edit-modal-mevsim\").value;\n        tire2Save.diger       = document.getElementById(\"edit-modal-diger\").value;\n        \n        \n        \n        console.log(\"+++File to be replaced:\",tire2Save.idInfoToString(),\"=>\", tire2Save.fullInfo());\n        this.props.editFunc(tire2Save);\n    }\n     \n    render(){\n        return (\n            // console.log(\"<<<<<<<<\", tire);\n            <Modal\n                className=\"modal-dialog-centered\"\n                 isOpen={this.state.isOnScreen}\n                // toggle={() => this.toggleModal()}\n            >\n                <div className=\"modal-header\">\n                    <h2 className=\"modal-title\" id=\"modal-title-default\">\n                    {this.state.title}\n                    </h2>\n                    <button\n                    aria-label=\"Close\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    type=\"button\"\n                    onClick={() => this.toggleModal()}\n                    >\n                    <span aria-hidden={true}>×</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                <Form>\n                    <FormGroup row>\n                        {/* <Col sm=\"6\"> */}\n                        <Col sm=\"6\" >    \n                            <label htmlFor=\"edit-modal-marka\"\n                                className=\"form-control-label\"\n                                sm=\"2\"\n                            >\n                                Marka   \n                            </label>\n                         {/* </Col> */}\n                        {/* </Col>         */}\n                        {/* <Col sm=\"6\">  */} \n                            <Input type=\"text\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modal-marka\"\n                                    placeholder={this.state.tire.marka}\n                                    defaultValue={this.state.tire.marka}\n                            />\n                        </Col>\n                   \n                        {/* <Col sm=\"6\"> */}\n                        <Col sm=\"6\" >    \n                            <label htmlFor=\"edit-modal-model\"\n                                className=\"form-control-label\"\n                                sm=\"2\"\n                            >\n                                Desen  \n                            </label>\n      \n                            <Input type=\"text\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modal-model\"\n                                    placeholder={this.state.tire.model}\n                                    defaultValue={this.state.tire.model}\n                            />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col sm=\"6\" >\n                            <label htmlFor=\"edit-modal-taban\"\n                            className=\"form-control-label\"\n                            >\n                            Taban\n                            </label>\n                            <Input type=\"number\" \n                                className=\"form-control-alternative\"\n                                id=\"edit-modal-taban\"\n                                min=\"155\"\n                                max=\"325\"\n                                step=\"10\"\n                                placeholder={this.state.tire.taban}\n                                defaultValue={this.state.tire.taban}\n                            />\n                        </Col>\n\n                        <Col sm=\"6\" > \n                            <label  htmlFor=\"edit-modal-oran\"\n                                    className=\"form-control-label\"\n                                    >\n                                    Oran\n                            </label>\n                            <Input  type=\"number\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modal-oran\"\n                                    min=\"20\"\n                                    max=\"95\"\n                                    step=\"5\"\n                                    placeholder={this.state.tire.oran}\n                                    defaultValue={this.state.tire.oran}\n                            />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col  sm=\"6\" >    \n                            <label  htmlFor=\"edit-modal-jant\"\n                                    className=\"form-control-label\"\n                                    sm=\"3\"\n                                    >\n                                    Jant\n                            </label>\n                            <Input  type=\"text\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modal-jant\"\n                                    placeholder={this.state.tire.jant}\n                                    defaultValue={this.state.tire.jant}\n                            />\n                        </Col>  \n                        <Col  sm=\"6\" >\n                            <label  htmlFor=\"edit-modal-yuk\"\n                                className=\"form-control-label\"\n                                sm=\"6\"\n                            >\n                        \n                            Yuk Endeksi\n                            </label>\n                            <Input type=\"number\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modal-yuk\"\n                                    min=\"70\"\n                                    max=\"130\"\n                                    step=\"1\"\n                                    placeholder={this.state.tire.yukEndeksi}\n                                    defaultValue={this.state.tire.yukEndeksi}\n                            />\n                        </Col>\n                        \n                        \n                    </FormGroup>\n                \n                    <FormGroup row>\n                        <Col sm=\"6\" >\n                            <label  htmlFor=\"edit-modal-hiz\"\n                                    className=\"form-control-label\"\n                                    sm=\"3\"\n                                >   \n                                Hız Endeksi\n                            </label>\n                            <Input type=\"text\" \n                                className=\"form-control-alternative\"\n                                id=\"edit-modal-hiz\"\n                                maxLength=\"1\"\n                                placeholder={this.state.tire.hizEndeksi}\n                                defaultValue={this.state.tire.hizEndeksi}\n                            />\n                        </Col>\n                        <Col sm=\"6\" >\n                            <label  htmlFor=\"edit-modal-yanak\"\n                                    className=\"form-control-label\"\n                                    >\n                                    Yanak Yapısı\n                            </label>\n\n                            <Input  className=\"form-control-alternative\"\n                                    id=\"edit-modal-yanak\"\n                                    type=\"text\"\n                                    placeholder={this.state.tire.yanakYapisi}\n                                    defaultValue={this.state.tire.yanakYapisi}\n                            />\n                        </Col>\n                        \n                    </FormGroup>\n                    <FormGroup row>\n                        <Col sm=\"6\" >\n                            <label  htmlFor=\"edit-modal-mevsim\"\n                                    className=\"form-control-label\" \n                                >\n                                Mevsim\n                                </label>\n\n                            <Input  className=\"form-control-alternative\"\n                                    id=\"edit-modal-mevsim\"\n                                    type=\"text\"\n                                    placeholder={this.state.tire.mevsim}\n                                    defaultValue={this.state.tire.mevsim}\n                            />\n                        </Col>\n                        \n                        <Col sm=\"6\" >\n                            <label  htmlFor=\"edit-modal-diger\"\n                                    className=\"form-control-label\"\n                                >\n                                Diğer\n                            </label>\n                            <Input  type=\"text\"\n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modal-diger\"\n                                    placeholder={this.state.tire.diger}\n                                    defaultValue={this.state.tire.diger}\n                            />\n                        </Col>\n                        \n                    </FormGroup>\n                    <FormGroup row>\n                        <Col className=\"text-left\">              \n                            <Button className=\"ml-auto\"\n                                    color=\"danger\"\n                                    data-dismiss=\"modal\"\n                                    type=\"button\"\n                                    onClick={() => this.toggleModal()}\n                            >\n                                Vazgeç\n                            </Button>  \n                        </Col> \n                        <Col className =\"text-right\" sm=\"9\">\n                            \n                            <Button color=\"primary\" \n                                    type=\"button\"\n                                    onClick={ () => this.saveUpdates() }    \n                                >\n                                Değişiklikleri Kaydet\n                            </Button>\n                        \n                        </Col>\n                    </FormGroup>       \n                    {/* </div> */}\n                </Form>\n            </div>\n\n            </Modal>\n            );\n        }\n    }","import React, {Component} from 'react';\nimport Tire from \"../../Tire.js\";\nimport {\n    Button,\n    Modal\n} from \"reactstrap\";\n\n\nexport default class ModalInformation extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isOnScreen: props.isOpen,\n            headerTitle: props.headerTitle,\n            mainTitle: props.mainTitle,\n            question: props.question,\n            confirmButtonName: props.confirmButtonName,\n            tire : props.forTire\n\n        }\n    }\n    componentDidMount(){\n        console.log(\"Confirmation Modal componentDidMount\");\n        console.log(this.state.tire);\n    }\n\n    toggleModal = ()=> {\n        let curVisiblity = this.state.isOnScreen;\n        this.setState({\n          isOnScreen: !this.state.isOnScreen\n        });\n        \n        this.props.toggleFunc(this.props.modalStateName,!curVisiblity);\n      };\n\n    confirmPressed = () => {\n\n        this.setState({\n            isOnScreen: !this.state.isOnScreen\n        });\n\n        this.props.confirmFunc(this.state.tire);\n    }\n\n    render(){\n        return (\n            <Modal\n            className=\"modal-dialog-centered modal-danger\"\n            contentClassName=\"bg-gradient-danger\"\n            isOpen={this.state.isOnScreen}\n            toggle={() => this.toggleModal()}\n            backdrop=\"static\"\n            >\n            <div className=\"modal-header\">\n                <h6 className=\"modal-title\" id=\"modal-title-notification\">\n                {this.state.headerTitle}\n                </h6>\n                <button\n                aria-label=\"Close\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                type=\"button\"\n                onClick={() => this.toggleModal()}\n                >\n                <span aria-hidden={true}>×</span>\n                </button>\n            </div>\n            <div className=\"modal-body\">\n                <div className=\"py-3 text-center\">\n                <i className=\"ni ni-bell-55 ni-3x\" />\n                {/* <h4 className=\"heading mt-4\">{editPopupTitle} - {otherInfo}</h4> */}\n                <h4 className=\"heading mt-4\">{this.state.mainTitle}</h4>\n                <p>\n                    {this.state.question}\n                </p>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <Button className=\"btn-white\" color=\"default\" type=\"button\"\n                        onClick={() => this.confirmPressed() }>\n                {this.state.confirmButtonName}\n                </Button>\n                <Button\n                className=\"text-white ml-auto\"\n                color=\"link\"\n                data-dismiss=\"modal\"\n                type=\"button\"\n                onClick={() => this.toggleModal()}\n                >\n                Vazgeç\n                </Button>\n            </div>\n            </Modal>\n        );\n    }\n}","/*!\n\n\nTODO:\n-Show Duplicate key error\n-Pagination ?? -- postponed\n-Modallar Tarayinca sayfayi kapatiyor cikiyor.>>bug\n-Tanim tablosunda stok gosterilmeyecek -- Done\n+ insert ederken basindaki sonundaki bosluklari trimleyip at\n+ inputlar icin checkler eklenecek\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\nimport React, { useDebugValue } from \"react\";\nimport ModalEditDefinition from \"./ModalEditDefinition\";\nimport Tire from \"../../Tire.js\";\n\n// reactstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardFooter,\n  Container,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Input,\n  Media,\n  // Pagination,\n  // PaginationItem,\n  // PaginationLink,\n  Progress,\n  Table,\n  Row,\n  Col,\n  UncontrolledTooltip,\n  Modal\n} from \"reactstrap\";\n\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\";\n\n// core components\nimport Header from \"components/Headers/Header.jsx\";    \nimport { throwStatement, switchStatement, enumBooleanBody } from \"@babel/types\";\nimport { couldStartTrivia, isIterationStatement } from \"typescript\";\n\nimport StockTable from \"StockTable\";\nimport ModalInformation from \"./ModalInformation\";\n// import Tire from \"Tire\";\n\n// const client = Stitch.initializeDefaultAppClient(\"lastikpark-ogewz\");\nconst client = Stitch.getAppClient(\"lastikpark-ogewz\");\nconst mongodb = client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n);\n\nconst db = mongodb.db(\"lastikParkDB\");\n\n\nclient.auth.loginWithCredential(new AnonymousCredential()).then(user => {\n  console.log(`Logged in as anonymous user with id: ${user.id}`);\n}).catch(console.error);\n\n\n\nclass Tanim extends React.Component {\n  \n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     marka: \"\",\n  //     taban: 0,\n  //     oran: 0,\n  //     jant:\"\",\n  //     yukEndeksi:\"\",\n  //     hizEndeksi:\"\",\n  //     desen:\"\",\n  //     yanakYapisi:\"\",\n  //     mevsim:\"\",\n  //     diger:\"\",\n  //     tableData: []\n      \n  //   };\n  // constructor(props) {\n  //   super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n  //   this.state = { //state is by default an object\n  //      tires: [\n  //         { marka:'Pirelli', taban: 165, oran: 65, jant: 'R16',yukEndeksi:90,hizEndeksi:'X'},\n  //         { marka:'Good Year', taban: 170, oran: 75, jant: 'R17',yukEndeksi:91,hizEndeksi:'Y'},\n  //         { marka:'Lassa', taban: 175, oran: 80, jant: 'R19',yukEndeksi:92,hizEndeksi:'Z'},\n  //         { marka:'Continental', taban: 180, oran: 80, jant: 'R20',yukEndeksi:93,hizEndeksi:'V'},\n  //         { marka:'Kumho', taban: 185, oran: 80, jant: 'R21',yukEndeksi:94,hizEndeksi:'T'}\n  //      ]\n  //   }\n  \n    constructor(props) {\n      super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n      this.state = { //state is by default an object\n        maxStock : 100,\n        tires: [],\n        modalDeleteTire: false,\n        modalEditTire: false,\n        modalError : false,\n        errorMsg : \"\"\n        // tires: [\n        //     { marka:'Pirelli', taban: 165, oran: 65, jant: 'R16',yukEndeksi:90,hizEndeksi:'X'},\n        //     { marka:'Good Year', taban: 170, oran: 75, jant: 'R17',yukEndeksi:91,hizEndeksi:'Y'},\n        //     { marka:'Lassa', taban: 175, oran: 80, jant: 'R19',yukEndeksi:92,hizEndeksi:'Z'},\n        //     { marka:'Continental', taban: 180, oran: 80, jant: 'R20',yukEndeksi:93,hizEndeksi:'V'},\n        //     { marka:'Kumho', taban: 185, oran: 80, jant: 'R21',yukEndeksi:94,hizEndeksi:'T'}\n        //  ]\n      }\n\n    \n    //let tire2 = new Tire(\"Gudyiear\",165,65,\"R16\",90,\"T\",\"desen\",\"yanak\",\"mevsim\",\"diger\");\n    console.log(\"*** CONSTRUCTOR ***\");\n\n\n    \n    this.insertNewTire = this.insertNewTire.bind(this);\n    \n    this.inputTyped = this.inputTyped.bind(this);\n    this.displayInventory = this.displayInventory.bind(this);\n    //this.toggleModal = this.toggleModal.bind(this);\n   // this.toggleEditModal = this.toggleEditModal.bind(this);\n  }\n  \n\n\n  \n\n/*************************************************************************************************/\n/***************************** DATABASE FUNCTIONS ************************************************/\n  updateTireInDB = (tire) => {\n      db.collection(\"inventoryCollection\")\n      .findOneAndReplace(\n        {_id : tire._id},tire\n      )\n      .then(DocumentT => {\n        console.log(\"Updated document: \", DocumentT);\n        this.setState({modalEditTire:false });\n        this.refreshInventoryTable();\n      }).catch(console.error);\n  }\n\n  deleteTireFromDB = (tire)=>{\n      //debugger;\n      let {_id} = tire;\n   \n      \n      console.log(\"Tirewith id '\",_id.toString(),\"'will be deleted from database.\");\n      console.log(tire);\n\n      db.collection(\"inventoryCollection\")\n        .findOneAndDelete(\n          {_id : tire._id}\n        )\n     .then(DocumentT => {\n      console.log(\"Deleted document: \", DocumentT);\n      this.setState({modalDeleteTire: false});\n      this.refreshInventoryTable();\n    }).catch(console.error);\n\n\n\n  }\n\n  insertNewTire() {\n    let _marka = document.getElementById(\"tanim-marka\").value;\n    let _model = document.getElementById(\"tanim-model\").value;\n    let _taban = Number(document.getElementById(\"tanim-taban\").value);\n    let _oran  = Number(document.getElementById(\"tanim-oran\").value);\n    let _jant = document.getElementById(\"tanim-jant\").value;\n    let _yukEndeksi= Number(document.getElementById(\"tanim-yuk\").value);\n    let _hizEndeksi = document.getElementById(\"tanim-hiz\").value;\n    let _yanakYapisi = document.getElementById(\"tanim-yanak\").value;\n    let _mevsim = document.getElementById(\"tanim-mevsim\").value;\n    let _diger = document.getElementById(\"tanim-diger\").value;\n\n    db.collection(\"inventoryCollection\")\n    .insertOne({\n      owner_id: client.auth.user.id,\n      marka: _marka,\n      model: _model,\n      taban: _taban,\n      oran: _oran,\n      jant: _jant,\n      yukEndeksi: _yukEndeksi,\n      hizEndeksi: _hizEndeksi,\n      yanakYapisi: _yanakYapisi,\n      mevsim: _mevsim,\n      diger: _diger\n    })\n    .then(remoteResult => {\n     console.log(\"Insert done with id:\",remoteResult.insertedId);\n     this.refreshInventoryTable(); \n   }).catch(\n      //console.error\n        this.displayError(console.error)\n\n        // console.log(error.message);\n        // this.setState({modalError: true,errorMsg : error.message});\n        //     );\n     );\n  }\n\n  refreshInventoryTable(){\n    // db.collection(\"inventoryCollection\").find().toArray().then(results => {\n    //   console.log(\"StockItems:\",results);\n    //   this.state.tires = results;\n    //   console.log(\"TiresArray\",this.tires);\n    //   console.log(\"StateTiresArray\",this.state.tires);\n    //   this.setState((prevState,results) => {\n    //     let tanim = Object.assign({}, prevState.jasper);  // creating copy of state variable jasper\n    //     tanim.tires = results;                     // update the name property, assign a new value                 \n    //     return { tanim };                                 // return new object jasper object\n    //   })\n    //debugger;\n\n\n\n    db.collection(\"inventoryCollection\").find().toArray().then(results => {\n      \n      console.log(\"StockItems:\",results);\n      //console.log(\"TiresArray\",this.state.tires);\n      // let resArry = Object.assign({}, results);\n      // this.tableRows = results;\n      this.setState( state =>{ \n        console.log(\"Burdaki results ne: \",results);\n        \n        return {tires : results}                // return new object jasper object\n        \n      })\n    })\n    .catch(console.error);\n    //this.forceUpdate();\n      \n      console.log(\">>> Table ROWS: \",this.tableRows);\n      console.log(\"StateTiresArray\",this.state.tires);\n    \n  }\n\n/*************************************************************************************************/\n/***************************** REACT LIFECYCLE METHODS *******************************************/\n\n\n  componentDidMount(){\n    console.log(\"DidMount Entered:\");\n    // console.log(tbData);\n    // db.collection(\"inventoryCollection\").find().toArray().then(results => {\n    //   console.log(\"StockItems:\",results);\n    //   this.state.tires = results;\n    //   console.log(\"TiresArray\",this.tires);\n    //   console.log(\"StateTiresArray\",this.state.tires);\n    //   this.setState((prevState,results) => {\n    //     let tanim = Object.assign({}, prevState.jasper);  // creating copy of state variable jasper\n    //     tanim.tires = results;                     // update the name property, assign a new value                 \n    //     return { tanim };                                 // return new object jasper object\n    //   })\n    //this.refreshInventoryTable();\n  }\n  \n   componentWillMount(){\n      console.log(\"*** willMount/ \" );\n      this.refreshInventoryTable();\n    }\n  \n    componentWillUpdate(){\n        console.log(\"***willUpdate \", this.state.tires );\n    }\n   \n  \n  \n  \n\n\n\n  \n\n\n  inputTyped(event){\n    var stateToChange = event.target.id.substring(6); \n    \n    switch (stateToChange) {\n      case \"marka\":\n        this.state.marka = event.target.value;\n        break;\n      case \"taban\":\n        this.state.taban = Number(event.target.value);\n        break;\n      case \"oran\":\n        this.state.oran = Number(event.target.value);\n        break;\n      case \"jant\":\n        this.state.jant = event.target.value;\n        break;\n      case \"yuk\":\n        this.state.yukEndeksi = Number(event.target.value);\n        break;\n      case \"hiz\":\n        this.state.hizEndeksi = event.target.value;\n        break;\n      case \"yanak\":\n        this.state.yanakYapisi = event.target.value;\n        break;\n      case \"mevsim\":\n        this.state.mevsim = event.target.value;\n        break;\n      case \"diger\":\n        this.state.diger = event.target.value;\n        break;\n      default:\n        break;\n    }\n    \n  }\n\n  \n \n  displayInventory(){\n    console.log(\"Entered in display inventory:\");\n    // db.collection(\"inventoryCollection\")\n    //    .find({}, { limit: 1000 })\n    //    .asArray()\n    //    .then(tableData => {\n    //      this.setState({tableData});\n    //    })\n    //    .catch(console.error);\n\n      var callback = function(err, res){\n        if(err) {\n           return res.status(400).send({message: 'Server error:' + JSON.stringify(err)});\n        } else {\n           res.json(res);\n       }\n      }\n\n\n   }\n\n\n\n  displayError = (err) => {\n     //console.err;\n     console.log(\"=======================================\");\n     console.log(err.message);\n     this.setState({modalError: true,errorMsg : err.message});      \n  }\n\n\n\n\n  resetForm(){\n    document.getElementById(\"tanim-marka\").value = \"\";\n    document.getElementById(\"tanim-taban\").value = \"\";\n    document.getElementById(\"tanim-oran\").value=\"\";\n    document.getElementById(\"tanim-jant\").value=\"\";\n    document.getElementById(\"tanim-yuk\").value=\"\";\n    document.getElementById(\"tanim-hiz\").value=\"\";\n    document.getElementById(\"tanim-yanak\").value=\"\";\n    document.getElementById(\"tanim-mevsim\").value=\"\";\n    document.getElementById(\"tanim-diger\").value=\"\";\n\n\n  } \n\n/********************************************************************************/\n/******************************* MODAL FUNCTIONS ********************************/\n\n/********* For Edit Modal: */\ntoggleEditModal = () => {\n // debugger;\n  this.setState({modalEditTire: !this.state.modalEditTire});\n  //return this.state.modalEditTire;\n}\n\nsetModalInterComp = (modalState,shouldBeVisible) => {\n    this.setState({[modalState] : shouldBeVisible});\n    if (modalState === \"modalError\"){\n        this.setState({errorMsg: \"\"});     \n    }\n}\n\n\n\ntoggleModal = (modalStateName)=> {  \n\n\n  this.setState({\n    [modalStateName]: !this.state[modalStateName]\n  });\n\n\n};\n\n\n\n/********* For Confirmation Modal */\n// toggleModal = (state,tire)=> {  \n//   if (!this.state[state]) {\n//     this.setState({selectedTire:tire,isTireSelected:true});\n//     console.log(tire);\n//   } \n\n//   this.setState({\n//     [state]: !this.state[state]\n//   });\n\n\n// };\n  \n  \n\n\n  renderStockData(){\n    // console.log(\"?? t\",this.tableRows);\n     return this.state.tires.map((tire, index) => {\n          let tireTemp = new Tire(tire);\n          let deleteConfirmQstn =\"Yukarda belirtilen lastiği envanterden silmek üzeresiniz.\\nOnaylıyor musunuz?\"\n\n          console.log(\"TireArray to be parsed has lengt of: \",this.state.tires.length);\n          const { _id,owner_id,marka,model,taban,oran,jant,yukEndeksi,hizEndeksi,yanakYapisi,mevsim,diger } = tire; //destructuring\n          console.log(\"id and oid:\",tireTemp._id,tireTemp.owner_id);\n\n          \n          const ebat = String(taban).concat(\" / \").concat(String(oran))\n                          .concat(\" / \").concat(jant)\n                            .concat(\" / \").concat(yukEndeksi)\n                              .concat(\" / \").concat(hizEndeksi);\n          //*TODO burda stok sayisi hesaplanmasi lazim                            \n          const stockCount = 10;\n          const stockPerc = stockCount / this.state.maxStock *100;\n        \n          const tooltipID = \"tooltip\".concat(_id.toString());\n          const rowId = \"r\".concat(_id.toString());\n          const otherInfo = \"Stok#: \".concat(String(stockCount)).concat(\n                            \"\\n\\t Yanak: \".concat(yanakYapisi)).concat(\n                            \"\\n\\t Mevsim: \".concat(mevsim).concat(\n                            \"\\n\\t Diğer: \".concat(diger)));\n          \n                            console.log(\"otherinfi:\",otherInfo);\n          const editPopupTitle = marka.concat(\" \").concat(model).concat(\" - \").concat(ebat);\n\n                                    \n          // if (stockPerc <= 20) {\n          //   var barClassVar = 'bg-danger';\n          //   var infoIcon = 'fas fa-info-circle text-red';  \n          //   var settingsIcon = 'ni ni-settings text-red';\n          //   var ebatIcon = 'fas fa-car-side text-red'\n          // }else if (stockPerc >= 21 && stockPerc <=80 ) {\n          //   var barClassVar = 'bg-info';\n          //   var infoIcon = 'fas fa-info-circle text-info';\n          //   var settingsIcon = 'ni ni-settings text-info';\n          //   var ebatIcon = 'fas fa-car-side text-info'\n          // }else{\n          //   var barClassVar = 'bg-success';\n          //   var infoIcon = 'fas fa-info-circle text-green';\n          //   var settingsIcon = 'ni ni-settings text-green';\n          //   var ebatIcon = 'fas fa-car-side text-green'\n          // }\n\n          \n          var infoIcon = 'fas fa-info-circle text-info';  \n          var settingsIcon = 'ni ni-settings text-info';\n          var ebatIcon = 'fas fa-car-side text-info'\n          \n          \n\n          return (\n              <tr key={rowId}>\n              <th scope=\"row\">\n                <Media className=\"align-items-center\">\n                  <a\n                    className=\"avatar rounded-circle mr-3\"\n                    href=\"#pablo\"\n                    onClick={e => e.preventDefault()}\n                  >\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/sketch.jpg\")}\n                    />\n                  </a>\n                  <Media>\n                    <span className=\"mb-0 text-sm\">\n                      {marka}\n                    </span>\n                  </Media>\n                </Media>\n              </th>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {model}\n                </span>\n              </td>\n              <td>\n                  <i className={ebatIcon} /> {ebat}\n              </td>\n              {/* <td>\n                <div className=\"d-flex align-items-center\">\n                  <span className=\"mr-2\">{stockCount}</span>\n                    <div>\n                      <Progress\n                        max=\"100\"\n                        value={stockPerc}\n                        barClassName={barClassVar}\n                      />\n                  </div>\n                </div>                \n              </td> */}\n              <td className = \"text-center\">\n                <span>\n                <i className={infoIcon} id={tooltipID} /> \n                  <UncontrolledTooltip\n                    delay={0}\n                    target={tooltipID}\n                  >\n                    {otherInfo}\n                  </UncontrolledTooltip>\n                  </span>\n              </td>\n              <td className=\"text-right\">\n              <UncontrolledDropdown direction=\"left\">\n                  <DropdownToggle className=\"pr-0\" nav>\n                    <i className={settingsIcon} /> \n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-menu-arrow\">\n                    <DropdownItem className=\"noti-title\" header tag=\"div\">\n                      <h6 className=\"text-overflow m-0\">{editPopupTitle}</h6>\n                    </DropdownItem>\n                    <DropdownItem divider />\n\n                    <DropdownItem onClick={() => this.toggleModal(\"modalEditTire\")}>\n                      <i className=\"fas fa-edit\" />\n                      <span>Düzenle</span>\n                      <ModalEditDefinition \n                        title={tireTemp.mainInfo()}\n                        tire={tireTemp}\n                        modalStateName=\"modalEditTire\" \n                        isOpen={this.state.modalEditTire}\n                        toggleFunc={this.setModalInterComp}\n                        editFunc={this.updateTireInDB}\n                        forTire={tireTemp}\n                        />\n\n                      \n                    \n\n                    </DropdownItem>\n                    <DropdownItem onClick={() => this.toggleModal(\"modalDeleteTire\")}>\n                      <i className=\"fas fa-trash-alt\"/>\n                      <span>Sil</span> \n                      <ModalInformation headerTitle=\"Dikkat!\" \n                                        mainTitle={tireTemp.mainInfo()}\n                                        confirmButtonName=\"Onaylıyorum, sil.\"\n                                        question={deleteConfirmQstn}\n                                        isOpen={this.state.modalDeleteTire}\n                                        modalStateName=\"modalDeleteTire\"\n                                        toggleFunc={this.setModalInterComp}\n                                        confirmFunc={this.deleteTireFromDB}\n                                        forTire={tireTemp}\n                      />\n\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </td> \n            </tr>\n          )\n        \n                      \n        })\n      \n  }\n\n  \n  \n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <div className=\"col\">\n            <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <h3 className=\"mb-0\">Yeni Lastik Tanimi</h3>\n                </CardHeader>\n                {/* <CardBody className=\"bg-secondary shadow\"> */}\n                <CardBody>\n                <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Lastik Bilgileri\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label htmlFor=\"tanim-marka\"\n                                className=\"form-control-label\"\n                              >\n                                Marka\n                              </label>\n                            \n                              \n                              <Input type=\"text\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-marka\"\n                              placeholder=\"Yeni Lastik Markasini Girin\"\n                              // onChange={this.inputTyped}\n                              \n                              />\n                               \n\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label htmlFor=\"tanim-model\"\n                                className=\"form-control-label\"\n                              >\n                                Desen\n                              </label>\n                            \n                              \n                              <Input type=\"text\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-model\"\n                              placeholder=\"Yeni Lastik Deseni Girin\"\n                              // onChange={this.inputTyped}\n                              \n                              />\n                               \n\n                          </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                          <label htmlFor=\"tanim-taban\"\n                                className=\"form-control-label\"\n                              >\n                                Taban\n                              </label>\n                            \n                              \n                              <Input type=\"number\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-taban\"\n                              placeholder=\"155<->325\"\n                              min=\"155\"\n                              max=\"325\"\n                              step=\"10\"\n                              // onChange={this.inputTyped}\n                              />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"tanim-oran\"\n                                className=\"form-control-label\"\n                              >\n                                Oran\n                              </label>\n                            \n                              \n                              <Input type=\"number\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-oran\"\n                              placeholder=\"20<->95\"\n                              min=\"20\"\n                              max=\"95\"\n                              step=\"5\"\n                              // onChange={this.inputTyped}\n                              />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                          <label htmlFor=\"tanim-jant\"\n                                className=\"form-control-label\"\n                              >\n                                Jant\n                              </label>\n                            \n                              \n                              <Input type=\"text\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-jant\"\n                              placeholder=\"Rxx\"\n                              // onChange={this.inputTyped}\n                              />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"tanim-yuk\"\n                                className=\"form-control-label\"\n                              >\n                                Yuk Endeksi\n                              </label>\n                            \n                              \n                              <Input type=\"number\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-yuk\"\n                              placeholder=\"70<->130\"\n                              min=\"70\"\n                              max=\"130\"\n                              step=\"1\"\n                              // onChange={this.inputTyped}\n                              />\n                              \n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"tanim-hiz\"\n                                className=\"form-control-label\"\n                              >\n                                Hiz Endeksi\n                              </label>\n                            \n                              \n                              <Input type=\"text\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-hiz\"\n                              maxLength=\"1\"\n                              // onChange={this.inputTyped}\n                              />\n                          </FormGroup>\n                        </Col>\n                    </Row>    \n                    <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label htmlFor=\"tanim-yanak\"\n                              className=\"form-control-label\"\n                              \n                            >\n                              Yanak Yapisi\n                            </label>\n\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"tanim-yanak\"\n                              type=\"text\"\n                              placeholder=\"Lastik Yanaklari\"\n                              // onChange={this.inputTyped}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label htmlFor=\"tanim-mevsim\"\n                              className=\"form-control-label\"\n                              \n                            >\n                              Mevsim\n                            </label>\n\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"tanim-mevsim\"\n                              placeholder=\"Yaz/Kis/4Mevsim..\"\n                              type=\"text\"\n                              // onChange={this.inputTyped}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                        <FormGroup > \n                              <label htmlFor=\"tanim-diger\"\n                                className=\"form-control-label\"\n                              >\n                                Diger\n                              </label>\n                            \n                              \n                              <Input type=\"text\"\n                              placeholder=\"Ek ozellikler...\" \n                              className=\"form-control-alternative\"\n                              id=\"tanim-diger\"\n                              // onChange={this.inputTyped}\n                              />\n          \n                            </FormGroup> \n                        </Col>\n                    </Row>\n                    \n                    <Row>\n                      {/* <FormGroup>  */}\n                        <Col lg=\"3\">\n                          {/* <FormGroup>        */}\n                                <Button block className=\"btn-icon btn-3\" color=\"danger\" type=\"button\" \n                                    size=\"lg\" onClick={ this.resetForm } >\n                                  <span className=\"btn-inner--icon\">\n                                    {/* <i className=\"ni ni-folder-17\" /> */}\n                                    <i className=\"fas fa-eraser\" />\n                                  </span>\n                                  <span className=\"btn-inner--text\">Formu Temizle</span>\n                                </Button>\n                          {/* </FormGroup>  */}\n                        </Col>\n                        \n                        <Col lg=\"9\">\n                                \n                                <Button block className=\"btn-icon btn-3\" color=\"primary\" type=\"button\" \n                                    size=\"lg\" onClick={ this.insertNewTire } >\n                                  <span className=\"btn-inner--icon\">\n                                    {/* <i className=\"ni ni-folder-17\" /> */}\n                                    <i className=\"fas fa-save\" />\n                                  </span>\n                                  <span className=\"btn-inner--text\">Kaydet</span>\n                                </Button>\n                          {/* </FormGroup>  */}\n                        </Col>\n                    </Row>\n                      \n                    </div>\n                  </Form>\n                </CardBody>\n              </Card>\n            </div>\n          </Row>\n          {/* Dark table */}\n          <Row className=\"mt-5\" >\n            <div className=\"col\">\n              <Card className=\"bg-default shadow\">\n                <CardHeader className=\"bg-transparent border-0\">\n                  <h3 className=\"text-white mb-0\">Tanımlı Lastikler</h3>\n                </CardHeader>\n                <Table\n                  className=\"align-items-center table-dark table-flush\"\n                  responsive\n                >\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">Marka</th>\n                      <th scope=\"col\">Desen</th>\n                      <th scope=\"col\">Ebatlar</th>\n                      <th className=\"text-center\" scope=\"col\">Diğer</th>\n                      <th className=\"text-right\" scope=\"col\">Düzenle</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {this.renderStockData()}\n                    \n                  </tbody>\n                </Table>\n              </Card>\n            </div>\n          </Row>\n          <ModalInformation headerTitle=\"Hata!\" \n                                        mainTitle={this.state.errorMsg}\n                                        confirmButtonName=\"Tamam\"\n                                        question=\"Uzgunuz yapmak istediginiz islem Hatali.\"\n                                        isOpen={this.state.modalError}\n                                        modalStateName=\"modalError\"\n                                        toggleFunc={this.setModalInterComp}\n                                        // confirmFunc={this.deleteTireFromDB}\n                                        // forTire={tireTemp}\n                      />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Tanim;\n\n\n                     // </ModalInformation><Modal\n                      //   className=\"modal-dialog-centered modal-danger\"\n                      //   contentClassName=\"bg-gradient-danger\"\n                      //   isOpen={this.state.modalDeleteTire}\n                      //   toggle={() => this.toggleModal(\"modalDeleteTire\",tire)}\n                      //   backdrop=\"static\"\n                      // >\n                      //   <div className=\"modal-header\">\n                      //     <h6 className=\"modal-title\" id=\"modal-title-notification\">\n                      //       Dikkat!\n                      //     </h6>\n                      //     <button\n                      //       aria-label=\"Close\"\n                      //       className=\"close\"\n                      //       data-dismiss=\"modal\"\n                      //       type=\"button\"\n                      //       onClick={() => this.toggleModal(\"modalDeleteTire\",tire)}\n                      //     >\n                      //       <span aria-hidden={true}>×</span>\n                      //     </button>\n                      //   </div>\n                      //   <div className=\"modal-body\">\n                      //     <div className=\"py-3 text-center\">\n                      //       <i className=\"ni ni-bell-55 ni-3x\" />\n                      //       {/* <h4 className=\"heading mt-4\">{editPopupTitle} - {otherInfo}</h4> */}\n                      //       <h4 className=\"heading mt-4\">{this.printTireInfo(this.state.selectedTire)}</h4>\n                      //       <p>\n                      //         Yukarda belirtilen lastiği envanterden silmek üzeresiniz.\n                      //         Onaylıyor musunuz?\n                      //       </p>\n                      //     </div>\n                      //   </div>\n                      //   <div className=\"modal-footer\">\n                      //     <Button className=\"btn-white\" color=\"default\" type=\"button\"\n                      //             onClick={() => this.deleteTireFromDB(this.state.selectedTire)}>\n                      //       Onaylıyorum, sil.\n                      //     </Button>\n                      //     <Button\n                      //       className=\"text-white ml-auto\"\n                      //       color=\"link\"\n                      //       data-dismiss=\"modal\"\n                      //       type=\"button\"\n                      //       onClick={() => this.toggleModal(\"modalDeleteTire\",tire)}\n                      //     >\n                      //       Vazgeç\n                      //     </Button>\n                      //   </div>\n                      // </Modal>\n                      //)} \n\n// printTireInfo = (tire) => {\n   \n  //   if (this.state.isTireSelected ) { \n    \n  //   let { _id,owner_id,marka,taban,oran,jant,yukEndeksi,hizEndeksi,desen,yanakYapisi,mevsim,diger } = tire; //destructuring   \n  //   const ebat = String(taban).concat(\" / \").concat(String(oran))\n  //                   .concat(\" / \").concat(jant)\n  //                     .concat(\" / \").concat(yukEndeksi)\n  //                       .concat(\" / \").concat(hizEndeksi);\n\n  \n  //   const otherInfo = \"Desen: \".concat(desen).concat(\n  //                     \"\\n\\t Yanak: \".concat(yanakYapisi)).concat(\n  //                     \"\\n\\t Mevsim: \".concat(mevsim).concat(\n  //                     \"\\n\\t Diğer: \".concat(diger)));\n    \n  //                     console.log(\"otherinfi:\",otherInfo);\n  //   const editPopupTitle = marka.concat(\" - \").concat(ebat);\n  //   return editPopupTitle.concat(\" - \").concat(otherInfo);\n  //   }\n  //   else\n  //     return null;\n  // }","import React, {Component} from 'react';\nimport Tire from \"../../Tire.js\";\nimport Datepicker from \"../../Datepicker.jsx\";\nimport {\n    Button,\n    Container,\n    Modal,\n    Row,\n    Col,\n    Form,\n    FormGroup,\n    Input\n\n} from \"reactstrap\";\n\n\nexport default class ModalEditTrxAlis extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isOnScreen: props.isOpen,\n            editedDate : props.trx.tarih,\n            birimMaliyet: props.trx.birimMaliyet,\n            alisAdet : props.trx.alisAdet\n\n            \n        }\n    }\n\n\n    componentWillMount(){\n        \n         console.log(\"componentWillMount: @ModaalEditTrxAlis\");\n         \n         console.log(\"++isOpen \", this.props.isOpen,this.props.trx);\n\n    }\n    \n    \n\n    toggleModal = ()=> {\n        this.setState({\n          isOnScreen: !this.state.isOnScreen\n        });\n        \n        this.props.toggleFunc(this.props.modalStateName);\n      };\n\n    dateChanged = (value) => {\n        console.log(\"inputDateChangeCalled : \",value);\n          this.setState({\n            editedDate: value // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\n            \n          });\n          // this.setState((state)=>{\n          //     let selectedDate = event.target.value;\n          //     return selectedDate\n          //   });\n      }\n\n    numInputChanged = (event) => {\n        debugger;\n        console.log(\"asdasd\", event);\n        let input = event.target.id.substring(14);\n        let x = Number(event.target.value);\n        if (x > 0){\n            this.setState( { [input]: x });\n        }\n    }\n\n    saveUpdates = () => {\n\n        this.setState({\n            isOnScreen: !this.state.isOnScreen\n        });\n\n\n        // console.log(\"+++iNPUT TIRE:\",this.tire._id.idInfoToString(),\"=>\", this.tire._id.idInfoToString() );\n       \n        let eskiAdet = this.props.trx.alisAdet;\n        let eskiTotMaliyet = this.props.trx.birimMaliyet * this.props.trx.alisAdet ;\n        this.props.trx.birimMaliyet = Number(document.getElementById(\"edit-modalTrx-birimMaliyet\").value);\n        this.props.trx.alisAdet     = Number(document.getElementById(\"edit-modalTrx-alisAdet\").value);\n        //this.props.trx.tarih        = document.getElementById(\"edit-modalTrx-tarih\").value; -- ? Not working\n        this.props.trx.tarih        = this.state.editedDate ;\n        console.log(\"-i- saveUpdates@ModalEditTrxAlis: new trx: \", this.props.trx);\n        \n        this.props.editFunc(this.props.trx,eskiAdet, eskiTotMaliyet  );\n    }\n\n    // renderFormItems(){\n    //     return this.props.editableFields.map((item, index) => {\n    //         let inputId = \"edit-modalTrx-\".concat(index);\n    //         return (\n    //             <FormGroup row>\n    //                     {/* <Col sm=\"6\"> */}\n    //                     <Col className=\"text-right\" sm=\"3\" >    \n    //                         <label htmlFor={inputId}\n    //                             className=\"form-control-label\"\n    //                             sm=\"2\"\n    //                         >\n    //                          {item.label} \n    //                         </label>\n    //                     </Col>\n    //                     {/* </Col>         */}\n    //                     <Col sm=\"9\"> \n    //                         <Input type={item.type} \n    //                                 className=\"form-control-alternative\"\n    //                                 id={inputId}\n    //                                 placeholder={item}\n    //                                 defaultValue={this}\n    //                         />\n    //                     </Col>\n    //                 </FormGroup>\n    //         );\n    //     })\n    // }\n\n\n     \n    render(){\n       // const _birimMaliyet = this.props.trx.birimMaliyet;\n        \n        return (\n            // console.log(\"<<<<<<<<\", tire);\n            <Modal\n                className=\"modal-dialog-centered\"\n                 isOpen={this.state.isOnScreen}\n                // toggle={() => this.toggleModal()}\n            >\n                <div className=\"modal-header\">\n                    <h3 className=\"modal-title\" id=\"modal-title-default\">\n                    {this.props.title}\n                    </h3>\n                    <button\n                    aria-label=\"Close\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    type=\"button\"\n                    onClick={() => this.toggleModal()}\n                    >\n                    <span aria-hidden={true}>×</span>\n                    </button>\n                    \n                </div>\n                \n                <div className=\"modal-body\">\n                {/* <hr className=\"my-4\" /> */}\n                <Form>\n                    \n                    \n                    <FormGroup row>\n                        {/* <Col sm=\"6\"> */}\n                        <Col sm=\"6\">    \n                            <label htmlFor=\"edit-modalTrx-birimMaliyet\"\n                                className=\"form-control-label\"\n                                sm=\"2\"\n                            >\n                             Birim Maliyeti (KDV Dahil) \n                            </label>\n                            <Input type=\"number\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modalTrx-birimMaliyet\"\n                                    placeholder={this.props.trx.birimMaliyet}\n                                    min=\"1\"\n                                    //defaultValue={this.props.trx.birimMaliyet}\n                                    onChange={this.numInputChanged}\n                                    value={this.state.birimMaliyet}\n                            />\n                        </Col>\n                         <Col lg=\"6\">\n                            <label htmlFor=\"edit-modalTrx-alisAdet\"\n                                className=\"form-control-label\"\n                                sm=\"2\"\n                            >\n                                Adet\n                            </label>\n                        {/* </Col>         */}\n                \n                            <Input type=\"number\" \n                                    className=\"form-control-alternative\"\n                                    id=\"edit-modalTrx-alisAdet\"\n                                    min= \"1\"\n                                    placeholder={this.props.trx.alisAdet}\n                                    //defaultValue={this.props.trx.alisAdet}\n                                    onChange={this.numInputChanged}\n                                    value={this.state.alisAdet}\n\n                            />\n                        </Col>\n                        \n                        </FormGroup>\n\n                        <FormGroup row className=\"justify-content-md-center\">\n                        <Col sm=\"12\">\n                        <label htmlFor=\"edit-modalTrx-tarih\"\n                            className=\"form-control-label\"\n                            sm=\"3\"\n                            >\n                            Tarih\n                        </label>\n                        \n                            <Datepicker \n                                id=\"edit-modalTrx-tarih\"\n                                className=\"form-control-alternative\"\n                                placeholder = {this.props.trx.tarih}\n                                // defaultValue={new Date()}                          \n                                value={this.state.editedDate}\n                                onChange={this.dateChanged}\n                            />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col className=\"text-left\">              \n                            <Button className=\"ml-auto\"\n                                    color=\"danger\"\n                                    data-dismiss=\"modal\"\n                                    type=\"button\"\n                                    onClick={() => this.toggleModal()}\n                            >\n                                Vazgeç\n                            </Button>  \n                        </Col> \n                        <Col className =\"text-right\" sm=\"9\">\n                            \n                            <Button color=\"primary\" \n                                    type=\"button\"\n                                    onClick={ () => this.saveUpdates() }    \n                                >\n                                Değişiklikleri Kaydet\n                            </Button>\n                        \n                        </Col>\n                    </FormGroup>       \n                   \n                </Form>\n            </div>\n\n            </Modal>\n            );\n        }\n    }","import React, {Component} from 'react';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Container,\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    FormGroup,\n    Input,\n    Media,\n    Row,\n    UncontrolledDropdown,\n    UncontrolledTooltip,\n    Table\n} from \"reactstrap\";\n\nimport ModalTrxDelConfirm from \"./ModalTrxDelConfirm\";\nimport Tire from \"../../Tire.js\";\nimport ModalEditTrxAlis from './ModalEditTrxAlis';\n\n\nexport default class AlisDataTable extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            columnTitles : props.columnTitles\n            \n\n        }\n    }\n    componentDidMount(){\n        console.log(\"DataTable componentDidMount\");\n        console.log(\"Column headers: \", this.props.isEditModalVisible);\n \n    }\n\n    addMarkaFilter = (event) => {\n\n        console.log(\"addFilter@AlisDataTable event: \", event.currentTarget.textContent,);\n\n        this.props.filterFunc({marka: event.currentTarget.textContent});\n    }\n\n    addTarihFilter = (event) => {\n\n        console.log(\"addFilter@AlisDataTable event: \", event.currentTarget.textContent,);\n\n        this.props.filterFunc({tarih: event.currentTarget.textContent});\n    }\n\n    renderColumnTitles = () => {\n      \n      \n        return this.state.columnTitles.map( (item,index)=>{\n              var filterIcon;\n               console.log(index,item,this.props.filter);\n               let thKey = \"thColHdr\"+index;\n               let filterId = \"iFilterId\"+index;\n               switch (item) {\n                 case \"Marka\":\n                    if (this.props.filter.marka){\n                        filterIcon = 'fas fa-filter text-green';  \n                    }else{\n                        filterIcon = 'fas fa-filter';  \n                    }\n                    return (<th scope=\"col\" key={thKey} >{item}\n\n                              <UncontrolledDropdown direction=\"right\">\n                                <DropdownToggle className=\"pr-0\" nav>\n                                  <i className={filterIcon} id={filterId} /> \n                                </DropdownToggle>\n                                <DropdownMenu className=\"dropdown-menu-arrow\">\n                                  { this.renderMarkaFilterOptions()}\n                                  { this.props.filter.marka && \n                                      <DropdownItem divider /> \n                                  }\n                                  { this.props.filter.marka && \n                                      <DropdownItem key=\"removeFilter\" onClick={this.addMarkaFilter}>\n                                        <span>Filtreyi Kaldır</span>\n                                      </DropdownItem>\n                                  }\n                                  </DropdownMenu>  \n                              </UncontrolledDropdown>\n                              </th>) ;\n                 case \"Tarih\":\n                    if (this.props.filter.tarih){\n                      filterIcon = 'fas fa-filter text-green';  \n                    }else{\n                      filterIcon = 'fas fa-filter';  \n                    }\n                    return (<th scope=\"col\" key={thKey} >{item}\n                              <UncontrolledDropdown direction=\"right\">\n                                <DropdownToggle className=\"pr-0\" nav>\n                                  <i className={filterIcon} id={filterId} /> \n                                </DropdownToggle>\n                                <DropdownMenu className=\"dropdown-menu-arrow\">\n                                  { this.renderTarihFilterOptions() }                          \n                                  { this.props.filter.tarih && \n                                      <DropdownItem divider /> \n                                  }\n                                  { this.props.filter.tarih && \n                                      \n                                      <DropdownItem key=\"removeFilter-tarih\" onClick={this.addTarihFilter}>\n                                          <span>Filtreyi Kaldır</span>\n                                      </DropdownItem>\n                                  }\n                                </DropdownMenu>  \n                              </UncontrolledDropdown>\n                            </th>) ;\n                 default:\n                 return (<th scope=\"col\" key={thKey} >{item}</th>) ;\n               }\n           \n             \n            \n\n          });\n    }\n\n    renderMarkaFilterOptions(){\n        return this.props.markaFilterOptions.map(element => {\n            return (\n              // <DropdownItem onClick={() => this.toggleModal(\"modalEditTire\")}>\n              <DropdownItem key={element} onClick={this.addMarkaFilter}>\n                            <span>{element}</span>\n              </DropdownItem>\n            )\n        });\n    }\n\n    renderTarihFilterOptions(){\n      return this.props.tarihFilterOptions.map(element => {\n          return (\n            // <DropdownItem onClick={() => this.toggleModal(\"modalEditTire\")}>\n            <DropdownItem key={element} onClick={this.addTarihFilter}>\n                          <span>{element}</span>\n            </DropdownItem>\n          )\n      });\n    }\n   \n\n    // renderRows = () => {\n    renderRows(){\n        \n        return this.props.data.map((item, index) => {\n            let tireTemp = new Tire(item);\n            let deleteConfirmQstn =\"Yukarda belirtilen alım işlemini envanterden silmek üzeresiniz.\\nOnaylıyor musunuz?\"\n            let purchaseTrx = item ;\n\n            const { _id,owner_id,marka,model,taban,oran,jant,yukEndeksi,hizEndeksi,yanakYapisi,mevsim,diger,tarih,alisAdet,birimMaliyet } = item; //destructuring\n            const dbRowId = _id;\n            const ebat = String(taban).concat(\" / \").concat(String(oran))\n                            .concat(\" / \").concat(jant)\n                                .concat(\" / \").concat(yukEndeksi)\n                                .concat(\" / \").concat(hizEndeksi);\n\n            const tooltipID = \"tooltip\".concat(_id.toString());\n            const rowId = \"r\".concat(_id.toString());\n            const otherInfo = \"Yanak: \".concat(yanakYapisi).concat(\n                                \"\\n\\t\\t  Mevsim: \".concat(mevsim).concat(\n                                \"\\n\\t Diğer: \".concat(diger)));\n            \n                                console.log(\"otherinfi:\",otherInfo);\n\n            const deleteModalTitle = tireTemp.mainInfo() + \" için, \\n\" + \n                                    tarih + \" tarihinde\\n\"  +\n                                    birimMaliyet+\"₺ fiyatından\\n\" +\n                                    alisAdet+ \" adet satın alım işlemi\"\n\n            const editPopupTitle = marka.concat(\" \").concat(model).concat(\" - \").concat(ebat);\n            \n            var infoIcon = 'fas fa-info-circle text-info';\n            var settingsIcon = 'ni ni-settings text-info';\n            var ebatIcon = 'fas fa-car-side text-info';\n            const editModalValues =[birimMaliyet,alisAdet,tarih];\n            \n                                        \n            \n            return (\n            <tr key={rowId}>\n              <th scope=\"row\">\n                <Media className=\"align-items-center\">\n                  <a\n                    className=\"avatar rounded-circle mr-3\"\n                    href=\"#pablo\"\n                    onClick={e => e.preventDefault()}\n                  >\n                        <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/sketch.jpg\")}\n                    />\n                  </a>\n                  <Media>\n                    <span className=\"mb-0 text-sm\">\n                      {marka}\n                    </span>\n                  </Media>\n                </Media>\n              </th>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {model}\n                </span>\n              </td>\n              <td>\n                  <i className={ebatIcon} /> {ebat}\n              </td>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {tarih}\n                </span>\n              </td>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {alisAdet}\n                </span>\n              </td>\n              <td>\n                <span className=\"mb-0 text-sm\">\n                  {birimMaliyet}\n                </span>\n              </td>\n              <td className=\"text-right\">\n              <span>\n                <i className={infoIcon} id={tooltipID} /> \n                  <UncontrolledTooltip\n                    delay={0}\n                    target={tooltipID}\n                  >\n                    {otherInfo}\n                  </UncontrolledTooltip>\n              </span>\n              <UncontrolledDropdown direction=\"left\">\n                  <DropdownToggle className=\"pr-0\" nav>\n                    <i className={settingsIcon} /> \n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-menu-arrow\">\n                    <DropdownItem className=\"noti-title\" header tag=\"div\">\n                      <h6 className=\"text-overflow m-0\">{editPopupTitle}</h6>\n                    </DropdownItem>\n                    <DropdownItem divider />\n\n                    <DropdownItem onClick={() => this.props.toggleFunc(\"modalEditPurchase\")}>\n                      <i className=\"fas fa-edit\" />\n                      <span>Düzenle</span>\n                      <ModalEditTrxAlis\n                        title={tireTemp.mainInfo()}\n                        tire={tireTemp}\n                        modalStateName={this.props.editModalStateName}\n                        isOpen={this.props.isEditModalVisible}\n                        toggleFunc={this.props.toggleFunc}\n                        editFunc={this.props.editFunc}\n                        trx={purchaseTrx}\n                        />\n\n                      \n                    \n\n                    </DropdownItem>\n                    <DropdownItem onClick={() => this.props.toggleFunc(\"modalDeletePurchase\")}>\n                      <i className=\"fas fa-trash-alt\"/>\n                      <span>Sil</span> \n                      <ModalTrxDelConfirm headerTitle=\"Dikkat!\" \n                                          mainTitle={deleteModalTitle}\n                                          confirmButtonName=\"Onaylıyorum, sil.\"\n                                          question={deleteConfirmQstn}\n                                          isOpen={this.props.isConfirmModalVisible}\n                                          modalStateName={this.props.deleteModalStateName}\n                                          toggleFunc={this.props.toggleFunc}\n                                          confirmFunc={this.props.confirmFunc}\n                                          id={dbRowId}\n                      />\n\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </td> \n            </tr>\n            )\n        })\n    };\n\n\n    render(){\n        return (\n                <Card className=\"bg-default shadow\">\n                {/* <Container className=\"mt--7\" fluid> */}\n                \n                    <CardHeader className=\"bg-transparent border-0\">\n                      <h3 className=\"text-white mb-0\">{this.props.mainTitle}</h3>\n                      {/* <Row>\n                        <Col xs=\"8\">\n                          <h3 className=\"text-white mb-0\">{this.props.mainTitle}</h3>\n                        </Col>\n                        <Col className=\"text-right\" xs=\"2\">\n                          {/* <div className=\"text-right\" xs=\"4\"> */}\n                          {/* <Input type=\"select\" \n                                  // className=\"form-control-alternative\"\n                                  className = \"form-control-alternative\"\n                                  id=\"alis-marka\"\n                                  md= \"4\"\n                                  //value={this.state.selectedBrand}\n                                // onChange={this.anOptionSelected}\n                                  >\n                                  <option>Marka</option>\n                                </Input>\n                              {/* </div> *\n                        </Col>\n                      </Row> */} \n                    </CardHeader>\n\n                \n                \n                        \n            \n                \n              {/* </Container> */}\n                        <Table\n                        className=\"align-items-center table-dark table-flush\"\n                        responsive\n                        >\n                        <thead className=\"thead-dark\">\n                            <tr>\n                            {this.renderColumnTitles()}\n                            \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.renderRows()} \n                        </tbody>\n                    </Table>\n                </Card>\n       \n        );\n    }\n}","/*!\n\n\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react component that copies the given text inside your clipboard\n//import { CopyToClipboard } from \"react-copy-to-clipboard\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Form,\n\n  FormGroup,\n  Input,\n  Row,\n  Col,\n\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.jsx\";\nimport Datepicker from \"../../Datepicker.jsx\";\nimport AlisDataTable from \"./AlisDataTable.jsx\";\n\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\";\n\n//import { noop } from \"@babel/types\";\n//import { thisTypeAnnotation } from \"@babel/types\";\n//import { eventNames } from \"cluster\";\nimport 'moment';\n/***********************************************************************/\n/* DB STUFF */\n//const client = Stitch.initializeDefaultAppClient(\"lastikpark-ogewz\");\nconst client = Stitch.getAppClient(\"lastikpark-ogewz\");\nconst mongodb = client.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n);\n\nconst db = mongodb.db(\"lastikParkDB\");\n\nclient.auth.loginWithCredential(new AnonymousCredential()).then(user => {\n  console.log(`Logged in as anonymous user with id: ${user.id}`);\n}).catch(console.error);\n/***********************************************************************/\n/* Formatting Currency */\nvar formatTRY = new Intl.NumberFormat('tr-TR', {\n    style: 'currency',\n    currency: 'TRY',\n    minimumFractionDigits: 2,\n  });\n\nvar currency_symbol = \"₺\"\n\nclass Alis extends React.Component {\n  constructor(props) {\n    super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n    this.state = {\n         tireSelected : {}\n        ,queryResulted1 : false\n        ,definedBrands : []\n        ,modelsForTheBrand : []\n        ,tabansForSelection : []\n        ,oransForSelection : []\n        ,jantsForSelection : []\n        ,yukEndeksForSelection : []\n        ,hizEndeksForSelection :[]\n        ,yanaksForSelection : []\n        ,mevsimsForSelection : []\n        ,otherInfo: []\n        ,purchases : []\n        \n        ,selectedBrand : \"\"\n        ,selectedModel : \"\"\n        ,selectedTaban : \"\"\n        ,selectedOran : \"\"\n        ,selectedJant : \"\"\n        ,selectedYuk : \"\"\n        ,selectedHiz : \"\"\n        ,selectedYanak : \"\"\n        ,selectedMevsim : \"\"\n        ,selectedOther : \"\"\n        ,selectedDate : \"\"\n        ,birimMaliyet : \"\" \n        ,alisAdet : \"\"\n        ,toplamMaliyet :\"\"\n        ,wrongInputs : [] //To display error on wrong/unfilled input fields\n        ,saveButtonPressed : false\n\n        //Modals:\n        ,modalDeletePurchase : false\n        ,modalEditPurchase : false\n\n        //Filters\n        ,filterArrayMarka : []\n        ,filterArrayTarih : []\n        ,filterApplied : {}\n\n    }\n    \n    //let definedBrands = [];\n    // const editableFields = [{label: \"Birim Maliyet(KDV Dahil)\", type=\"number\",mapsTo: \"birimMaliyet\" },\n    //                         {label: \"Adet\", type : \"number\", mapsTo: \"alisAdet\"},\n    //                         {label: \"Tarih\", type : \"date\", mapsTo: \"tarih\" } ];\n  }\n  \n\n  componentWillMount(){\n      db.collection(\"inventoryCollection\").find().toArray().then(dbResults => {\n        \n            console.log(\"will DB Results:\",dbResults);\n            \n            //prepare Options\n            let distinctMarkaValues = [...new Set(dbResults.map( value => value.marka))].sort();\n            let distinctModelValues = [...new Set(dbResults.map( value => value.model))].sort();\n            let distinctTabanValues = [...new Set(dbResults.map( value => value.taban))].sort();\n            let distinctOranValues = [...new Set(dbResults.map( value => value.oran))].sort();\n            let distinctJantValues = [...new Set(dbResults.map( value => value.jant))].sort();\n            let distinctYukValues = [...new Set(dbResults.map( value => value.yukEndeksi))].sort();\n            let distinctHizValues = [...new Set(dbResults.map( value => value.hizEndeksi))].sort();\n            let distinctYanakValues = [...new Set(dbResults.map( value => value.yanakYapisi))].sort();\n            let distinctMevsimValues = [...new Set(dbResults.map( value => value.mevsim))].sort();\n            let distinctDigerValues = [...new Set(dbResults.map( value => value.diger))].sort();\n    \n           \n            this.setState({ definedBrands : distinctMarkaValues ,\n                            modelsForTheBrand : distinctModelValues ,\n                            tabansForSelection : distinctTabanValues ,\n                            oransForSelection : distinctOranValues ,\n                            jantsForSelection : distinctJantValues ,\n                            yukEndeksForSelection : distinctYukValues ,\n                            hizEndeksForSelection : distinctHizValues ,\n                            yanaksForSelection : distinctYanakValues,\n                            mevsimsForSelection : distinctMevsimValues,\n                            otherInfo : distinctDigerValues           \n            });\n        })\n        .catch(console.error);\n\n        db.collection(\"purchaseCollection\").find().toArray().then(dbResults => {\n        \n          console.log(\"will DB Results:\",dbResults);\n          \n          //prepare Options\n          let distinctFilterMarkaValues = [...new Set(dbResults.map(value => value.marka))].sort();\n          let distinctFilterTarihValues = [...new Set(dbResults.map(value => value.tarih))].sort();\n  \n         \n          this.setState({ filterArrayMarka : distinctFilterMarkaValues\n                         ,filterArrayTarih : distinctFilterTarihValues       \n          });\n        })\n        .catch(console.error);\n\n        \n\n        this.refreshPurchaseTable(this.state.filterApplied);\n\n      \n            \n  }\n  \n\n  levelforOption = (optionName) => {\n      switch (optionName) {\n        case \"marka\": return 1\n        case \"model\": return 2\n        case \"taban\": return 3\n        case \"oran\":  return 4\n        case \"jant\": return 5\n        case \"yuk\": return 6\n        case \"hiz\": return 7\n        case \"yanak\": return 8\n        case \"mevsim\": return 9 \n        case \"diger\": return 10\n        default: return 0\n      }\n  }\n\n  findLevelAfterDeselect = (obj,selOpt) =>{\n      console.log(Object.keys(obj));\n      let returnValue = 0;\n      Object.keys(obj).map( (prop,index) => {\n          console.log(index,prop);\n          if ( returnValue < this.levelforOption(prop) \n                && this.levelforOption(prop) < this.levelforOption(selOpt) ) {\n                  returnValue = this.levelforOption(prop) ;\n                }\n\n      });\n      return returnValue;\n  }\n\n\n\n  adetChanged = (event) => {\n    let birimMaliyet = this.state.birimMaliyet;\n    let toplamMaliyet = birimMaliyet * event.target.value;\n    let birimKdvsiz = birimMaliyet / 1.18 ;\n    let toplamKdvsiz = toplamMaliyet / 1.18 ;\n    document.getElementById(\"alis-birim-maliyet-kdvsiz\").value = ((Number.isNaN(birimKdvsiz)) ? \"\" : formatTRY.format(birimKdvsiz) ) ;\n    document.getElementById(\"alis-toplam-maliyet-kdvsiz\").value = ((Number.isNaN(toplamKdvsiz)) ? \"\" : formatTRY.format(toplamKdvsiz) ) ;\n    this.setState({alisAdet: event.target.value,toplamMaliyet: toplamMaliyet});\n\n  }\n\n  inputBirimChanged = (event) => {\n      let toplamMaliyet;\n      let birimMaliyet = event.target.value;\n      \n      this.setState( (state) => {\n          toplamMaliyet = state.toplamMaliyet;\n          if (birimMaliyet === \"\") {\n              toplamMaliyet = \"\";\n          }else{\n              if ( state.alisAdet > 0 ) {\n                  toplamMaliyet = birimMaliyet * state.alisAdet ;\n              }else{\n                  toplamMaliyet = \"\";\n              }\n          }\n        \n\n          let birimKdvsiz = birimMaliyet / 1.18 ;\n          let toplamKdvsiz = toplamMaliyet / 1.18 ;\n\n\n          document.getElementById(\"alis-birim-maliyet-kdvsiz\").value = ((Number.isNaN(birimKdvsiz)) ? \"\" : formatTRY.format(birimKdvsiz) ) ;\n          document.getElementById(\"alis-toplam-maliyet-kdvsiz\").value = ((Number.isNaN(toplamKdvsiz)) ? \"\" : formatTRY.format(toplamKdvsiz) ) ;\n          \n          return { birimMaliyet,toplamMaliyet };\n\n     }); \n  }\n\n  inputToplamChanged = (event) => {\n    let birimMaliyet;\n    let toplamMaliyet = event.target.value;\n    \n    this.setState((state) => {\n        birimMaliyet = state.birimMaliyet;\n        if (toplamMaliyet === \"\"){\n            birimMaliyet = \"\";\n        }else{\n            if (state.alisAdet > 0 ) {\n                birimMaliyet = toplamMaliyet / state.alisAdet ;\n            }else{\n              birimMaliyet = \"\";\n            }\n        }\n\n        \n        let birimKdvsiz = formatTRY.format(birimMaliyet / 1.18 );\n        let toplamKdvsiz = formatTRY.format(toplamMaliyet / 1.18 );\n\n        document.getElementById(\"alis-birim-maliyet-kdvsiz\").value = (Number.isNaN(birimKdvsiz) ? \"\" : birimKdvsiz );\n        document.getElementById(\"alis-toplam-maliyet-kdvsiz\").value = (Number.isNaN(toplamKdvsiz) ? \"\" : toplamKdvsiz );\n        return { birimMaliyet,toplamMaliyet };\n    });\n      \n  }\n\n  inputDateChanged = (value) => {\n    console.log(\"inputDateChangeCalled : \",value);\n      this.setState({\n        selectedDate: value // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\n        \n      });\n      // this.setState((state)=>{\n      //     let selectedDate = event.target.value;\n      //     return selectedDate\n      //   });\n  }\n\n  inputDateChanged2 = (value,formattedValue) => {\n    console.log(\"value2, formattedVal2: \",value,formattedValue);\n    this.setState({\n      selectedDate2: value, // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\n      formattedDate2: formattedValue // Formatted String, ex: \"11/19/2016\"\n    });\n    // this.setState((state)=>{\n    //     let selectedDate = event.target.value;\n    //     return selectedDate\n    //   });\n  }\n\n\n  inputSetCorrectlyFor = (inputField) => {\n      let decision = true;\n      // inputField = inputField.substring(5);\n      if (this.state.saveButtonPressed){\n        switch (inputField) {\n          case \"marka\":\n              decision = (this.state.selectedBrand === \"\") ? false : true ;\n            break;\n          case \"model\":\n              decision = (this.state.selectedModel === \"\") ? false : true ;\n            break;\n          case \"taban\":\n              decision = (this.state.selectedTaban === \"\") ? false : true ;\n            break;\n          case \"oran\":\n              decision = (this.state.selectedOran === \"\") ? false : true ;\n            break;\n          case \"jant\":\n              decision = (this.state.selectedJant === \"\") ? false : true ;\n            break;\n          case \"yuk\":\n              decision = (this.state.selectedYuk === \"\") ? false : true ;\n            break;\n          case \"hiz\":\n              decision = (this.state.selectedHiz === \"\") ? false : true ;\n            break;\n          case \"yanak\":\n              decision = (this.state.selectedYanak === \"\") ? false : true ;\n            break;\n          case \"mevsim\":\n              decision = (this.state.selectedMevsim === \"\") ? false : true ;\n            break;\n          case \"diger\":\n              decision = (this.state.selectedOther === \"\") ? false : true ;\n            break;\n          case \"birim\":\n            decision = (this.state.birimMaliyet === \"\" || this.state.birimMaliyet == 0 ) ? false : true ;\n            break;\n          case \"adet\":\n            decision = (this.state.alisAdet === \"\" || this.state.alisAdet == 0 ) ? false : true ;\n            break;\n          case \"toplam\":\n            decision = (this.state.toplamMaliyet === \"\" || this.state.toplamMaliyet == 0 ) ? false : true ;\n            break;\n          default:\n            break;\n        }\n      }\n      return decision;\n   }\n\n  allInputsSetCorrectly = () => {\n\n      let setCorrect = true ;\n      let tempArray = [];\n      if (this.state.selectedBrand === \"\"){\n          tempArray.push(\"Marka\");\n          setCorrect = false;\n          \n      }\n      if (this.state.selectedModel === \"\" ){\n          tempArray.push(\"Desen\");\n          setCorrect = false;\n      }\n      if (this.state.selectedTaban === \"\" ){\n          tempArray.push(\"Taban\");\n          setCorrect = false;\n      }\n      if (this.state.selectedOran === \"\" ){\n          tempArray.push(\"Oran\");\n          setCorrect = false;\n      }\n      if (this.state.selectedJant === \"\" ) {\n          tempArray.push(\"Jant\");\n          setCorrect = false;\n      }\n      if (this.state.selectedYuk === \"\"  ){\n         tempArray.push(\"Yuk Endeksi\");\n         setCorrect = false;\n      } \n      if (this.state.selectedHiz === \"\"  ){\n          tempArray.push(\"Hız Endeksi\");\n          setCorrect = false;\n      }\n      if (this.state.selectedYanak === \"\" ){\n          tempArray.push(\"Yanak\");\n          setCorrect = false;\n      }\n      if (this.state.selectedMevsim === \"\" ){\n          tempArray.push(\"Mevsim\");\n          setCorrect = false;\n      }\n      if (this.state.selectedOther === \"\" ){\n          tempArray.push(\"Diğer\");\n          setCorrect = false;\n      }\n\n      // if (this.state.selectedDate ){\n      //     tempArray.push(\"Tarih\");\n      //     setCorrect = false;\n      // }\n      if (this.state.birimMaliyet === \"\"  || this.state.birimMaliyet == 0){\n          tempArray.push(\"Birim-maliyet\");\n          setCorrect = false;\n      }\n      if (this.state.alisAdet === \"\" || this.state.alisAdet == 0){\n          tempArray.push(\"Adet\");\n          setCorrect = false;\n      }\n      if (this.state.toplamMaliyet === \"\" || this.state.toplamMaliyet == 0 ){\n          tempArray.push(\"Toplam-maliyet\");\n          setCorrect = false;\n      }\n\n\n      this.setState({saveButtonPressed : true,wrongInputs: tempArray});\n      \n    // ,selectedOran : \"\"\n    // ,selectedJant : \"\"\n    // ,selectedYuk : \"\"\n    // ,selectedHiz : \"\"\n    // ,selectedYanak : \"\"\n    // ,selectedMevsim : \"\"\n    // ,selectedOther : \"\"\n    // ,selectedDate : \"\"\n    // ,birimMaliyet : \"\" \n    // ,alisAdet : \"\"\n    // ,toplamMaliyet :\"\"\n      return setCorrect;\n  }\n\n  savePurchase = () => {\n\n      if ( this.allInputsSetCorrectly() ) {\n          let _marka = this.state.selectedBrand ;\n          let _model = this.state.selectedModel ;\n          let _taban = Number(this.state.selectedTaban);\n          let _oran = Number(this.state.selectedOran);\n          let _jant = this.state.selectedJant ;\n          let _yukEndeksi = Number(this.state.selectedYuk) ;\n          let _hizEndeksi = this.state.selectedHiz ;\n          let _yanakYapisi = this.state.selectedYanak ;\n          let _mevsim = this.state.selectedMevsim ;\n          let _diger = this.state.selectedOther;\n          let _birimMaliyet = Number(this.state.birimMaliyet);\n          let _alisAdet = Number(this.state.alisAdet);\n          let _tarih ;\n          if (this.state.selectedDate === \"\" ){\n              let today = new Date();\n              let dd = String(today.getDate()).padStart(2, '0');\n              let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n              let yyyy = today.getFullYear();\n              _tarih = dd + '/' + mm + '/' + yyyy;\n              alert(\"tarih\",_tarih);\n          }else{\n              _tarih = this.state.selectedDate;\n          }\n          db.collection(\"purchaseCollection\")\n            .insertOne({\n              owner_id: client.auth.user.id,\n              marka: _marka,\n              model: _model,\n              taban: _taban,\n              oran: _oran,\n              jant: _jant,\n              yukEndeksi: _yukEndeksi,\n              hizEndeksi: _hizEndeksi,\n              yanakYapisi: _yanakYapisi,\n              mevsim: _mevsim,\n              diger: _diger ,\n              tarih : _tarih ,\n              alisAdet : _alisAdet ,\n              birimMaliyet : _birimMaliyet     \n            })\n            .then(remoteResult => {\n                console.log(\"Insert done with id:\",remoteResult.insertedId);\n                this.setState({saveButtonPressed: false});\n                this.refreshPurchaseTable(this.state.filterApplied); \n          }).catch(\n              //console.error\n                // this.displayError(console.error)\n                //console.log(err.message);\n                alert(console.error)\n                // console.log(error.message);\n                // this.setState({modalError: true,errorMsg : error.message});\n                //     );\n            );\n            let tirePurchased = {\n                \"owner_id\" : client.auth.user.id , //tire.owner_id = client.auth.user.id\n                \"marka\" : _marka ,\n                \"model\" : _model ,\n                \"taban\" : _taban ,\n                \"oran\"  : _oran ,\n                \"jant\"  : _jant ,\n                \"yukEndeksi\" : _yukEndeksi ,\n                \"hizEndeksi\" : _hizEndeksi ,\n                \"yanakYapisi\": _yanakYapisi ,\n                \"mevsim\": _mevsim ,\n                \"diger\" : _diger\n            };\n            this.updateStockWithPurchase(tirePurchased,_birimMaliyet,_alisAdet,);\n          \n      }\n      else{\n        // this.setState({saveButtonPressed:false});\n        alert(\"Eksik bilgi girişi yaptınız. Lütfen giriş yapmadığınız kırmızı ile işaretlenmiş alanları doldurun.\" ); \n        // if (this.state.wrongInputs.length === 0 ) {\n        //   alert(\"Eksik bilgi girişi yaptınız. Lütfen giriş yapmadığınız şu alanları doldurun: \" + errorText );\n        // }else{\n        //   let errorText;\n        //   this.state.wrongInputs.forEach( (item,index) =>{\n        //         debugger;\n        //           if (index === 0){\n        //             errorText = item.substring(5);\n        //           }else{\n        //               errorText += \", \" + item.substring(5);\n        //           }\n        //         });\n        //   alert(\"Eksik bilgi girişi yaptınız. Lütfen giriş yapmadığınız şu alanları doldurun: \" + errorText );\n        // }\n          \n      }\n\n    \n  }\n\n\n  \n  updateStockWithPurchase = (tire,fiyat,count) => {\n      db.collection(\"stockCollection\").find(tire).toArray().then(dbResults => {\n          if (dbResults.length > 0){\n              console.log(\"Stok:Tire found: \",dbResults);\n              let tireReturned = dbResults[0];\n              let newOrtMaliyet = ((tireReturned.ortMaliyet * tireReturned.alisAdet) + (fiyat * count)) / (tireReturned.alisAdet + count); \n              tireReturned.ortMaliyet = newOrtMaliyet ;\n              tireReturned.alisAdet = tireReturned.alisAdet + count;\n              tireReturned.stokAdet = tireReturned.stokAdet + count;\n\n              db.collection(\"stockCollection\")\n              .findOneAndReplace(tire,tireReturned).then(DocumentT => {\n                console.log(\"Updated document: \", DocumentT);\n                alert(\"stock table: Updated!!\");\n              }).catch(console.error);\n          }\n          else{\n              console.log(\"Stok Lastik bulunamadi:\");\n              \n              tire.alisAdet = count ;\n              tire.ortMaliyet = fiyat;\n              tire.satisAdet = 0;\n              tire.ortFiyat = 0;\n              tire.stokAdet = count ;\n\n              db.collection(\"stockCollection\")\n              .insertOne(tire)\n              .then(remoteResult => {\n                  console.log(\"Insert done with id:\",remoteResult.insertedId);\n                 \n                 \n            }).catch(\n              console.error\n            );\n          }\n      })\n      .catch(\n        console.error\n      );\n\n      //UPSERT:\n      // db.collection(\"stockCollection\").findOneAndUpdate(tire,{ $inc:{stokAdet: count} }, {upsert:true})\n      // .then(dbResults => {\n      //     debugger;\n      //     console.log(\"UPSERT COMPLETED:\", dbResults);\n      //     console.log(\"Insert done with id:\",dbResults.insertedId);\n      // })\n      // .catch(console.error);\n  }\n\n  editPurchase = (editedTrx,eskiAdet,eskiTotMaliyet) => {\n      db.collection(\"purchaseCollection\")\n      .findOneAndReplace({ _id: editedTrx._id },editedTrx).then(DocumentX => {\n        console.log(\"Updated document after editingPurchase: \", DocumentX);\n        let stockTire2beUpdated = {\n          \"marka\" : DocumentX.marka ,\n          \"model\" : DocumentX.model ,\n          \"taban\" : DocumentX.taban ,\n          \"oran\"  : DocumentX.oran ,\n          \"jant\"  : DocumentX.jant ,\n          \"yukEndeksi\" : DocumentX.yukEndeksi ,\n          \"hizEndeksi\" : DocumentX.hizEndeksi ,\n          \"yanakYapisi\": DocumentX.yanakYapisi ,\n          \"mevsim\": DocumentX.mevsim ,\n          \"diger\" : DocumentX.diger\n        };\n        //alert(\"stock table: Updated after Purchase Deletion!!\");\n        db.collection(\"stockCollection\").findOne(stockTire2beUpdated).then( DocumentT =>{\n          console.log(\"deletePurchase Method/ DocumentT2beUpdated: \",DocumentT)\n          //Lastigi buldun simdi stok tablosunu guncelle\n          if ((DocumentT.alisAdet - eskiAdet + editedTrx.alisAdet) !== 0 ){\n              DocumentT.ortMaliyet = ((DocumentT.ortMaliyet * DocumentT.alisAdet) - eskiTotMaliyet + (editedTrx.birimMaliyet * editedTrx.alisAdet) ) / (DocumentT.alisAdet - eskiAdet + editedTrx.alisAdet); \n          }else{\n              DocumentT.ortMaliyet = 0 ;\n          }\n           \n          DocumentT.alisAdet = DocumentT.alisAdet - eskiAdet + editedTrx.alisAdet ;\n          DocumentT.stokAdet = DocumentT.stokAdet - eskiAdet + editedTrx.alisAdet ;\n          \n          db.collection(\"stockCollection\")\n          .findOneAndReplace(stockTire2beUpdated,DocumentT).then(DocumentU => {\n\n            console.log(\"Updated document afterPurchase change: \", DocumentU);\n            alert(\"stock table: Updated after Purchase Change!!\");\n          }).catch(console.error);\n\n        }\n        ).catch(console.error);\n        this.setState({modalEditPurchase: false});\n        \n        this.refreshPurchaseTable(this.state.filterApplied);\n      }).catch(console.error);\n\n\n  }\n\n  deletePurchase = (id) => {\n      // let {_id} = tire;\n      \n        \n      console.log(\"Tirewith id '\",id.toString(),\"'will be deleted from database.\");\n      \n      \n\n      db.collection(\"purchaseCollection\")\n        .findOneAndDelete(\n          {_id : id}\n        )\n      .then(DocumentT => {\n        console.log(\"Deleted document: \", DocumentT);\n        let stockTire2beUpdated = {\n          \"marka\" : DocumentT.marka ,\n          \"model\" : DocumentT.model ,\n          \"taban\" : DocumentT.taban ,\n          \"oran\"  : DocumentT.oran ,\n          \"jant\"  : DocumentT.jant ,\n          \"yukEndeksi\" : DocumentT.yukEndeksi ,\n          \"hizEndeksi\" : DocumentT.hizEndeksi ,\n          \"yanakYapisi\": DocumentT.yanakYapisi ,\n          \"mevsim\": DocumentT.mevsim ,\n          \"diger\" : DocumentT.diger\n        };\n        let deletedPurchaseCost = DocumentT.birimMaliyet;\n        let deletedPurchaseCount = DocumentT.alisAdet;\n\n        db.collection(\"stockCollection\").findOne(stockTire2beUpdated).then( DocumentT =>{\n          console.log(\"deletePurchase Method/ DocumentT2beUpdated: \",DocumentT)\n          debugger;\n          //Lastigi buldun simdi stok tablosunu guncelle\n          \n          if ( (DocumentT.alisAdet - deletedPurchaseCount ) !== 0){\n              DocumentT.ortMaliyet = ((DocumentT.ortMaliyet * DocumentT.alisAdet) - (deletedPurchaseCost * deletedPurchaseCount) ) / (DocumentT.alisAdet - deletedPurchaseCount); \n          }else {\n              DocumentT.ortMaliyet = 0;\n          }\n          //DocumentT.ortMaliyet = newOrtMaliyet ;\n          DocumentT.alisAdet = DocumentT.alisAdet - deletedPurchaseCount ;\n          DocumentT.stokAdet = DocumentT.stokAdet - deletedPurchaseCount ;\n          \n          db.collection(\"stockCollection\")\n          .findOneAndReplace(stockTire2beUpdated,DocumentT).then(DocumentU => {\n            console.log(\"Updated document afterPurchase Deletion: \", DocumentU);\n            alert(\"stock table: Updated after Purchase Deletion!!\");\n          }).catch(console.error);\n\n        }\n        ).catch(console.error);\n\n        this.setState({modalDeletePurchase: false});\n        \n        this.refreshPurchaseTable(this.state.filterApplied);\n      }).catch(console.error);\n\n  }\n\n  refreshPurchaseTable = (filter) => {\n      db.collection(\"purchaseCollection\").find(filter).toArray().then(results => {\n        console.log(\"Purchases:\",results);\n        //console.log(\"TiresArray\",this.state.tires);\n        // let resArry = Object.assign({}, results);\n        \n        this.setState( {purchases : results})\n      })\n      .catch(console.error);\n        \n        \n      console.log(\"purchasesArray\",this.state.purchases);\n\n      db.collection(\"purchaseCollection\").find().toArray().then(dbResults => {\n        \n        console.log(\"will DB Results:\",dbResults);\n        \n        //prepare Options\n        let distinctFilterMarkaValues = [...new Set(dbResults.map(value => value.marka))].sort();\n        let distinctFilterTarihValues = [...new Set(dbResults.map(value => value.tarih))].sort();\n\n       \n        this.setState({ filterArrayMarka : distinctFilterMarkaValues\n                       ,filterArrayTarih : distinctFilterTarihValues       \n        });\n      })\n      .catch(console.error);\n\n\n  }\n\n  anOptionSelected = (event) => {\n\n      console.log(\"option selected: \" + event.target.value + \" of \" + event.target.id );\n      let _selOpt = String(event.target.id).substring(5);\n      let _selVal = event.target.value;\n\n      console.log(\"Tire Selected: \");\n      console.log(this.state.tireSelected);\n      // if(this.state.queryResulted1){\n      //     this.resetForm();\n      //     // this.setState({\n      //     //    queryResulted1 : false\n      //     //   ,selectedBrand : \"\"\n      //     //   ,selectedModel : \"\"\n      //     //   ,selectedTaban : \"\"\n      //     //   ,selectedOran : \"\"\n      //     //   ,selectedJant : \"\"\n      //     //   ,selectedYuk : \"\"\n      //     //   ,selectedHiz : \"\"\n      //     //   ,selectedYanak : \"\"\n      //     //   ,selectedMevsim : \"\"\n      //     //   ,selectedOther : \"\"\n              \n      //     // });\n      // }\n      this.setState((state)=> {\n          let queryResulted1 = state.queryResulted1;\n          let selectedBrand = state.selectedBrand;\n          let selectedModel = state.selectedModel;\n          let selectedTaban = state.selectedTaban;\n          let selectedOran = state.selectedOran;\n          let selectedJant = state.selectedJant;\n          let selectedYuk = state.selectedYuk;\n          let selectedHiz = state.selectedHiz;\n          let selectedYanak = state.selectedYanak;\n          let selectedMevsim = state.selectedMevsim;\n          let selectedOther = state.selectedOther;\n          // let selectedDate = state.selectedDate;\n          // let birimMaliyet = state.birimMaliyet;\n          // let alisAdet = state.alisAdet;\n          // let toplamMaliyet = state.toplamMaliyet;\n          if (state.queryResulted1){\n              queryResulted1 = false;\n              selectedBrand = \"\" ;\n              selectedModel = \"\" ;\n              selectedTaban = \"\" ;\n              selectedOran = \"\" ;\n              selectedJant = \"\" ;\n              selectedYuk = \"\" ;\n              selectedHiz = \"\" ;\n              selectedYanak = \"\" ;\n              selectedMevsim = \"\" ;\n              selectedOther = \"\" ;\n              // selectedDate = \"\" ;\n              // birimMaliyet = \"\" ;\n              // alisAdet = \"\" ;\n              // toplamMaliyet = \"\" ;\n          }\n          switch (_selOpt) {\n            case \"marka\":\n                selectedBrand = _selVal;\n              break;\n            case \"model\":\n                selectedModel = _selVal;\n              break;\n            case \"taban\":\n                selectedTaban = _selVal;\n              break;\n            case \"oran\":\n                selectedOran = _selVal;\n              break;\n            case \"jant\":\n                selectedJant = _selVal;\n              break;\n            case \"yuk\":\n                selectedYuk = _selVal;\n              break;\n            case \"hiz\":\n                selectedHiz = _selVal;\n              break;\n            case \"yanak\":\n                selectedYanak = _selVal;\n              break;\n            case \"mevsim\":\n                selectedMevsim = _selVal;\n              break;\n            case \"diger\":\n                selectedOther = _selVal;\n              break;\n          \n            default:\n              break;\n          }\n          return {selectedBrand,selectedModel,selectedTaban,selectedOran,selectedJant,selectedYuk,\n                    selectedHiz,selectedYanak,selectedMevsim,selectedOther,queryResulted1};\n      });\n      \n\n      \n      let queryFilterOptions = this.state.tireSelected;\n      \n      console.log(\"===> OptionSelected Before: \", queryFilterOptions);\n      \n \n      if  ( _selVal.includes(\"Seçin\") ) { \n          delete queryFilterOptions[_selOpt];\n\n      }else {\n            if ( _selOpt === \"taban\" || _selOpt === \"oran\" || _selOpt === \"yuk\" ) { \n              queryFilterOptions[_selOpt] = Number(_selVal);\n            }else{\n              queryFilterOptions[_selOpt] = _selVal;\n            }\n          \n      }\n      \n\n      console.log(\"Filter options after new attribute has been added: \", queryFilterOptions);\n\n      db.collection(\"inventoryCollection\").find(queryFilterOptions).toArray().then(dbResults => {\n        console.log(\"DB Results:\",dbResults);\n        let resultCount = dbResults.length;\n        //this.definedBrands = dbResults.map( value => value.marka);\n        if ( resultCount == 1) {\n          let tire = dbResults[0];\n          //const { _id,owner_id,marka,model,taban,oran,jant,yukEndeksi,hizEndeksi,desen,yanakYapisi,mevsim,diger } = tire;\n            console.log(\"-markaSelected tek kayit ife girdi\",tire.model,tire.taban,tire.oran,tire.jant);\n           \n            this.setState(\n              \n              {\n                        \n                        tireSelected : {} \n                       ,queryResulted1 : true\n                       ,selectedBrand : tire.marka\n                       ,selectedModel : tire.model\n                       ,selectedTaban : tire.taban\n                       ,selectedOran : tire.oran\n                       ,selectedJant : tire.jant\n                       ,selectedYuk : tire.yukEndeksi\n                       ,selectedHiz : tire.hizEndeksi\n                       ,selectedYanak : tire.yanakYapisi\n                       ,selectedMevsim : tire.mevsim\n                       ,selectedOther : tire.diger\n                        \n                      //  currentLevel : 20,\n                      //  modelsForTheBrand : [tire.model] ,\n                      //  tabansForSelection : [tire.taban] ,\n                      //  oransForSelection : [tire.oran],\n                      //  jantsForSelection : [tire.jant],\n                      //  yukEndeksForSelection : [tire.yukEndeksi],\n                      //  hizEndeksForSelection : [tire.hizEndeksi],\n                      //  yanaksForSelection : [tire.yanakYapisi],\n                      //  mevsimsForSelection : [tire.mevsim],\n                      //  otherInfo : [tire.diger]\n\n\n            });\n            //return;\n        }\n        //Calculate the options\n        let uniqueMarkaValues = [...new Set(dbResults.map( value => value.marka))].sort();\n        let uniqueModelValues = [...new Set(dbResults.map( value => value.model))].sort();\n        let uniqueTabanValues = [...new Set(dbResults.map( value => value.taban))].sort();\n        let uniqueOranValues = [...new Set(dbResults.map( value => value.oran))].sort();\n        let uniqueJantValues = [...new Set(dbResults.map( value => value.jant))].sort();\n        let uniqueYukValues = [...new Set(dbResults.map( value => value.yukEndeksi))].sort();\n        let uniqueHizValues = [...new Set(dbResults.map( value => value.hizEndeksi))].sort();  \n        let uniqueYanakValues = [...new Set(dbResults.map( value => value.yanakYapisi))].sort();  \n        let uniqueMevsimValues = [...new Set(dbResults.map( value => value.mevsim))].sort();  \n        let uniqueDigerValues = [...new Set(dbResults.map( value => value.diger))].sort();  \n\n        \n\n        //uniqueOranValues.unshift(\"Oran Seçin\")\n       \n        delete queryFilterOptions[\"_id\"];\n        delete queryFilterOptions[\"owner_id\"];\n\n        this.setState( (state) => {\n            let definedBrands = state.definedBrands;\n            let modelsForTheBrand = state.modelsForTheBrand;\n            let tabansForSelection = state.tabansForSelection;\n            let oransForSelection = state.oransForSelection;\n            let jantsForSelection = state.jantsForSelection;\n            let yukEndeksForSelection = state.yukEndeksForSelection;\n            let hizEndeksForSelection = state.hizEndeksForSelection;\n            let yanaksForSelection = state.yanaksForSelection;\n            let mevsimsForSelection = state.mevsimsForSelection;\n            let otherInfo =state.otherInfo;\n\n\n            definedBrands = uniqueMarkaValues ;\n            modelsForTheBrand = uniqueModelValues;\n            tabansForSelection = uniqueTabanValues;\n            oransForSelection = uniqueOranValues  ;\n            jantsForSelection = uniqueJantValues ;\n            yukEndeksForSelection = uniqueYukValues ;\n            hizEndeksForSelection = uniqueHizValues ;\n            yanaksForSelection = uniqueYanakValues ;\n            mevsimsForSelection = uniqueMevsimValues;\n            otherInfo = uniqueDigerValues;\n\n        \n            // if (_selOpt != \"marka\" ) {\n            //   definedBrands = uniqueMarkaValues ;\n            // }\n            // if (_selOpt != \"model\" ) {\n            //   modelsForTheBrand = uniqueModelValues;\n            // }\n            // if (_selOpt != \"taban\" ) {\n            //   tabansForSelection = uniqueTabanValues ;\n            // }\n            // if (_selOpt != \"oran\" ) {\n            //   oransForSelection = uniqueOranValues  ;\n            // }\n            // if (_selOpt != \"jant\"){\n            //   jantsForSelection = uniqueJantValues ;\n            // }\n            // if (_selOpt != \"yuk\"){\n            //   yukEndeksForSelection = uniqueYukValues ;\n            // }\n            // if (_selOpt != \"hiz\"){\n            //   hizEndeksForSelection = uniqueHizValues ;\n            // }\n            // if (_selOpt != \"yanak\"){\n            //   yanaksForSelection = uniqueYanakValues ;\n            // }\n            // if (_selOpt != \"mevsim\"){\n            //   mevsimsForSelection = uniqueMevsimValues;\n            // }\n            // if (_selOpt != \"\"){\n            //   otherInfo = uniqueDigerValues;\n            // }\n          \n\n            return { definedBrands,modelsForTheBrand,tabansForSelection,oransForSelection,\n                      jantsForSelection,yukEndeksForSelection,hizEndeksForSelection,yanaksForSelection,\n                        mevsimsForSelection,otherInfo};\n\n        });\n        \n      })\n      .catch(console.error);  \n      \n  }\n\n\n\n  modelSelected = (event) => {\n      let _model =  event.target.value ;\n      let queryFilterOptions = {\n        marka : this.state.tireSelected.marka,\n        model : _model\n      }\n      db.collection(\"inventoryCollection\").find(queryFilterOptions).toArray().then(dbResults => {\n  \n        let uniqueValues = [...new Set(dbResults.map( value => value.taban))];\n        console.log(\"modelSelected global unique Results: \", uniqueValues );\n        \n        if (uniqueValues.length > 1 ) {\n            uniqueValues.unshift(\"Taban Seçin\")\n        }\n        this.setState( {tabansForSelection : uniqueValues, \n                        tireSelected:{ marka: this.state.tireSelected.marka , model : _model}  });\n      })\n      .catch(console.error); \n  }\n\n  \n\n \n\n\n\n  resetForm = () => {\n    document.getElementById(\"alis-birim-maliyet-kdvsiz\").value = \"\";\n    document.getElementById(\"alis-toplam-maliyet-kdvsiz\").value = \"\";\n    db.collection(\"inventoryCollection\").find().toArray().then(dbResults => {\n        let uniqueMarkaValues = [...new Set(dbResults.map( value => value.marka))];\n        let uniqueModelValues = [...new Set(dbResults.map( value => value.model))];\n        let uniqueTabanValues = [...new Set(dbResults.map( value => value.taban))];\n        let uniqueOranValues = [...new Set(dbResults.map( value => value.oran))];\n        let uniqueJantValues = [...new Set(dbResults.map( value => value.jant))];\n        let uniqueYukValues = [...new Set(dbResults.map( value => value.yukEndeksi))];\n        let uniqueHizValues = [...new Set(dbResults.map( value => value.hizEndeksi))];  \n        let uniqueYanakValues = [...new Set(dbResults.map( value => value.yanakYapisi))];  \n        let uniqueMevsimValues = [...new Set(dbResults.map( value => value.mevsim))];  \n        let uniqueDigerValues = [...new Set(dbResults.map( value => value.diger))];  \n\n        this.setState( {\n          definedBrands : uniqueMarkaValues,\n          modelsForTheBrand : uniqueModelValues , \n          tabansForSelection : uniqueTabanValues,\n          oransForSelection : uniqueOranValues,\n          jantsForSelection : uniqueJantValues,\n          yukEndeksForSelection : uniqueYukValues,\n          hizEndeksForSelection : uniqueHizValues,\n          yanaksForSelection : uniqueYanakValues,\n          mevsimsForSelection : uniqueMevsimValues,\n          otherInfo : uniqueDigerValues,\n          tireSelected : {},\n          queryResulted1 : false\n\n          ,selectedBrand : \"\"\n          ,selectedModel : \"\"\n          ,selectedTaban : \"\"\n          ,selectedOran : \"\"\n          ,selectedJant : \"\"\n          ,selectedYuk : \"\"\n          ,selectedHiz : \"\"\n          ,selectedYanak : \"\"\n          ,selectedMevsim : \"\"\n          ,selectedOther : \"\"\n          ,selectedDate : \"\"\n          ,birimMaliyet : \"\" \n          ,alisAdet : \"\"\n          ,toplamMaliyet :\"\"\n          ,wrongInputs : [] \n          ,saveButtonPressed : false\n          });\n    });  \n  }\n\n  displayOptions = (input) => {\n    console.log(\"DISPLAY OPTIONS INPUT : \",input);\n    //let input = event.target.id.substring(5);\n    let varArray;\n    let varOptionText;\n    \n    switch (input) {\n      case \"marka\":\n          varArray = this.state.definedBrands;\n          varOptionText = \"Lastik Markasi Seçin\"\n          \n        break;\n      case \"model\":\n          console.log(\"model: \", this.state.modelsForTheBrand);\n          varArray = this.state.modelsForTheBrand;\n          varOptionText = \"Lastik Deseni Seçin\"\n        break;\n      case \"taban\":\n          console.log(\"taban: \", this.state.tabansForSelection);\n          varArray = this.state.tabansForSelection;\n          varOptionText = \"Taban Seçin\"\n        break;\n      case \"oran\":\n          console.log(\"oran: \", this.state.oransForSelection);\n          varArray = this.state.oransForSelection;\n          varOptionText = \"Oran Seçin\"\n        break;\n      case \"jant\":\n          console.log(\"jant: \",this.state.jantsForSelection);\n          varArray = this.state.jantsForSelection;\n          varOptionText = \"Ebati Seçin\"\n        break;\n      case \"yuk\":\n          console.log(\"yuk\");\n          varArray = this.state.yukEndeksForSelection;\n          varOptionText = \"Yuk Endeksi Seçin\"\n        break;\n      case \"hiz\":\n      console.log(\"hiz: \", this.state.hizEndeksForSelection);\n          varArray = this.state.hizEndeksForSelection;  \n          varOptionText = \"Hiz Endeksi Seçin\"\n        break;\n      case \"yanak\":\n          varArray = this.state.yanaksForSelection;\n          varOptionText = \"Yanak Seçin\"\n        break;\n      case \"mevsim\":\n          varArray = this.state.mevsimsForSelection;\n          varOptionText = \"Mevsim Seçin\"\n        break;\n      case \"diger\":\n          varArray = this.state.otherInfo;\n          varOptionText = \"Ek Özellik Seçin\"\n        break;\n      \n    }\n    //debugger;\n    console.log (\"-----------> TireSelected before :\", this.state.tireSelected );\n    if (varArray.length != 0 && String(varArray[0]).includes(\"Seçin\") === false ){\n       //if ( varArray[0].includes(\"Seçin\") === false ){\n        varArray.unshift(varOptionText);\n      //}\n    }\n\n\n    \n    if ( this.state.tireSelected === {} || varArray == undefined || varArray.length == 0 ) {\n      console.log(\"+++ife giriyor\");\n      return  <option>{varOptionText}</option>   \n    }\n    else{\n      console.log(\"Currently in :\",input);\n      console.log(\"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS: \",this.state.tireSelected[input]);\n      console.log(\"tire: \", this.state.tireSelected);\n\n      //document.getElementById(\"alis-\".concat(input)).placeholder =this.state.tireSelected[input];\n      return varArray.map( (item,index)=>{\n          //if ( item == this.state.tireSelected[input] ){\n          //  return <option key={input.concat(\"Options\").concat(index)} selected>{item}</option>\n         // }\n        //  else {\n            return <option key={input.concat(\"Options\").concat(index)} >{item}</option>\n      //}\n      });\n    }\n  }\n\n\n\n\n  toggleModal = (modalStateName) => {  \n    this.setState({\n      [modalStateName]: !this.state[modalStateName]\n    });\n  \n  \n  };\n\n  applyFilter = (filterObj) => {\n      debugger;\n      \n      if ( filterObj.marka ) {\n          if(filterObj.marka.includes(\"Kaldır\")){\n              delete filterObj.marka;\n          }\n          else{\n              delete filterObj.tarih;\n          }\n      }\n      else{\n        if ( filterObj.tarih.includes(\"Kaldır\")){\n            delete filterObj.tarih;\n        }else{\n            delete filterObj.marka;\n        }\n      }\n      this.refreshPurchaseTable(filterObj);\n\n      this.setState({\n        filterApplied : filterObj\n      });\n      \n      \n  }\n\n\n  \n  render() {\n    \n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          {/* Table */}\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"12\">\n            {/* <div className=\"col\"> */}\n              <Card className=\"bg-secondary shadow\">\n                <CardHeader className=\"bg-white border-0\">\n                  <Row>\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Lastik Alim Gir</h3>\n                    </Col>\n                    <Col className=\"text-right\" xs=\"4\">\n                      \n                      <Button \n                          color=\"danger\" \n                          type=\"button\"\n                          size=\"sm\"\n                          onClick={this.resetForm}\n                          >\n                          <span className=\"btn-inner--icon\">\n                                    {/* <i className=\"ni ni-folder-17\" /> */}\n                                    <i className=\"fas fa-eraser\" />\n                                  </span>\n                                  <span className=\"btn-inner--text\">Sıfırla</span>\n                      </Button>\n                    </Col>\n                    \n                  </Row>\n                </CardHeader>\n                {/* <CardBody className=\"bg-secondary shadow\"> */}\n                <CardBody>\n                <Form>\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Lastik Bilgileri\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label htmlFor=\"alis-marka\"\n                                className=\"form-control-label\"\n                              >\n                                Marka\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                                // className=\"form-control-alternative\"\n                                className = { (this.inputSetCorrectlyFor(\"marka\")  ?  \"form-control-alternative\" : \"is-invalid\" )}\n                                id=\"alis-marka\"\n                                value={this.state.selectedBrand}\n                                onChange={this.anOptionSelected}\n                                >\n                                  {this.displayOptions(\"marka\")}\n                              </Input>\n\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label htmlFor=\"alis-model\"\n                                className=\"form-control-label\"\n                              >\n                                Desen\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"model\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-model\"\n                              value = {this.state.selectedModel}                                      \n                              onChange={this.anOptionSelected}\n                              >\n\n                                {this.displayOptions(\"model\")}\n\n                            </Input>\n\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                          <label htmlFor=\"alis-taban\"\n                                className=\"form-control-label\"\n                              >\n                                Taban\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"taban\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-taban\"\n                              value ={this.state.selectedTaban}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"taban\")}\n\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"alis-oran\"\n                                className=\"form-control-label\"\n                              >\n                                Oran\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"oran\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-oran\"\n                              value={this.state.selectedOran}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"oran\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n\n                        <Col lg=\"3\">\n                          <FormGroup>\n                          <label htmlFor=\"alis-jant\"\n                                className=\"form-control-label\"\n                              >\n                                Jant\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"jant\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-jant\"\n                              value = {this.state.selectedJant}\n                              onChange= {this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"jant\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"alis-yuk\"\n                                className=\"form-control-label\"\n                              >\n                                Yuk Endeksi\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"yuk\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-yuk\"\n                              value={this.state.selectedYuk}\n                              onChange = {this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"yuk\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                          <label htmlFor=\"alis-hiz\"\n                                className=\"form-control-label\"\n                              >\n                                Hiz Endeksi\n                              </label>\n                            \n                              \n                              <Input type=\"select\" \n                              className={ (this.inputSetCorrectlyFor(\"hiz\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-hiz\"\n                              value={this.state.selectedHiz}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"hiz\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n\n                      </Row>\n\n                      <Row>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label htmlFor=\"alis-yanak\"\n                              className=\"form-control-label\"\n                              \n                            >\n                              Yanak Yapisi\n                            </label>\n\n                            <Input\n                              className={ (this.inputSetCorrectlyFor(\"yanak\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-yanak\"\n                              type=\"select\"\n                              value={this.state.selectedYanak}\n                              onChange={this.anOptionSelected}\n                            >\n                            {this.displayOptions(\"yanak\")}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label htmlFor=\"alis-mevsim\"\n                              className=\"form-control-label\"\n                              \n                            >\n                              Mevsim\n                            </label>\n\n                            <Input\n                              type=\"select\"\n                              // className=\"form-control-alternative\"\n                              className={ (this.inputSetCorrectlyFor(\"mevsim\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-mevsim\"\n                              value = {this.state.selectedMevsim}\n                              onChange={this.anOptionSelected}\n                            >\n                             {this.displayOptions(\"mevsim\")} \n                           {/* <option>ilkbahar</option>\n                           <option>Yaz</option>\n                           <option>Sonbahar</option>\n                           <option>Kiss</option> */}\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                        <FormGroup > \n                              <label htmlFor=\"alis-diger\"\n                                className=\"form-control-label\"\n                              >\n                                Diger\n                              </label>\n                            \n                              <Input type=\"select\"\n                              //placeholder=\"Ek ozellikler...\" \n                              className={ (this.inputSetCorrectlyFor(\"diger\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-diger\"\n                              value={this.state.selectedOther}\n                              onChange={this.anOptionSelected}\n                              >\n                                {this.displayOptions(\"diger\")}\n                              </Input>\n\n                              {/* <Input type=\"text\"\n                              placeholder=\"Ek ozellikler...\" \n                              className=\"form-control-alternative\"\n                              id=\"alis-diger\"\n                              /> */}\n                              \n                            \n          \n                            </FormGroup> \n                        </Col>\n                      </Row>\n                      \n                      <Row>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"alis-birim-maliyet\"\n                            >\n                              Birim Maliyeti (KDV Dahil)\n                            </label>\n                            <Input\n                              className={ (this.inputSetCorrectlyFor(\"birim\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              //defaultValue=\"Lucky\"\n                              id=\"alis-birim-maliyet\"\n                              placeholder=\"₺ Cinsinden\"\n                              type=\"number\"\n                              value= {this.state.birimMaliyet}\n                              onChange={this.inputBirimChanged}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"2\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"alis-adet\"\n                            >\n                              Adet\n                            </label>\n                            <Input\n                              className={ (this.inputSetCorrectlyFor(\"adet\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                        \n                              id=\"alis-adet\"\n                              placeholder=\"0\"\n                              type=\"number\"\n                              min=\"1\"\n                              value={this.state.alisAdet}\n                              onChange={this.adetChanged}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"4\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"alis-toplam-maliyet\"\n                            >\n                              Toplam Maliyet (KDV Dahil)\n                            </label>\n                            <Input\n                              className= { (this.inputSetCorrectlyFor(\"toplam\") ) ? \"form-control-alternative\" : \"is-invalid\" }\n                              id=\"alis-toplam-maliyet\"\n                              placeholder=\"₺ Cinsinden\"\n                              type=\"number\"\n                              value ={this.state.toplamMaliyet}\n                              onChange={this.inputToplamChanged}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"3\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"alis-tarih\"\n                            >\n                              Tarih\n                            </label>\n                            {/* <Input\n                              className=\"form-control-alternative\"\n                              defaultValue =\"01/01/0001\"\n                              id=\"input-country\"\n                              placeholder=\"Country\"\n                              type= \"date\"\n                            /> */}\n                            <Datepicker \n                              id=\"alis-tarih\"\n                              className= { (this.inputSetCorrectlyFor(\"date\") ) ?   \"is-invalid\" : \"form-control-alternative\" }\n                              placeholder = \"Alım Tarihini Seçin\"\n                              // defaultValue={new Date()}                          \n                              value={this.state.selectedDate}\n                              onChange={this.inputDateChanged}\n                            ></Datepicker>\n                          \n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\" className=\"text-right\">\n                          \n                                \n                                <Button block className=\"btn-icon btn-3\" color=\"primary\" type=\"button\" \n                                    size=\"lg\"\n                                    onClick={this.savePurchase}    \n                                >\n                                  <span className=\"btn-inner--icon\">\n                                    {/* <i className=\"ni ni-folder-17\" /> */}\n                                    <i className=\"fas fa-save\" />\n                                  </span>\n                                  <span className=\"btn-inner--text\">Alım Gir</span>\n                                </Button>\n                          {/* </FormGroup>  */}\n                       \n                        </Col>\n                      </Row>\n                      \n                    </div>\n                    \n                    <hr className=\"my-4\" />\n                    {/* Address */}\n                    <h6 className=\"heading-small text-muted mb-4\">\n                      Fatura Hesaplama Bilgileri\n                    </h6>\n                    <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"alis-birim-maliyet-kdvsiz\"\n                              \n                            >\n                              Birim Maliyet (KDV Haric)\n                            </label>\n                            <Input disabled\n                              className=\"form-control-alternative\"\n                              id=\"alis-birim-maliyet-kdvsiz\"\n                              placeholder=\"- ₺\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"alis-toplam-maliyet-kdvsiz\"\n                              \n                            >\n                              Toplam Maliyet (KDV Haric)\n                            </label>\n                            <Input disabled\n                              className=\"form-control-alternative\"\n                              id=\"alis-toplam-maliyet-kdvsiz\"\n                              placeholder=\"- ₺\"\n                              type=\"text\"\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n                    {/* Description */}\n                    \n                    \n                  </Form>\n                </CardBody>\n              </Card>\n            {/* </div> */}\n            </Col>\n          </Row>\n          <hr className=\"my-4\" />\n          <Row>\n\n            <Col className=\"order-xl-1\" xl=\"12\">\n              <AlisDataTable  mainTitle=\"Mevcut Lastik Alımları\" \n                          columnTitles={[\"Marka\",\"Desen\",\"Ebat\",\"Tarih\",\"Adet\",\"Birim Fiyat\",\"Diğer\"]}\n                          data={this.state.purchases}\n                          deleteModalStateName= \"modalDeletePurchase\"\n                          editModalStateName=\"modalEditPurchase\"\n                          toggleFunc={this.toggleModal}\n                          confirmFunc={this.deletePurchase}\n                          editFunc={this.editPurchase}\n                          isConfirmModalVisible= {this.state.modalDeletePurchase}\n                          isEditModalVisible={this.state.modalEditPurchase}\n                          markaFilterOptions={this.state.filterArrayMarka}\n                          tarihFilterOptions={this.state.filterArrayTarih}\n                          filterFunc={this.applyFilter}\n                          filter={this.state.filterApplied}\n              />\n            </Col>\n          </Row>\n          \n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Alis;\n\n\n\n// displayModelOptions = () => {\n//   console.log(\"displayModelOptions: \",this.state.modelsForTheBrand);\n  \n//   if ( this.state.modelsForTheBrand == undefined || this.state.modelsForTheBrand.length == 0 ) {\n//     return  <option>Lastik Modeli Secimi</option>   \n//   }\n//   else{\n//     return this.state.modelsForTheBrand.map( (item,index)=>{\n//       return <option key={\"modelOptions\".concat(index)} >{item}</option>\n//     });\n//   }\n// }","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Index from \"views/Index.jsx\";\nimport Profile from \"views/examples/Profile.jsx\";\nimport Satis from \"views/examples/Satis.jsx\";\n// import Register from \"views/examples/Register.jsx\";\n// import Login from \"views/examples/Login.jsx\";\nimport Tanim from \"views/examples/Tanim.jsx\";\n// import Icons from \"views/examples/Icons.jsx\";\nimport Alis from \"./views/examples/Alis\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Stok Kontrol\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/alis\",\n    name: \"Alış\",\n    icon: \"ni ni-delivery-fast text-blue\",\n    component: Alis,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/satis\",\n    name: \"Satış\",\n    icon: \"ni ni-money-coins text-orange\",\n    component: Satis,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Sipariş\",\n    icon: \"ni ni-cart text-yellow\",\n    component: Profile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/tanim\",\n    name: \"Lastikler\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Tanim,\n    layout: \"/admin\"\n   }\n  //,\n  // {\n  //   path: \"/login\",\n  //   name: \"Login\",\n  //   icon: \"ni ni-key-25 text-info\",\n  //   component: Login,\n  //   layout: \"/auth\"\n  // },\n  // {\n  //   path: \"/register\",\n  //   name: \"Register\",\n  //   icon: \"ni ni-circle-08 text-pink\",\n  //   component: Register,\n  //   layout: \"/auth\"\n  // }\n];\n\n// const  MongoClient = require('mongodb').MongoClient;\n// const uri = \"mongodb+srv://emreKommez:lastikPark48@bodcluster-whupa.mongodb.net/admin?retryWrites=true&w=majority\";\n// MongoClient.connect(uri,function(err,db){\n//   console.log(\"Connected.\");\n//   db.close();\n// });\n\n\n\n\n\nexport default routes;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport AdminFooter from \"components/Footers/AdminFooter.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/argon-react.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img alt=\"...\" src={require(\"assets/img/brand/argon-react-white.png\")} />\n            </NavbarBrand>\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n              <div className=\"navbar-collapse-header d-md-none\">\n                <Row>\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    <Link to=\"/\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/brand/argon-react.png\")}\n                      />\n                    </Link>\n                  </Col>\n                  <Col className=\"collapse-close\" xs=\"6\">\n                    <button\n                      className=\"navbar-toggler\"\n                      id=\"navbar-collapse-main\"\n                    >\n                      <span />\n                      <span />\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                    <i className=\"ni ni-planet\" />\n                    <span className=\"nav-link-inner--text\">Dashboard</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/register\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-circle-08\" />\n                    <span className=\"nav-link-inner--text\">Register</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/login\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-key-25\" />\n                    <span className=\"nav-link-inner--text\">Login</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/admin/user-profile\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-single-02\" />\n                    <span className=\"nav-link-inner--text\">Profile</span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        {/* <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2018{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Creative Tim\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Creative Tim\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>*/}\n    </> \n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.jsx\";\nimport AuthFooter from \"components/Footers/AuthFooter.jsx\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Use these awesome forms to login or create new account in\n                      your project for free.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>{this.getRoutes(routes)}</Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/vendor/nucleo/css/nucleo.css\";\nimport \"assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.jsx\";\nimport AuthLayout from \"layouts/Auth.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/index\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/sketch.e7c82e5c.jpg\";"],"sourceRoot":""}